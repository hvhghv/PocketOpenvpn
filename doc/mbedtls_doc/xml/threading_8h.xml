<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="threading_8h" kind="file" language="C++">
    <compoundname>threading.h</compoundname>
    <includes refid="private__access_8h" local="yes">mbedtls/private_access.h</includes>
    <includes refid="mbedtls_2build__info_8h" local="yes">mbedtls/build_info.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">pthread.h</includes>
    <includedby refid="entropy_8h" local="yes">entropy.h</includedby>
    <includedby refid="ctr__drbg_8h" local="yes">ctr_drbg.h</includedby>
    <includedby refid="rsa_8h" local="yes">rsa.h</includedby>
    <includedby refid="hmac__drbg_8h" local="yes">hmac_drbg.h</includedby>
    <includedby refid="ssl__cache_8h" local="yes">ssl_cache.h</includedby>
    <includedby refid="ssl__ticket_8h" local="yes">ssl_ticket.h</includedby>
    <incdepgraph>
      <node id="12">
        <label>psa/crypto_adjust_auto_enabled.h</label>
        <link refid="crypto__adjust__auto__enabled_8h"/>
      </node>
      <node id="15">
        <label>mbedtls/config_adjust_x509.h</label>
        <link refid="config__adjust__x509_8h"/>
      </node>
      <node id="16">
        <label>mbedtls/config_adjust_ssl.h</label>
        <link refid="config__adjust__ssl_8h"/>
      </node>
      <node id="19">
        <label>stdint.h</label>
      </node>
      <node id="20">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>threading.h</label>
        <link refid="threading_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>psa/crypto_adjust_config_key_pair_types.h</label>
        <link refid="crypto__adjust__config__key__pair__types_8h"/>
      </node>
      <node id="13">
        <label>mbedtls/config_adjust_psa_from_legacy.h</label>
        <link refid="config__adjust__psa__from__legacy_8h"/>
      </node>
      <node id="18">
        <label>limits.h</label>
      </node>
      <node id="3">
        <label>mbedtls/build_info.h</label>
        <link refid="mbedtls_2build__info_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>psa/crypto_config.h</label>
        <link refid="crypto__config_8h"/>
      </node>
      <node id="21">
        <label>pthread.h</label>
      </node>
      <node id="14">
        <label>mbedtls/config_adjust_legacy_crypto.h</label>
        <link refid="config__adjust__legacy__crypto_8h"/>
      </node>
      <node id="17">
        <label>mbedtls/check_config.h</label>
        <link refid="check__config_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>mbedtls/config_adjust_legacy_from_psa.h</label>
        <link refid="config__adjust__legacy__from__psa_8h"/>
      </node>
      <node id="4">
        <label>mbedtls/mbedtls_config.h</label>
        <link refid="mbedtls__config_8h"/>
      </node>
      <node id="6">
        <label>mbedtls/config_psa.h</label>
        <link refid="config__psa_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>psa/crypto_adjust_config_synonyms.h</label>
        <link refid="crypto__adjust__config__synonyms_8h"/>
      </node>
      <node id="2">
        <label>mbedtls/private_access.h</label>
        <link refid="private__access_8h"/>
      </node>
      <node id="9">
        <label>mbedtls/config_adjust_psa_superset_legacy.h</label>
        <link refid="config__adjust__psa__superset__legacy_8h"/>
      </node>
      <node id="7">
        <label>psa/crypto_legacy.h</label>
        <link refid="crypto__legacy_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>ssl_ciphersuites.h</label>
        <link refid="ssl__ciphersuites_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="1">
        <label>threading.h</label>
        <link refid="threading_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>x509_csr.h</label>
        <link refid="x509__csr_8h"/>
      </node>
      <node id="2">
        <label>entropy.h</label>
        <link refid="entropy_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ssl_cookie.h</label>
        <link refid="ssl__cookie_8h"/>
      </node>
      <node id="14">
        <label>x509.h</label>
        <link refid="x509_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>hmac_drbg.h</label>
        <link refid="hmac__drbg_8h"/>
      </node>
      <node id="8">
        <label>ssl.h</label>
        <link refid="ssl_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ssl_ticket.h</label>
        <link refid="ssl__ticket_8h"/>
      </node>
      <node id="11">
        <label>ssl_cache.h</label>
        <link refid="ssl__cache_8h"/>
      </node>
      <node id="6">
        <label>pk.h</label>
        <link refid="pk_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ctr_drbg.h</label>
        <link refid="ctr__drbg_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>pkcs7.h</label>
        <link refid="pkcs7_8h"/>
      </node>
      <node id="19">
        <label>oid.h</label>
        <link refid="oid_8h"/>
      </node>
      <node id="10">
        <label>net_sockets.h</label>
        <link refid="net__sockets_8h"/>
      </node>
      <node id="4">
        <label>psa_util.h</label>
        <link refid="psa__util_8h"/>
      </node>
      <node id="17">
        <label>x509_crl.h</label>
        <link refid="x509__crl_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>x509_crt.h</label>
        <link refid="x509__crt_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>rsa.h</label>
        <link refid="rsa_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmbedtls__threading__mutex__t" prot="public">mbedtls_threading_mutex_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="threading_8h_1a76cd79a1ed3fd583ed3a4428d6a1e967" prot="public" static="no">
        <name>MBEDTLS_ERR_THREADING_BAD_INPUT_DATA</name>
        <initializer>-0x001C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bad input parameters to function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" line="23" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="threading_8h_1a51005c51b928706511d3c2ea3390c07f" prot="public" static="no">
        <name>MBEDTLS_ERR_THREADING_MUTEX_ERROR</name>
        <initializer>-0x001E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Locking / unlocking / free failed with error code. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" line="25" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="threading_8h_1a350562522f4a97dde72cd9c97bddc7b1" prot="public" static="no">
        <type>struct <ref refid="structmbedtls__threading__mutex__t" kindref="compound">mbedtls_threading_mutex_t</ref></type>
        <definition>typedef struct mbedtls_threading_mutex_t mbedtls_threading_mutex_t</definition>
        <argsstring></argsstring>
        <name>mbedtls_threading_mutex_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" line="35" column="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="threading_8h_1a197b6c71b89a7db14e6540c1280d4b1f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* mbedtls_mutex_init) (mbedtls_threading_mutex_t *mutex)</definition>
        <argsstring>)(mbedtls_threading_mutex_t *mutex)</argsstring>
        <name>mbedtls_mutex_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" line="77" column="8" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" declline="77" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="threading_8h_1a623f4688707b88f2ee3313b64f505c0e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* mbedtls_mutex_free) (mbedtls_threading_mutex_t *mutex)</definition>
        <argsstring>)(mbedtls_threading_mutex_t *mutex)</argsstring>
        <name>mbedtls_mutex_free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" line="78" column="8" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" declline="78" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="threading_8h_1af42238b3b7d16726a7b87edf7e7a68fe" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* mbedtls_mutex_lock) (mbedtls_threading_mutex_t *mutex)</definition>
        <argsstring>)(mbedtls_threading_mutex_t *mutex)</argsstring>
        <name>mbedtls_mutex_lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" line="79" column="8" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" declline="79" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="threading_8h_1a98737d8d49dfb29a36efc3d9ef7cf13c" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* mbedtls_mutex_unlock) (mbedtls_threading_mutex_t *mutex)</definition>
        <argsstring>)(mbedtls_threading_mutex_t *mutex)</argsstring>
        <name>mbedtls_mutex_unlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" line="80" column="8" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" declline="80" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="threading_8h_1a87bbccdf40874b80a9f7313627734c38" prot="public" static="no" mutable="no">
        <type><ref refid="structmbedtls__threading__mutex__t" kindref="compound">mbedtls_threading_mutex_t</ref></type>
        <definition>mbedtls_threading_mutex_t mbedtls_threading_readdir_mutex</definition>
        <argsstring></argsstring>
        <name>mbedtls_threading_readdir_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" line="86" column="34" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" declline="86" declcolumn="34"/>
      </memberdef>
      <memberdef kind="variable" id="threading_8h_1a81df682884dc24198fb7fc86c6100f34" prot="public" static="no" mutable="no">
        <type><ref refid="structmbedtls__threading__mutex__t" kindref="compound">mbedtls_threading_mutex_t</ref></type>
        <definition>mbedtls_threading_mutex_t mbedtls_threading_gmtime_mutex</definition>
        <argsstring></argsstring>
        <name>mbedtls_threading_gmtime_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" line="96" column="34" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h" declline="96" declcolumn="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Threading abstraction layer. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>The<sp/>Mbed<sp/>TLS<sp/>Contributors</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-License-Identifier:<sp/>Apache-2.0<sp/>OR<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MBEDTLS_THREADING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_THREADING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="private__access_8h" kindref="compound">mbedtls/private_access.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mbedtls_2build__info_8h" kindref="compound">mbedtls/build_info.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="threading_8h_1a76cd79a1ed3fd583ed3a4428d6a1e967" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ERR_THREADING_BAD_INPUT_DATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0x001C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="threading_8h_1a51005c51b928706511d3c2ea3390c07f" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ERR_THREADING_MUTEX_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0x001E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_THREADING_PTHREAD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structmbedtls__threading__mutex__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmbedtls__threading__mutex__t" kindref="compound">mbedtls_threading_mutex_t</ref><sp/>{</highlight></codeline>
<codeline lineno="30" refid="structmbedtls__threading__mutex__t_1a8d7f88a1c24d4500634a519408c63725" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_t<sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(mutex);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>is_valid<sp/>is<sp/>0<sp/>after<sp/>a<sp/>failed<sp/>init<sp/>or<sp/>a<sp/>free,<sp/>and<sp/>nonzero<sp/>after<sp/>a</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>successful<sp/>init.<sp/>This<sp/>field<sp/>is<sp/>not<sp/>considered<sp/>part<sp/>of<sp/>the<sp/>public</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>API<sp/>of<sp/>Mbed<sp/>TLS<sp/>and<sp/>may<sp/>change<sp/>without<sp/>notice.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structmbedtls__threading__mutex__t_1a65bc4d6f4c5f6ef95c26215b4fb9b5a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(is_valid);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/><ref refid="threading_8h_1a350562522f4a97dde72cd9c97bddc7b1" kindref="member">mbedtls_threading_mutex_t</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_THREADING_ALT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>You<sp/>should<sp/>define<sp/>the<sp/>mbedtls_threading_mutex_t<sp/>type<sp/>in<sp/>your<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;threading_alt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mbedtls_threading_set_alt(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*mutex_init)(<ref refid="structmbedtls__threading__mutex__t" kindref="compound">mbedtls_threading_mutex_t</ref><sp/>*),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*mutex_free)(<ref refid="structmbedtls__threading__mutex__t" kindref="compound">mbedtls_threading_mutex_t</ref><sp/>*),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*mutex_lock)(<ref refid="structmbedtls__threading__mutex__t" kindref="compound">mbedtls_threading_mutex_t</ref><sp/>*),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*mutex_unlock)(<ref refid="structmbedtls__threading__mutex__t" kindref="compound">mbedtls_threading_mutex_t</ref><sp/>*));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mbedtls_threading_free_alt(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MBEDTLS_THREADING_ALT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_THREADING_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>The<sp/>function<sp/>pointers<sp/>for<sp/>mutex_init,<sp/>mutex_free,<sp/>mutex_<sp/>and<sp/>mutex_unlock</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>All<sp/>these<sp/>functions<sp/>are<sp/>expected<sp/>to<sp/>work<sp/>or<sp/>the<sp/>result<sp/>will<sp/>be<sp/>undefined.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="threading_8h_1a197b6c71b89a7db14e6540c1280d4b1f" kindref="member">mbedtls_mutex_init</ref>)(<ref refid="structmbedtls__threading__mutex__t" kindref="compound">mbedtls_threading_mutex_t</ref><sp/>*mutex);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="threading_8h_1a623f4688707b88f2ee3313b64f505c0e" kindref="member">mbedtls_mutex_free</ref>)(<ref refid="structmbedtls__threading__mutex__t" kindref="compound">mbedtls_threading_mutex_t</ref><sp/>*mutex);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="threading_8h_1af42238b3b7d16726a7b87edf7e7a68fe" kindref="member">mbedtls_mutex_lock</ref>)(<ref refid="structmbedtls__threading__mutex__t" kindref="compound">mbedtls_threading_mutex_t</ref><sp/>*mutex);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="threading_8h_1a98737d8d49dfb29a36efc3d9ef7cf13c" kindref="member">mbedtls_mutex_unlock</ref>)(<ref refid="structmbedtls__threading__mutex__t" kindref="compound">mbedtls_threading_mutex_t</ref><sp/>*mutex);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>Global<sp/>mutexes</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_FS_IO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structmbedtls__threading__mutex__t" kindref="compound">mbedtls_threading_mutex_t</ref><sp/><ref refid="threading_8h_1a87bbccdf40874b80a9f7313627734c38" kindref="member">mbedtls_threading_readdir_mutex</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_HAVE_TIME_DATE)<sp/>&amp;&amp;<sp/>!defined(MBEDTLS_PLATFORM_GMTIME_R_ALT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>mutex<sp/>may<sp/>or<sp/>may<sp/>not<sp/>be<sp/>used<sp/>in<sp/>the<sp/>default<sp/>definition<sp/>of</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>mbedtls_platform_gmtime_r(),<sp/>but<sp/>in<sp/>order<sp/>to<sp/>determine<sp/>that,</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>we<sp/>need<sp/>to<sp/>check<sp/>POSIX<sp/>features,<sp/>hence<sp/>modify<sp/>_POSIX_C_SOURCE.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>With<sp/>the<sp/>current<sp/>approach,<sp/>this<sp/>declaration<sp/>is<sp/>orphaned,<sp/>lacking</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>an<sp/>accompanying<sp/>definition,<sp/>in<sp/>case<sp/>mbedtls_platform_gmtime_r()</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>doesn&apos;t<sp/>need<sp/>it,<sp/>but<sp/>that&apos;s<sp/>not<sp/>a<sp/>problem.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structmbedtls__threading__mutex__t" kindref="compound">mbedtls_threading_mutex_t</ref><sp/><ref refid="threading_8h_1a81df682884dc24198fb7fc86c6100f34" kindref="member">mbedtls_threading_gmtime_mutex</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MBEDTLS_HAVE_TIME_DATE<sp/>&amp;&amp;<sp/>!MBEDTLS_PLATFORM_GMTIME_R_ALT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MBEDTLS_THREADING_C<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>threading.h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/threading.h"/>
  </compounddef>
</doxygen>
