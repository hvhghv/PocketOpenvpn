<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="config__adjust__legacy__crypto_8h" kind="file" language="C++">
    <compoundname>config_adjust_legacy_crypto.h</compoundname>
    <includedby refid="mbedtls_2build__info_8h" local="yes">build_info.h</includedby>
    <invincdepgraph>
      <node id="73">
        <label>lms.h</label>
        <link refid="lms_8h"/>
      </node>
      <node id="75">
        <label>pem.h</label>
        <link refid="pem_8h"/>
      </node>
      <node id="69">
        <label>sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>aria.h</label>
        <link refid="aria_8h"/>
      </node>
      <node id="23">
        <label>pkcs5.h</label>
        <link refid="pkcs5_8h"/>
      </node>
      <node id="52">
        <label>dhm.h</label>
        <link refid="dhm_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>crypto_builtin_composites.h</label>
        <link refid="crypto__builtin__composites_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ssl_ciphersuites.h</label>
        <link refid="ssl__ciphersuites_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="13">
        <label>debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="49">
        <label>ecp.h</label>
        <link refid="ecp_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>hkdf.h</label>
        <link refid="hkdf_8h"/>
      </node>
      <node id="57">
        <label>threading.h</label>
        <link refid="threading_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>platform_time.h</label>
        <link refid="platform__time_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>x509_csr.h</label>
        <link refid="x509__csr_8h"/>
      </node>
      <node id="3">
        <label>aes.h</label>
        <link refid="aes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>entropy.h</label>
        <link refid="entropy_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>crypto_extra.h</label>
        <link refid="crypto__extra_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>crypto.h</label>
        <link refid="crypto_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ssl_cookie.h</label>
        <link refid="ssl__cookie_8h"/>
      </node>
      <node id="72">
        <label>error.h</label>
        <link refid="error_8h"/>
      </node>
      <node id="60">
        <label>crypto_types.h</label>
        <link refid="crypto__types_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>nist_kw.h</label>
        <link refid="nist__kw_8h"/>
      </node>
      <node id="10">
        <label>x509.h</label>
        <link refid="x509_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>gcm.h</label>
        <link refid="gcm_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>platform_util.h</label>
        <link refid="platform__util_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>sha512.h</label>
        <link refid="sha512_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>md5.h</label>
        <link refid="md5_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>build_info.h</label>
        <link refid="mbedtls_2build__info_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>hmac_drbg.h</label>
        <link refid="hmac__drbg_8h"/>
      </node>
      <node id="71">
        <label>sha3.h</label>
        <link refid="sha3_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ssl.h</label>
        <link refid="ssl_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ssl_ticket.h</label>
        <link refid="ssl__ticket_8h"/>
      </node>
      <node id="29">
        <label>crypto_struct.h</label>
        <link refid="crypto__struct_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>ecdsa.h</label>
        <link refid="ecdsa_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>crypto_builtin_primitives.h</label>
        <link refid="crypto__builtin__primitives_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ssl_cache.h</label>
        <link refid="ssl__cache_8h"/>
      </node>
      <node id="1">
        <label>config_adjust_legacy_crypto.h</label>
        <link refid="config__adjust__legacy__crypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>crypto_driver_contexts_key_derivation.h</label>
        <link refid="crypto__driver__contexts__key__derivation_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ccm.h</label>
        <link refid="ccm_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>pk.h</label>
        <link refid="pk_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ctr_drbg.h</label>
        <link refid="ctr__drbg_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>pkcs7.h</label>
        <link refid="pkcs7_8h"/>
      </node>
      <node id="21">
        <label>oid.h</label>
        <link refid="oid_8h"/>
      </node>
      <node id="14">
        <label>net_sockets.h</label>
        <link refid="net__sockets_8h"/>
      </node>
      <node id="35">
        <label>crypto_driver_contexts_primitives.h</label>
        <link refid="crypto__driver__contexts__primitives_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>crypto_platform.h</label>
        <link refid="crypto__platform_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>crypto_sizes.h</label>
        <link refid="crypto__sizes_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>poly1305.h</label>
        <link refid="poly1305_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>ecjpake.h</label>
        <link refid="ecjpake_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>psa_util.h</label>
        <link refid="psa__util_8h"/>
      </node>
      <node id="53">
        <label>base64.h</label>
        <link refid="base64_8h"/>
      </node>
      <node id="77">
        <label>version.h</label>
        <link refid="version_8h"/>
      </node>
      <node id="61">
        <label>crypto_driver_common.h</label>
        <link refid="crypto__driver__common_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>ecdh.h</label>
        <link refid="ecdh_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>crypto_driver_contexts_composites.h</label>
        <link refid="crypto__driver__contexts__composites_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>des.h</label>
        <link refid="des_8h"/>
      </node>
      <node id="58">
        <label>build_info.h</label>
        <link refid="psa_2build__info_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>camellia.h</label>
        <link refid="camellia_8h"/>
      </node>
      <node id="33">
        <label>cmac.h</label>
        <link refid="cmac_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>crypto_builtin_key_derivation.h</label>
        <link refid="crypto__builtin__key__derivation_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>cipher.h</label>
        <link refid="cipher_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>md.h</label>
        <link refid="md_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>chachapoly.h</label>
        <link refid="chachapoly_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>x509_crl.h</label>
        <link refid="x509__crl_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>memory_buffer_alloc.h</label>
        <link refid="memory__buffer__alloc_8h"/>
      </node>
      <node id="11">
        <label>x509_crt.h</label>
        <link refid="x509__crt_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>asn1.h</label>
        <link refid="asn1_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>rsa.h</label>
        <link refid="rsa_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>chacha20.h</label>
        <link refid="chacha20_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>asn1write.h</label>
        <link refid="asn1write_8h"/>
      </node>
      <node id="68">
        <label>sha1.h</label>
        <link refid="sha1_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>crypto_se_driver.h</label>
        <link refid="crypto__se__driver_8h"/>
      </node>
      <node id="22">
        <label>pkcs12.h</label>
        <link refid="pkcs12_8h"/>
      </node>
      <node id="76">
        <label>timing.h</label>
        <link refid="timing_8h"/>
      </node>
    </invincdepgraph>
    <briefdescription>
<para>Adjust legacy configuration configuration. </para>
    </briefdescription>
    <detaileddescription>
<para>Automatically enable certain dependencies. Generally, MBEDLTS_xxx configurations need to be explicitly enabled by the user: enabling MBEDTLS_xxx_A but not MBEDTLS_xxx_B when A requires B results in a compilation error. However, we do automatically enable certain options in some circumstances. One case is if MBEDTLS_xxx_B is an internal option used to identify parts of a module that are used by other module, and we don&apos;t want to make the symbol MBEDTLS_xxx_B part of the public API. Another case is if A didn&apos;t depend on B in earlier versions, and we want to use B in A but we need to preserve backward compatibility with configurations that explicitly activate MBEDTLS_xxx_A but not MBEDTLS_xxx_B. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="17"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>The<sp/>Mbed<sp/>TLS<sp/>Contributors</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-License-Identifier:<sp/>Apache-2.0<sp/>OR<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MBEDTLS_CONFIG_ADJUST_LEGACY_CRYPTO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_CONFIG_ADJUST_LEGACY_CRYPTO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Auto-enable<sp/>MBEDTLS_MD_LIGHT<sp/>based<sp/>on<sp/>MBEDTLS_MD_C.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>This<sp/>allows<sp/>checking<sp/>for<sp/>MD_LIGHT<sp/>rather<sp/>than<sp/>MD_LIGHT<sp/>||<sp/>MD_C.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_MD_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_MD_LIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Auto-enable<sp/>MBEDTLS_MD_LIGHT<sp/>if<sp/>needed<sp/>by<sp/>a<sp/>module<sp/>that<sp/>didn&apos;t<sp/>require<sp/>it</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>in<sp/>a<sp/>previous<sp/>release,<sp/>to<sp/>ensure<sp/>backwards<sp/>compatibility.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECJPAKE_C)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(MBEDTLS_PEM_PARSE_C)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(MBEDTLS_ENTROPY_C)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(MBEDTLS_PK_C)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(MBEDTLS_PKCS12_C)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(MBEDTLS_RSA_C)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(MBEDTLS_SSL_TLS_C)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(MBEDTLS_X509_USE_C)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(MBEDTLS_X509_CREATE_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_MD_LIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MBEDTLS_ECP_LIGHT<sp/>is<sp/>auto-enabled<sp/>by<sp/>the<sp/>following<sp/>symbols:</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>-<sp/>MBEDTLS_ECP_C<sp/>because<sp/>now<sp/>it<sp/>consists<sp/>of<sp/>MBEDTLS_ECP_LIGHT<sp/>plus<sp/>functions</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/><sp/>for<sp/>curve<sp/>arithmetic.<sp/>As<sp/>a<sp/>consequence<sp/>if<sp/>MBEDTLS_ECP_C<sp/>is<sp/>required<sp/>for</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/><sp/>some<sp/>reason,<sp/>then<sp/>MBEDTLS_ECP_LIGHT<sp/>should<sp/>be<sp/>enabled<sp/>as<sp/>well.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>-<sp/>MBEDTLS_PK_PARSE_EC_EXTENDED<sp/>and<sp/>MBEDTLS_PK_PARSE_EC_COMPRESSED<sp/>because</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/><sp/><sp/>these<sp/>features<sp/>are<sp/>not<sp/>supported<sp/>in<sp/>PSA<sp/>so<sp/>the<sp/>only<sp/>way<sp/>to<sp/>have<sp/>them<sp/>is</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/><sp/>to<sp/>enable<sp/>the<sp/>built-in<sp/>solution.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Both<sp/>of<sp/>them<sp/>are<sp/>temporary<sp/>dependencies:</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/><sp/>-<sp/>PK_PARSE_EC_EXTENDED<sp/>will<sp/>be<sp/>removed<sp/>after<sp/>#7779<sp/>and<sp/>#7789</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/><sp/>-<sp/>support<sp/>for<sp/>compressed<sp/>points<sp/>should<sp/>also<sp/>be<sp/>added<sp/>to<sp/>PSA,<sp/>but<sp/>in<sp/>this</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>case<sp/>there<sp/>is<sp/>no<sp/>associated<sp/>issue<sp/>to<sp/>track<sp/>it<sp/>yet.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>-<sp/>PSA_WANT_KEY_TYPE_ECC_KEY_PAIR_DERIVE<sp/>because<sp/>Weierstrass<sp/>key<sp/>derivation</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/><sp/>still<sp/>depends<sp/>on<sp/>ECP_LIGHT.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>-<sp/>PK_C<sp/>+<sp/>USE_PSA<sp/>+<sp/>PSA_WANT_ALG_ECDSA<sp/>is<sp/>a<sp/>temporary<sp/>dependency<sp/>which<sp/>will</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/><sp/>be<sp/>fixed<sp/>by<sp/>#7453.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_C)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(MBEDTLS_PK_PARSE_EC_EXTENDED)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(MBEDTLS_PK_PARSE_EC_COMPRESSED)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(MBEDTLS_PSA_BUILTIN_KEY_TYPE_ECC_KEY_PAIR_DERIVE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_LIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MBEDTLS_PK_PARSE_EC_COMPRESSED<sp/>is<sp/>introduced<sp/>in<sp/>MbedTLS<sp/>version<sp/>3.5,<sp/>while</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>in<sp/>previous<sp/>version<sp/>compressed<sp/>points<sp/>were<sp/>automatically<sp/>supported<sp/>as<sp/>long</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>as<sp/>PK_PARSE_C<sp/>and<sp/>ECP_C<sp/>were<sp/>enabled.<sp/>As<sp/>a<sp/>consequence,<sp/>for<sp/>backward</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>compatibility,<sp/>we<sp/>auto-enable<sp/>PK_PARSE_EC_COMPRESSED<sp/>when<sp/>these<sp/>conditions</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>are<sp/>met.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_PK_PARSE_C)<sp/>&amp;&amp;<sp/>defined(MBEDTLS_ECP_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_PARSE_EC_COMPRESSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helper<sp/>symbol<sp/>to<sp/>state<sp/>that<sp/>there<sp/>is<sp/>support<sp/>for<sp/>ECDH,<sp/>either<sp/>through</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>library<sp/>implementation<sp/>(ECDH_C)<sp/>or<sp/>through<sp/>PSA.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(MBEDTLS_USE_PSA_CRYPTO)<sp/>&amp;&amp;<sp/>defined(PSA_WANT_ALG_ECDH))<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(!defined(MBEDTLS_USE_PSA_CRYPTO)<sp/>&amp;&amp;<sp/>defined(MBEDTLS_ECDH_C))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_CAN_ECDH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PK<sp/>module<sp/>can<sp/>achieve<sp/>ECDSA<sp/>functionalities<sp/>by<sp/>means<sp/>of<sp/>either<sp/>software</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>implementations<sp/>(ECDSA_C)<sp/>or<sp/>through<sp/>a<sp/>PSA<sp/>driver.<sp/>The<sp/>following<sp/>defines</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>are<sp/>meant<sp/>to<sp/>list<sp/>these<sp/>capabilities<sp/>in<sp/>a<sp/>general<sp/>way<sp/>which<sp/>abstracts<sp/>how</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>they<sp/>are<sp/>implemented<sp/>under<sp/>the<sp/>hood.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(MBEDTLS_USE_PSA_CRYPTO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECDSA_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_CAN_ECDSA_SIGN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_CAN_ECDSA_VERIFY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MBEDTLS_ECDSA_C<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>MBEDTLS_USE_PSA_CRYPTO<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PSA_WANT_ALG_ECDSA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PSA_WANT_KEY_TYPE_ECC_KEY_PAIR_BASIC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_CAN_ECDSA_SIGN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>PSA_WANT_KEY_TYPE_ECC_KEY_PAIR_BASIC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PSA_WANT_KEY_TYPE_ECC_PUBLIC_KEY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_CAN_ECDSA_VERIFY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>PSA_WANT_KEY_TYPE_ECC_PUBLIC_KEY<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>PSA_WANT_ALG_ECDSA<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MBEDTLS_USE_PSA_CRYPTO<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_PK_CAN_ECDSA_VERIFY)<sp/>||<sp/>defined(MBEDTLS_PK_CAN_ECDSA_SIGN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_CAN_ECDSA_SOME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>MBEDTLS_PSA_CRYPTO_C<sp/>is<sp/>defined,<sp/>make<sp/>sure<sp/>MBEDTLS_PSA_CRYPTO_CLIENT</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>is<sp/>defined<sp/>as<sp/>well<sp/>to<sp/>include<sp/>all<sp/>PSA<sp/>code.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_PSA_CRYPTO_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PSA_CRYPTO_CLIENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MBEDTLS_PSA_CRYPTO_C<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>PK<sp/>wrappers<sp/>need<sp/>pk_write<sp/>functions<sp/>to<sp/>format<sp/>RSA<sp/>key<sp/>objects</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>when<sp/>they<sp/>are<sp/>dispatching<sp/>to<sp/>the<sp/>PSA<sp/>API.<sp/>This<sp/>happens<sp/>under<sp/>USE_PSA_CRYPTO,</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>and<sp/>also<sp/>even<sp/>without<sp/>USE_PSA_CRYPTO<sp/>for<sp/>mbedtls_pk_sign_ext().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_PSA_CRYPTO_C)<sp/>&amp;&amp;<sp/>defined(MBEDTLS_RSA_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_WRITE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_PARSE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helpers<sp/>to<sp/>state<sp/>that<sp/>each<sp/>key<sp/>is<sp/>supported<sp/>either<sp/>on<sp/>the<sp/>builtin<sp/>or<sp/>PSA<sp/>side.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_DP_SECP521R1_ENABLED)<sp/>||<sp/>defined(PSA_WANT_ECC_SECP_R1_521)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_HAVE_SECP521R1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_DP_BP512R1_ENABLED)<sp/>||<sp/>defined(PSA_WANT_ECC_BRAINPOOL_P_R1_512)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_HAVE_BP512R1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_DP_CURVE448_ENABLED)<sp/>||<sp/>defined(PSA_WANT_ECC_MONTGOMERY_448)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_HAVE_CURVE448</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_DP_BP384R1_ENABLED)<sp/>||<sp/>defined(PSA_WANT_ECC_BRAINPOOL_P_R1_384)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_HAVE_BP384R1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_DP_SECP384R1_ENABLED)<sp/>||<sp/>defined(PSA_WANT_ECC_SECP_R1_384)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_HAVE_SECP384R1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_DP_BP256R1_ENABLED)<sp/>||<sp/>defined(PSA_WANT_ECC_BRAINPOOL_P_R1_256)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_HAVE_BP256R1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_DP_SECP256K1_ENABLED)<sp/>||<sp/>defined(PSA_WANT_ECC_SECP_K1_256)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_HAVE_SECP256K1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_DP_SECP256R1_ENABLED)<sp/>||<sp/>defined(PSA_WANT_ECC_SECP_R1_256)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_HAVE_SECP256R1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_DP_CURVE25519_ENABLED)<sp/>||<sp/>defined(PSA_WANT_ECC_MONTGOMERY_255)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_HAVE_CURVE25519</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_DP_SECP224K1_ENABLED)<sp/>||<sp/>defined(PSA_WANT_ECC_SECP_K1_224)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_HAVE_SECP224K1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_DP_SECP224R1_ENABLED)<sp/>||<sp/>defined(PSA_WANT_ECC_SECP_R1_224)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_HAVE_SECP224R1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_DP_SECP192K1_ENABLED)<sp/>||<sp/>defined(PSA_WANT_ECC_SECP_K1_192)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_HAVE_SECP192K1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_DP_SECP192R1_ENABLED)<sp/>||<sp/>defined(PSA_WANT_ECC_SECP_R1_192)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_HAVE_SECP192R1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helper<sp/>symbol<sp/>to<sp/>state<sp/>that<sp/>the<sp/>PK<sp/>module<sp/>has<sp/>support<sp/>for<sp/>EC<sp/>keys.<sp/>This</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>can<sp/>either<sp/>be<sp/>provided<sp/>through<sp/>the<sp/>legacy<sp/>ECP<sp/>solution<sp/>or<sp/>through<sp/>the</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/>PSA<sp/>friendly<sp/>MBEDTLS_PK_USE_PSA_EC_DATA<sp/>(see<sp/>pk.h<sp/>for<sp/>its<sp/>description).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_ECP_C)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(defined(MBEDTLS_USE_PSA_CRYPTO)<sp/>&amp;&amp;<sp/>defined(PSA_WANT_KEY_TYPE_ECC_PUBLIC_KEY))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_HAVE_ECC_KEYS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MBEDTLS_PK_USE_PSA_EC_DATA<sp/>||<sp/>MBEDTLS_ECP_C<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Historically<sp/>pkparse<sp/>did<sp/>not<sp/>check<sp/>the<sp/>CBC<sp/>padding<sp/>when<sp/>decrypting</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>a<sp/>key.<sp/>This<sp/>was<sp/>a<sp/>bug,<sp/>which<sp/>is<sp/>now<sp/>fixed.<sp/>As<sp/>a<sp/>consequence,<sp/>pkparse</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>now<sp/>needs<sp/>PKCS7<sp/>padding<sp/>support,<sp/>but<sp/>existing<sp/>configurations<sp/>might<sp/>not</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>enable<sp/>it,<sp/>so<sp/>we<sp/>enable<sp/>it<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_PK_PARSE_C)<sp/>&amp;&amp;<sp/>defined(MBEDTLS_PKCS5_C)<sp/>&amp;&amp;<sp/>defined(MBEDTLS_CIPHER_MODE_CBC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_CIPHER_PADDING_PKCS7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MBEDTLS_CONFIG_ADJUST_LEGACY_CRYPTO_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/config_adjust_legacy_crypto.h"/>
  </compounddef>
</doxygen>
