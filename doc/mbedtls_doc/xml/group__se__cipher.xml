<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__se__cipher" kind="group">
    <compoundname>se_cipher</compoundname>
    <title>Secure Element Symmetric Ciphers</title>
    <innerclass refid="structpsa__drv__se__cipher__t" prot="public">psa_drv_se_cipher_t</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__se__cipher_1ga7d31744990222cf99a02bcd905996a3a" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_cipher_setup_t) (psa_drv_se_context_t *drv_context, void *op_context, psa_key_slot_number_t key_slot, psa_algorithm_t algorithm, psa_encrypt_or_decrypt_t direction)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, void *op_context, psa_key_slot_number_t key_slot, psa_algorithm_t algorithm, psa_encrypt_or_decrypt_t direction)</argsstring>
        <name>psa_drv_se_cipher_setup_t</name>
        <briefdescription>
<para>A function that provides the cipher setup function for a secure element driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A structure that will contain the hardware-specific cipher context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot of the key to be used for the operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">algorithm</parametername>
</parameternamelist>
<parameterdescription>
<para>The algorithm to be used in the cipher operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the operation is an encrypt or decrypt</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga1dcc6d130633ed5db8942257581b55dd" kindref="member">PSA_ERROR_NOT_SUPPORTED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="379" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__cipher_1ga4c603c3ee2f0f98a09d9df1e9a0c86bf" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_cipher_set_iv_t) (void *op_context, const uint8_t *p_iv, size_t iv_length)</definition>
        <argsstring>)(void *op_context, const uint8_t *p_iv, size_t iv_length)</argsstring>
        <name>psa_drv_se_cipher_set_iv_t</name>
        <briefdescription>
<para>A function that sets the initialization vector (if necessary) for a secure element cipher operation. </para>
        </briefdescription>
        <detaileddescription>
<para>Rationale: The <computeroutput>psa_se_cipher_*</computeroutput> operation in the PSA Cryptographic API has two IV functions: one to set the IV, and one to generate it internally. The generate function is not necessary for the drivers to implement as the PSA Crypto implementation can do the generation using its RNG features.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A structure that contains the previously set up hardware-specific cipher context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_iv</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer containing the initialization vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">iv_length</parametername>
</parameternamelist>
<parameterdescription>
<para>The size (in bytes) of the <computeroutput>p_iv</computeroutput> buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="400" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__cipher_1gaeca34a7a7afd10ba9c79f3eaaf20d96b" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_cipher_update_t) (void *op_context, const uint8_t *p_input, size_t input_size, uint8_t *p_output, size_t output_size, size_t *p_output_length)</definition>
        <argsstring>)(void *op_context, const uint8_t *p_input, size_t input_size, uint8_t *p_output, size_t output_size, size_t *p_output_length)</argsstring>
        <name>psa_drv_se_cipher_update_t</name>
        <briefdescription>
<para>A function that continues a previously started secure element cipher operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A hardware-specific structure for the previously started cipher operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_input</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer containing the data to be encrypted/decrypted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the buffer pointed to by <computeroutput>p_input</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output</parametername>
</parameternamelist>
<parameterdescription>
<para>The caller-allocated buffer where the output will be placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The allocated size in bytes of the <computeroutput>p_output</computeroutput> buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output_length</parametername>
</parameternamelist>
<parameterdescription>
<para>After completion, will contain the number of bytes placed in the <computeroutput>p_output</computeroutput> buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="422" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__cipher_1ga06bf0bfbf55291d0bf5a411175a0350b" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_cipher_finish_t) (void *op_context, uint8_t *p_output, size_t output_size, size_t *p_output_length)</definition>
        <argsstring>)(void *op_context, uint8_t *p_output, size_t output_size, size_t *p_output_length)</argsstring>
        <name>psa_drv_se_cipher_finish_t</name>
        <briefdescription>
<para>A function that completes a previously started secure element cipher operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A hardware-specific structure for the previously started cipher operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output</parametername>
</parameternamelist>
<parameterdescription>
<para>The caller-allocated buffer where the output will be placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The allocated size in bytes of the <computeroutput>p_output</computeroutput> buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output_length</parametername>
</parameternamelist>
<parameterdescription>
<para>After completion, will contain the number of bytes placed in the <computeroutput>p_output</computeroutput> buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="443" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__cipher_1ga1cb204afa81012e4c561e0731792cae9" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_cipher_abort_t) (void *op_context)</definition>
        <argsstring>)(void *op_context)</argsstring>
        <name>psa_drv_se_cipher_abort_t</name>
        <briefdescription>
<para>A function that aborts a previously started secure element cipher operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A hardware-specific structure for the previously started cipher operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="454" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__cipher_1gaec35ce527439186d9f7e283e24c63a75" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_cipher_ecb_t) (psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t algorithm, psa_encrypt_or_decrypt_t direction, const uint8_t *p_input, size_t input_size, uint8_t *p_output, size_t output_size)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t algorithm, psa_encrypt_or_decrypt_t direction, const uint8_t *p_input, size_t input_size, uint8_t *p_output, size_t output_size)</argsstring>
        <name>psa_drv_se_cipher_ecb_t</name>
        <briefdescription>
<para>A function that performs the ECB block mode for secure element cipher operations. </para>
        </briefdescription>
        <detaileddescription>
<para>Note: this function should only be used with implementations that do not provide a needed higher-level operation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot of the key to be used for the operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">algorithm</parametername>
</parameternamelist>
<parameterdescription>
<para>The algorithm to be used in the cipher operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the operation is an encrypt or decrypt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_input</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer containing the data to be encrypted/decrypted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the buffer pointed to by <computeroutput>p_input</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output</parametername>
</parameternamelist>
<parameterdescription>
<para>The caller-allocated buffer where the output will be placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The allocated size in bytes of the <computeroutput>p_output</computeroutput> buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga1dcc6d130633ed5db8942257581b55dd" kindref="member">PSA_ERROR_NOT_SUPPORTED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="479" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Encryption and Decryption using secure element keys in block modes other than ECB must be done in multiple parts, using the following flow: </para>
    </briefdescription>
    <detaileddescription>
<para><itemizedlist>
<listitem><para><computeroutput>psa_drv_se_cipher_setup_t</computeroutput></para>
</listitem><listitem><para><computeroutput>psa_drv_se_cipher_set_iv_t</computeroutput> (optional depending upon block mode)</para>
</listitem><listitem><para><computeroutput>psa_drv_se_cipher_update_t</computeroutput></para>
</listitem><listitem><para><computeroutput>psa_drv_se_cipher_update_t</computeroutput></para>
</listitem><listitem><para>...</para>
</listitem><listitem><para><computeroutput>psa_drv_se_cipher_finish_t</computeroutput></para>
</listitem></itemizedlist>
</para>
<para>If a previously started secure element Cipher operation needs to be terminated, it should be done so by the <computeroutput>psa_drv_se_cipher_abort_t</computeroutput>. Failure to do so may result in allocated resources not being freed or in other undefined behavior.</para>
<para>In situations where a PSA Cryptographic API implementation is using a block mode not-supported by the underlying hardware or driver, it can construct the block mode itself, while calling the <computeroutput>psa_drv_se_cipher_ecb_t</computeroutput> function for the cipher operations. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
