<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="crypto__se__driver_8h" kind="file" language="C++">
    <compoundname>crypto_se_driver.h</compoundname>
    <includes refid="private__access_8h" local="yes">mbedtls/private_access.h</includes>
    <includes refid="crypto__driver__common_8h" local="yes">crypto_driver_common.h</includes>
    <incdepgraph>
      <node id="16">
        <label>psa/crypto_adjust_auto_enabled.h</label>
        <link refid="crypto__adjust__auto__enabled_8h"/>
      </node>
      <node id="19">
        <label>mbedtls/config_adjust_x509.h</label>
        <link refid="config__adjust__x509_8h"/>
      </node>
      <node id="20">
        <label>mbedtls/config_adjust_ssl.h</label>
        <link refid="config__adjust__ssl_8h"/>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>psa/crypto_adjust_config_key_pair_types.h</label>
        <link refid="crypto__adjust__config__key__pair__types_8h"/>
      </node>
      <node id="17">
        <label>mbedtls/config_adjust_psa_from_legacy.h</label>
        <link refid="config__adjust__psa__from__legacy_8h"/>
      </node>
      <node id="6">
        <label>crypto_types.h</label>
        <link refid="crypto__types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="22">
        <label>limits.h</label>
      </node>
      <node id="7">
        <label>mbedtls/build_info.h</label>
        <link refid="mbedtls_2build__info_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>psa/crypto_config.h</label>
        <link refid="crypto__config_8h"/>
      </node>
      <node id="18">
        <label>mbedtls/config_adjust_legacy_crypto.h</label>
        <link refid="config__adjust__legacy__crypto_8h"/>
      </node>
      <node id="21">
        <label>mbedtls/check_config.h</label>
        <link refid="check__config_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>crypto_values.h</label>
        <link refid="crypto__values_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>mbedtls/config_adjust_legacy_from_psa.h</label>
        <link refid="config__adjust__legacy__from__psa_8h"/>
      </node>
      <node id="23">
        <label>crypto_platform.h</label>
        <link refid="crypto__platform_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>psa/crypto_sizes.h</label>
        <link refid="crypto__sizes_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>mbedtls/mbedtls_config.h</label>
        <link refid="mbedtls__config_8h"/>
      </node>
      <node id="10">
        <label>mbedtls/config_psa.h</label>
        <link refid="config__psa_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>crypto_driver_common.h</label>
        <link refid="crypto__driver__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>psa/crypto_adjust_config_synonyms.h</label>
        <link refid="crypto__adjust__config__synonyms_8h"/>
      </node>
      <node id="2">
        <label>mbedtls/private_access.h</label>
        <link refid="private__access_8h"/>
      </node>
      <node id="24">
        <label>psa/build_info.h</label>
        <link refid="psa_2build__info_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>mbedtls/config_adjust_psa_superset_legacy.h</label>
        <link refid="config__adjust__psa__superset__legacy_8h"/>
      </node>
      <node id="11">
        <label>psa/crypto_legacy.h</label>
        <link refid="crypto__legacy_8h"/>
      </node>
      <node id="1">
        <label>crypto_se_driver.h</label>
        <link refid="crypto__se__driver_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structpsa__drv__se__context__t" prot="public">psa_drv_se_context_t</innerclass>
    <innerclass refid="structpsa__drv__se__mac__t" prot="public">psa_drv_se_mac_t</innerclass>
    <innerclass refid="structpsa__drv__se__cipher__t" prot="public">psa_drv_se_cipher_t</innerclass>
    <innerclass refid="structpsa__drv__se__asymmetric__t" prot="public">psa_drv_se_asymmetric_t</innerclass>
    <innerclass refid="structpsa__drv__se__aead__t" prot="public">psa_drv_se_aead_t</innerclass>
    <innerclass refid="structpsa__drv__se__key__management__t" prot="public">psa_drv_se_key_management_t</innerclass>
    <innerclass refid="structpsa__drv__se__key__derivation__t" prot="public">psa_drv_se_key_derivation_t</innerclass>
    <innerclass refid="structpsa__drv__se__t" prot="public">psa_drv_se_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__se__registration_1ga65e25a718c3e95893522ae882d4ea826" prot="public" static="no">
        <name>PSA_DRV_SE_HAL_VERSION</name>
        <initializer>0x00000005</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The current version of the secure element driver HAL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="1319" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="1319" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__se__key__management_1ga984d5535962320e0c4692bb4ede486ef" prot="public" static="no" strong="no">
        <type></type>
        <name>psa_key_creation_method_t</name>
        <enumvalue id="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efa9d61c409158f958b864b759662adbbed" prot="public">
          <name>PSA_KEY_CREATION_IMPORT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>During <ref refid="group__import__export_1ga0336ea76bf30587ab204a8296462327b" kindref="member">psa_import_key()</ref> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efab197db75a74e331a570562ba3b3e04a9" prot="public">
          <name>PSA_KEY_CREATION_GENERATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>During <ref refid="group__random_1ga1f154687b24e5508d97681cdd17946a8" kindref="member">psa_generate_key()</ref> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efaae615ce8bde386039d1ee1b348f6552c" prot="public">
          <name>PSA_KEY_CREATION_DERIVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>During <ref refid="group__key__derivation_1gada7a6e17222ea9e7a6be6864a00316e1" kindref="member">psa_key_derivation_output_key()</ref> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efa61d76b2af65ab3fb904b5eedd8f46363" prot="public">
          <name>PSA_KEY_CREATION_COPY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>During <ref refid="group__key__management_1gaac27a547ca634d439e89b17aacc99943" kindref="member">psa_copy_key()</ref> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efabcea58ac75861648df36ae58a8562257" prot="public">
          <name>PSA_KEY_CREATION_REGISTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A key is being registered with <ref refid="group__attributes_1gae380c2fab913be2ec2a34a4153b471a2" kindref="member">mbedtls_psa_register_se_key()</ref>.</para>
<para>The core only passes this value to psa_drv_se_key_management_t::p_validate_slot_number, not to psa_drv_se_key_management_t::p_allocate. The call to <computeroutput>p_validate_slot_number</computeroutput> is not followed by any other call to the driver: the key is considered successfully registered if the call to <computeroutput>p_validate_slot_number</computeroutput> succeeds, or if <computeroutput>p_validate_slot_number</computeroutput> is null.</para>
<para>With this creation method, the driver must return <ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref> if the given attributes are compatible with the existing key in the slot, and <ref refid="group__error_1ga18646babb2ae6cbde02ea3828bbd9141" kindref="member">PSA_ERROR_DOES_NOT_EXIST</ref> if the driver can determine that there is no key with the specified slot number.</para>
<para>This is an Mbed TLS extension. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An enumeration indicating how a key is created. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="806" column="14" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="806" bodyend="832"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__se__init_1ga61d926bb163ea2aae3c6e27c19ebe58c" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_init_t) (psa_drv_se_context_t *drv_context, void *persistent_data, psa_key_location_t location)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, void *persistent_data, psa_key_location_t location)</argsstring>
        <name>psa_drv_se_init_t</name>
        <briefdescription>
<para>A driver initialization function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">persistent_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the persistent data that allows writing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>The location value for which this driver is registered. The driver will be invoked for all keys whose lifetime is in this location.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The driver is operational. The core will update the persistent data in storage. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Any other return value prevents the driver from being used in this session. The core will NOT update the persistent data in storage. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="124" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__mac_1ga1d7dacfb4ede205538c5713b11e10326" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_mac_setup_t) (psa_drv_se_context_t *drv_context, void *op_context, psa_key_slot_number_t key_slot, psa_algorithm_t algorithm)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, void *op_context, psa_key_slot_number_t key_slot, psa_algorithm_t algorithm)</argsstring>
        <name>psa_drv_se_mac_setup_t</name>
        <briefdescription>
<para>A function that starts a secure element MAC operation for a PSA Crypto Driver implementation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A structure that will contain the hardware-specific MAC context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot of the key to be used for the operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">algorithm</parametername>
</parameternamelist>
<parameterdescription>
<para>The algorithm to be used to underly the MAC operation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="173" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__mac_1ga5066f0423519b1a403019f16cad004f6" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_mac_update_t) (void *op_context, const uint8_t *p_input, size_t input_length)</definition>
        <argsstring>)(void *op_context, const uint8_t *p_input, size_t input_length)</argsstring>
        <name>psa_drv_se_mac_update_t</name>
        <briefdescription>
<para>A function that continues a previously started secure element MAC operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A hardware-specific structure for the previously-established MAC operation to be updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_input</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer containing the message to be appended to the MAC operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input_length</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the input message buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="188" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__mac_1ga8d2c6b8639790e00a755774270c9a36a" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_mac_finish_t) (void *op_context, uint8_t *p_mac, size_t mac_size, size_t *p_mac_length)</definition>
        <argsstring>)(void *op_context, uint8_t *p_mac, size_t mac_size, size_t *p_mac_length)</argsstring>
        <name>psa_drv_se_mac_finish_t</name>
        <briefdescription>
<para>a function that completes a previously started secure element MAC operation by returning the resulting MAC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A hardware-specific structure for the previously started MAC operation to be finished </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer where the generated MAC will be placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mac_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the buffer that has been allocated for the <computeroutput>output</computeroutput> buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_mac_length</parametername>
</parameternamelist>
<parameterdescription>
<para>After completion, will contain the number of bytes placed in the <computeroutput>p_mac</computeroutput> buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="208" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__mac_1ga57c46b9072760a2f3f501dc8278bf963" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_mac_finish_verify_t) (void *op_context, const uint8_t *p_mac, size_t mac_length)</definition>
        <argsstring>)(void *op_context, const uint8_t *p_mac, size_t mac_length)</argsstring>
        <name>psa_drv_se_mac_finish_verify_t</name>
        <briefdescription>
<para>A function that completes a previously started secure element MAC operation by comparing the resulting MAC against a provided value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A hardware-specific structure for the previously started MAC operation to be finished </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>The MAC value against which the resulting MAC will be compared against </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mac_length</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the value stored in <computeroutput>p_mac</computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation completed successfully and the MACs matched each other </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga35927f755d232c4766de600f2c49e9f2" kindref="member">PSA_ERROR_INVALID_SIGNATURE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation completed successfully, but the calculated MAC did not match the provided MAC </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="229" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__mac_1ga5ffdfc1d70ef3b4da100e9e46a08e511" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_mac_abort_t) (void *op_context)</definition>
        <argsstring>)(void *op_context)</argsstring>
        <name>psa_drv_se_mac_abort_t</name>
        <briefdescription>
<para>A function that aborts a previous started secure element MAC operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A hardware-specific structure for the previously started MAC operation to be aborted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="239" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__mac_1gac8b2bbcfeb4a8f4409a4777051f55666" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_mac_generate_t) (psa_drv_se_context_t *drv_context, const uint8_t *p_input, size_t input_length, psa_key_slot_number_t key_slot, psa_algorithm_t alg, uint8_t *p_mac, size_t mac_size, size_t *p_mac_length)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, const uint8_t *p_input, size_t input_length, psa_key_slot_number_t key_slot, psa_algorithm_t alg, uint8_t *p_mac, size_t mac_size, size_t *p_mac_length)</argsstring>
        <name>psa_drv_se_mac_generate_t</name>
        <briefdescription>
<para>A function that performs a secure element MAC operation in one command and returns the calculated MAC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_input</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer containing the message to be MACed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input_length</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of <computeroutput>p_input</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot of the key to be used </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The algorithm to be used to underlie the MAC operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer where the generated MAC will be placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mac_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the <computeroutput>p_mac</computeroutput> buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_mac_length</parametername>
</parameternamelist>
<parameterdescription>
<para>After completion, will contain the number of bytes placed in the <computeroutput>output</computeroutput> buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="259" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__mac_1ga6e7e9a020f0061492ba383aa404f1c09" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_mac_verify_t) (psa_drv_se_context_t *drv_context, const uint8_t *p_input, size_t input_length, psa_key_slot_number_t key_slot, psa_algorithm_t alg, const uint8_t *p_mac, size_t mac_length)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, const uint8_t *p_input, size_t input_length, psa_key_slot_number_t key_slot, psa_algorithm_t alg, const uint8_t *p_mac, size_t mac_length)</argsstring>
        <name>psa_drv_se_mac_verify_t</name>
        <briefdescription>
<para>A function that performs a secure element MAC operation in one command and compares the resulting MAC against a provided value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_input</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer containing the message to be MACed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input_length</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of <computeroutput>input</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot of the key to be used </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The algorithm to be used to underlie the MAC operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>The MAC value against which the resulting MAC will be compared against </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mac_length</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of <computeroutput>mac</computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation completed successfully and the MACs matched each other </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga35927f755d232c4766de600f2c49e9f2" kindref="member">PSA_ERROR_INVALID_SIGNATURE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation completed successfully, but the calculated MAC did not match the provided MAC </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="288" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__cipher_1ga7d31744990222cf99a02bcd905996a3a" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_cipher_setup_t) (psa_drv_se_context_t *drv_context, void *op_context, psa_key_slot_number_t key_slot, psa_algorithm_t algorithm, psa_encrypt_or_decrypt_t direction)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, void *op_context, psa_key_slot_number_t key_slot, psa_algorithm_t algorithm, psa_encrypt_or_decrypt_t direction)</argsstring>
        <name>psa_drv_se_cipher_setup_t</name>
        <briefdescription>
<para>A function that provides the cipher setup function for a secure element driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A structure that will contain the hardware-specific cipher context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot of the key to be used for the operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">algorithm</parametername>
</parameternamelist>
<parameterdescription>
<para>The algorithm to be used in the cipher operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the operation is an encrypt or decrypt</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga1dcc6d130633ed5db8942257581b55dd" kindref="member">PSA_ERROR_NOT_SUPPORTED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="379" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__cipher_1ga4c603c3ee2f0f98a09d9df1e9a0c86bf" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_cipher_set_iv_t) (void *op_context, const uint8_t *p_iv, size_t iv_length)</definition>
        <argsstring>)(void *op_context, const uint8_t *p_iv, size_t iv_length)</argsstring>
        <name>psa_drv_se_cipher_set_iv_t</name>
        <briefdescription>
<para>A function that sets the initialization vector (if necessary) for a secure element cipher operation. </para>
        </briefdescription>
        <detaileddescription>
<para>Rationale: The <computeroutput>psa_se_cipher_*</computeroutput> operation in the PSA Cryptographic API has two IV functions: one to set the IV, and one to generate it internally. The generate function is not necessary for the drivers to implement as the PSA Crypto implementation can do the generation using its RNG features.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A structure that contains the previously set up hardware-specific cipher context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_iv</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer containing the initialization vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">iv_length</parametername>
</parameternamelist>
<parameterdescription>
<para>The size (in bytes) of the <computeroutput>p_iv</computeroutput> buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="400" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__cipher_1gaeca34a7a7afd10ba9c79f3eaaf20d96b" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_cipher_update_t) (void *op_context, const uint8_t *p_input, size_t input_size, uint8_t *p_output, size_t output_size, size_t *p_output_length)</definition>
        <argsstring>)(void *op_context, const uint8_t *p_input, size_t input_size, uint8_t *p_output, size_t output_size, size_t *p_output_length)</argsstring>
        <name>psa_drv_se_cipher_update_t</name>
        <briefdescription>
<para>A function that continues a previously started secure element cipher operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A hardware-specific structure for the previously started cipher operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_input</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer containing the data to be encrypted/decrypted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the buffer pointed to by <computeroutput>p_input</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output</parametername>
</parameternamelist>
<parameterdescription>
<para>The caller-allocated buffer where the output will be placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The allocated size in bytes of the <computeroutput>p_output</computeroutput> buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output_length</parametername>
</parameternamelist>
<parameterdescription>
<para>After completion, will contain the number of bytes placed in the <computeroutput>p_output</computeroutput> buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="422" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__cipher_1ga06bf0bfbf55291d0bf5a411175a0350b" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_cipher_finish_t) (void *op_context, uint8_t *p_output, size_t output_size, size_t *p_output_length)</definition>
        <argsstring>)(void *op_context, uint8_t *p_output, size_t output_size, size_t *p_output_length)</argsstring>
        <name>psa_drv_se_cipher_finish_t</name>
        <briefdescription>
<para>A function that completes a previously started secure element cipher operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A hardware-specific structure for the previously started cipher operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output</parametername>
</parameternamelist>
<parameterdescription>
<para>The caller-allocated buffer where the output will be placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The allocated size in bytes of the <computeroutput>p_output</computeroutput> buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output_length</parametername>
</parameternamelist>
<parameterdescription>
<para>After completion, will contain the number of bytes placed in the <computeroutput>p_output</computeroutput> buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="443" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__cipher_1ga1cb204afa81012e4c561e0731792cae9" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_cipher_abort_t) (void *op_context)</definition>
        <argsstring>)(void *op_context)</argsstring>
        <name>psa_drv_se_cipher_abort_t</name>
        <briefdescription>
<para>A function that aborts a previously started secure element cipher operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A hardware-specific structure for the previously started cipher operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="454" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__cipher_1gaec35ce527439186d9f7e283e24c63a75" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_cipher_ecb_t) (psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t algorithm, psa_encrypt_or_decrypt_t direction, const uint8_t *p_input, size_t input_size, uint8_t *p_output, size_t output_size)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t algorithm, psa_encrypt_or_decrypt_t direction, const uint8_t *p_input, size_t input_size, uint8_t *p_output, size_t output_size)</argsstring>
        <name>psa_drv_se_cipher_ecb_t</name>
        <briefdescription>
<para>A function that performs the ECB block mode for secure element cipher operations. </para>
        </briefdescription>
        <detaileddescription>
<para>Note: this function should only be used with implementations that do not provide a needed higher-level operation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot of the key to be used for the operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">algorithm</parametername>
</parameternamelist>
<parameterdescription>
<para>The algorithm to be used in the cipher operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the operation is an encrypt or decrypt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_input</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer containing the data to be encrypted/decrypted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the buffer pointed to by <computeroutput>p_input</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output</parametername>
</parameternamelist>
<parameterdescription>
<para>The caller-allocated buffer where the output will be placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The allocated size in bytes of the <computeroutput>p_output</computeroutput> buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga1dcc6d130633ed5db8942257581b55dd" kindref="member">PSA_ERROR_NOT_SUPPORTED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="479" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__asymmetric_1gaac5182bca42737841785662743594515" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_asymmetric_sign_t) (psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t alg, const uint8_t *p_hash, size_t hash_length, uint8_t *p_signature, size_t signature_size, size_t *p_signature_length)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t alg, const uint8_t *p_hash, size_t hash_length, uint8_t *p_signature, size_t signature_size, size_t *p_signature_length)</argsstring>
        <name>psa_drv_se_asymmetric_sign_t</name>
        <briefdescription>
<para>A function that signs a hash or short message with a private key in a secure element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Key slot of an asymmetric key pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alg</parametername>
</parameternamelist>
<parameterdescription>
<para>A signature algorithm that is compatible with the type of <computeroutput>key</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_hash</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash to sign </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hash_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_hash</computeroutput> buffer in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_signature</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer where the signature is to be written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">signature_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_signature</computeroutput> buffer in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_signature_length</parametername>
</parameternamelist>
<parameterdescription>
<para>On success, the number of bytes that make up the returned signature value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="547" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__asymmetric_1gabb372536a004009294591eaf6cc4d186" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_asymmetric_verify_t) (psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t alg, const uint8_t *p_hash, size_t hash_length, const uint8_t *p_signature, size_t signature_length)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t alg, const uint8_t *p_hash, size_t hash_length, const uint8_t *p_signature, size_t signature_length)</argsstring>
        <name>psa_drv_se_asymmetric_verify_t</name>
        <briefdescription>
<para>A function that verifies the signature a hash or short message using an asymmetric public key in a secure element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Key slot of a public key or an asymmetric key pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alg</parametername>
</parameternamelist>
<parameterdescription>
<para>A signature algorithm that is compatible with the type of <computeroutput>key</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_hash</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash whose signature is to be verified </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hash_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_hash</computeroutput> buffer in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_signature</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer containing the signature to verify </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">signature_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_signature</computeroutput> buffer in bytes</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The signature is valid. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="573" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__asymmetric_1ga8544105c218640adfc4f983da4b34478" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_asymmetric_encrypt_t) (psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t alg, const uint8_t *p_input, size_t input_length, const uint8_t *p_salt, size_t salt_length, uint8_t *p_output, size_t output_size, size_t *p_output_length)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t alg, const uint8_t *p_input, size_t input_length, const uint8_t *p_salt, size_t salt_length, uint8_t *p_output, size_t output_size, size_t *p_output_length)</argsstring>
        <name>psa_drv_se_asymmetric_encrypt_t</name>
        <briefdescription>
<para>A function that encrypts a short message with an asymmetric public key in a secure element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Key slot of a public key or an asymmetric key pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alg</parametername>
</parameternamelist>
<parameterdescription>
<para>An asymmetric encryption algorithm that is compatible with the type of <computeroutput>key</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_input</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to encrypt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_input</computeroutput> buffer in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_salt</parametername>
</parameternamelist>
<parameterdescription>
<para>A salt or label, if supported by the encryption algorithm If the algorithm does not support a salt, pass <computeroutput>NULL</computeroutput>. If the algorithm supports an optional salt and you do not want to pass a salt, pass <computeroutput>NULL</computeroutput>. For <ref refid="group__crypto__types_1ga4c540d3abe43fb9abcb94f2bc51acef9" kindref="member">PSA_ALG_RSA_PKCS1V15_CRYPT</ref>, no salt is supported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">salt_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_salt</computeroutput> buffer in bytes If <computeroutput>p_salt</computeroutput> is <computeroutput>NULL</computeroutput>, pass 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer where the encrypted message is to be written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_output</computeroutput> buffer in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output_length</parametername>
</parameternamelist>
<parameterdescription>
<para>On success, the number of bytes that make up the returned output</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="611" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__asymmetric_1ga3472b9f36ffd9eb303100d5ec3eacda0" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_asymmetric_decrypt_t) (psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t alg, const uint8_t *p_input, size_t input_length, const uint8_t *p_salt, size_t salt_length, uint8_t *p_output, size_t output_size, size_t *p_output_length)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t alg, const uint8_t *p_input, size_t input_length, const uint8_t *p_salt, size_t salt_length, uint8_t *p_output, size_t output_size, size_t *p_output_length)</argsstring>
        <name>psa_drv_se_asymmetric_decrypt_t</name>
        <briefdescription>
<para>A function that decrypts a short message with an asymmetric private key in a secure element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Key slot of an asymmetric key pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alg</parametername>
</parameternamelist>
<parameterdescription>
<para>An asymmetric encryption algorithm that is compatible with the type of <computeroutput>key</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_input</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to decrypt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_input</computeroutput> buffer in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_salt</parametername>
</parameternamelist>
<parameterdescription>
<para>A salt or label, if supported by the encryption algorithm If the algorithm does not support a salt, pass <computeroutput>NULL</computeroutput>. If the algorithm supports an optional salt and you do not want to pass a salt, pass <computeroutput>NULL</computeroutput>. For <ref refid="group__crypto__types_1ga4c540d3abe43fb9abcb94f2bc51acef9" kindref="member">PSA_ALG_RSA_PKCS1V15_CRYPT</ref>, no salt is supported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">salt_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_salt</computeroutput> buffer in bytes If <computeroutput>p_salt</computeroutput> is <computeroutput>NULL</computeroutput>, pass 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer where the decrypted message is to be written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_output</computeroutput> buffer in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output_length</parametername>
</parameternamelist>
<parameterdescription>
<para>On success, the number of bytes that make up the returned output</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="651" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="651" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__aead_1ga0acef6488a7dddbc707467907dec1842" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_aead_encrypt_t) (psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t algorithm, const uint8_t *p_nonce, size_t nonce_length, const uint8_t *p_additional_data, size_t additional_data_length, const uint8_t *p_plaintext, size_t plaintext_length, uint8_t *p_ciphertext, size_t ciphertext_size, size_t *p_ciphertext_length)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t algorithm, const uint8_t *p_nonce, size_t nonce_length, const uint8_t *p_additional_data, size_t additional_data_length, const uint8_t *p_plaintext, size_t plaintext_length, uint8_t *p_ciphertext, size_t ciphertext_size, size_t *p_ciphertext_length)</argsstring>
        <name>psa_drv_se_aead_encrypt_t</name>
        <briefdescription>
<para>A function that performs a secure element authenticated encryption operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Slot containing the key to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">algorithm</parametername>
</parameternamelist>
<parameterdescription>
<para>The AEAD algorithm to compute (<computeroutput>PSA_ALG_XXX</computeroutput> value such that <ref refid="group__crypto__types_1ga1d44829d60065eaa4ac9a703e7d6abc8" kindref="member">PSA_ALG_IS_AEAD</ref>(<computeroutput>alg</computeroutput>) is true) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_nonce</parametername>
</parameternamelist>
<parameterdescription>
<para>Nonce or IV to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nonce_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_nonce</computeroutput> buffer in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_additional_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional data that will be authenticated but not encrypted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">additional_data_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of <computeroutput>p_additional_data</computeroutput> in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>Data that will be authenticated and encrypted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">plaintext_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of <computeroutput>p_plaintext</computeroutput> in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_ciphertext</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer for the authenticated and encrypted data. The additional data is not part of this output. For algorithms where the encrypted data and the authentication tag are defined as separate outputs, the authentication tag is appended to the encrypted data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ciphertext_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_ciphertext</computeroutput> buffer in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_ciphertext_length</parametername>
</parameternamelist>
<parameterdescription>
<para>On success, the size of the output in the <computeroutput>p_ciphertext</computeroutput> buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="724" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="724" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__aead_1gab517338cb0541c9e36fbcea713622104" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_aead_decrypt_t) (psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t algorithm, const uint8_t *p_nonce, size_t nonce_length, const uint8_t *p_additional_data, size_t additional_data_length, const uint8_t *p_ciphertext, size_t ciphertext_length, uint8_t *p_plaintext, size_t plaintext_size, size_t *p_plaintext_length)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, psa_algorithm_t algorithm, const uint8_t *p_nonce, size_t nonce_length, const uint8_t *p_additional_data, size_t additional_data_length, const uint8_t *p_ciphertext, size_t ciphertext_length, uint8_t *p_plaintext, size_t plaintext_size, size_t *p_plaintext_length)</argsstring>
        <name>psa_drv_se_aead_decrypt_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A function that performs a secure element authenticated decryption operation</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Slot containing the key to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">algorithm</parametername>
</parameternamelist>
<parameterdescription>
<para>The AEAD algorithm to compute (<computeroutput>PSA_ALG_XXX</computeroutput> value such that <ref refid="group__crypto__types_1ga1d44829d60065eaa4ac9a703e7d6abc8" kindref="member">PSA_ALG_IS_AEAD</ref>(<computeroutput>alg</computeroutput>) is true) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_nonce</parametername>
</parameternamelist>
<parameterdescription>
<para>Nonce or IV to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nonce_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_nonce</computeroutput> buffer in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_additional_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional data that has been authenticated but not encrypted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">additional_data_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of <computeroutput>p_additional_data</computeroutput> in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_ciphertext</parametername>
</parameternamelist>
<parameterdescription>
<para>Data that has been authenticated and encrypted. For algorithms where the encrypted data and the authentication tag are defined as separate inputs, the buffer must contain the encrypted data followed by the authentication tag. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ciphertext_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of <computeroutput>p_ciphertext</computeroutput> in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer for the decrypted data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">plaintext_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_plaintext</computeroutput> buffer in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_plaintext_length</parametername>
</parameternamelist>
<parameterdescription>
<para>On success, the size of the output in the <computeroutput>p_plaintext</computeroutput> buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="766" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__key__management_1gaab9a5d39285c68ac29264017e0119d98" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_allocate_key_t) (psa_drv_se_context_t *drv_context, void *persistent_data, const psa_key_attributes_t *attributes, psa_key_creation_method_t method, psa_key_slot_number_t *key_slot)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, void *persistent_data, const psa_key_attributes_t *attributes, psa_key_creation_method_t method, psa_key_slot_number_t *key_slot)</argsstring>
        <name>psa_drv_se_allocate_key_t</name>
        <briefdescription>
<para>A function that allocates a slot for a key. </para>
        </briefdescription>
        <detaileddescription>
<para>To create a key in a specific slot in a secure element, the core first calls this function to determine a valid slot number, then calls a function to create the key material in that slot. In nominal conditions (that is, if no error occurs), the effect of a call to a key creation function in the PSA Cryptography API with a lifetime that places the key in a secure element is the following:<orderedlist>
<listitem><para>The core calls psa_drv_se_key_management_t::p_allocate (or in some implementations psa_drv_se_key_management_t::p_validate_slot_number). The driver selects (or validates) a suitable slot number given the key attributes and the state of the secure element.</para>
</listitem><listitem><para>The core calls a key creation function in the driver.</para>
</listitem></orderedlist>
</para>
<para>The key creation functions in the PSA Cryptography API are:<itemizedlist>
<listitem><para><ref refid="group__import__export_1ga0336ea76bf30587ab204a8296462327b" kindref="member">psa_import_key()</ref>, which causes a call to <computeroutput>p_allocate</computeroutput> with <computeroutput>method</computeroutput> = <ref refid="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efa9d61c409158f958b864b759662adbbed" kindref="member">PSA_KEY_CREATION_IMPORT</ref> then a call to psa_drv_se_key_management_t::p_import.</para>
</listitem><listitem><para><ref refid="group__random_1ga1f154687b24e5508d97681cdd17946a8" kindref="member">psa_generate_key()</ref>, which causes a call to <computeroutput>p_allocate</computeroutput> with <computeroutput>method</computeroutput> = <ref refid="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efab197db75a74e331a570562ba3b3e04a9" kindref="member">PSA_KEY_CREATION_GENERATE</ref> then a call to psa_drv_se_key_management_t::p_import.</para>
</listitem><listitem><para><ref refid="group__key__derivation_1gada7a6e17222ea9e7a6be6864a00316e1" kindref="member">psa_key_derivation_output_key()</ref>, which causes a call to <computeroutput>p_allocate</computeroutput> with <computeroutput>method</computeroutput> = <ref refid="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efaae615ce8bde386039d1ee1b348f6552c" kindref="member">PSA_KEY_CREATION_DERIVE</ref> then a call to psa_drv_se_key_derivation_t::p_derive.</para>
</listitem><listitem><para><ref refid="group__key__management_1gaac27a547ca634d439e89b17aacc99943" kindref="member">psa_copy_key()</ref>, which causes a call to <computeroutput>p_allocate</computeroutput> with <computeroutput>method</computeroutput> = <ref refid="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efa61d76b2af65ab3fb904b5eedd8f46363" kindref="member">PSA_KEY_CREATION_COPY</ref> then a call to psa_drv_se_key_management_t::p_export.</para>
</listitem></itemizedlist>
</para>
<para>In case of errors, other behaviors are possible.<itemizedlist>
<listitem><para>If the PSA Cryptography subsystem dies after the first step, for example because the device has lost power abruptly, the second step may never happen, or may happen after a reset and re-initialization. Alternatively, after a reset and re-initialization, the core may call psa_drv_se_key_management_t::p_destroy on the slot number that was allocated (or validated) instead of calling a key creation function.</para>
</listitem><listitem><para>If an error occurs, the core may call psa_drv_se_key_management_t::p_destroy on the slot number that was allocated (or validated) instead of calling a key creation function.</para>
</listitem></itemizedlist>
</para>
<para>Errors and system resets also have an impact on the driver&apos;s persistent data. If a reset happens before the overall key creation process is completed (before or after the second step above), it is unspecified whether the persistent data after the reset is identical to what it was before or after the call to <computeroutput>p_allocate</computeroutput> (or <computeroutput>p_validate_slot_number</computeroutput>).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">persistent_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the persistent data that allows writing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attributes</parametername>
</parameternamelist>
<parameterdescription>
<para>Attributes of the key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>The way in which the key is being created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Slot where the key will be stored. This must be a valid slot for a key of the chosen type. It must be unoccupied.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Success. The core will record <computeroutput>*key_slot</computeroutput> as the key slot where the key is stored and will update the persistent data in storage. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga1dcc6d130633ed5db8942257581b55dd" kindref="member">PSA_ERROR_NOT_SUPPORTED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga897a45eb206a6f6b7be7ffbe36f0d766" kindref="member">PSA_ERROR_INSUFFICIENT_STORAGE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="898" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="898" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__key__management_1ga26c4b96c6d68dbd74b0512475d29f934" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_validate_slot_number_t) (psa_drv_se_context_t *drv_context, void *persistent_data, const psa_key_attributes_t *attributes, psa_key_creation_method_t method, psa_key_slot_number_t key_slot)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, void *persistent_data, const psa_key_attributes_t *attributes, psa_key_creation_method_t method, psa_key_slot_number_t key_slot)</argsstring>
        <name>psa_drv_se_validate_slot_number_t</name>
        <briefdescription>
<para>A function that determines whether a slot number is valid for a key. </para>
        </briefdescription>
        <detaileddescription>
<para>To create a key in a specific slot in a secure element, the core first calls this function to validate the choice of slot number, then calls a function to create the key material in that slot. See the documentation of <ref refid="group__se__key__management_1gaab9a5d39285c68ac29264017e0119d98" kindref="member">psa_drv_se_allocate_key_t</ref> for more details.</para>
<para>As of the PSA Cryptography API specification version 1.0, there is no way for applications to trigger a call to this function. However some implementations offer the capability to create or declare a key in a specific slot via implementation-specific means, generally for the sake of initial device provisioning or onboarding. Such a mechanism may be added to a future version of the PSA Cryptography API specification.</para>
<para>This function may update the driver&apos;s persistent data through <computeroutput>persistent_data</computeroutput>. The core will save the updated persistent data at the end of the key creation process. See the description of <ref refid="group__se__key__management_1gaab9a5d39285c68ac29264017e0119d98" kindref="member">psa_drv_se_allocate_key_t</ref> for more information.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">persistent_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the persistent data that allows writing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attributes</parametername>
</parameternamelist>
<parameterdescription>
<para>Attributes of the key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>The way in which the key is being created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Slot where the key is to be stored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The given slot number is valid for a key with the given attributes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga798df25a505ebf931f7bec1f80f1f85f" kindref="member">PSA_ERROR_INVALID_ARGUMENT</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The given slot number is not valid for a key with the given attributes. This includes the case where the slot number is not valid at all. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1gaf2b34cc87edc72f3ba90071a08210d20" kindref="member">PSA_ERROR_ALREADY_EXISTS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>There is already a key with the specified slot number. Drivers may choose to return this error from the key creation function instead. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="944" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="944" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__key__management_1ga9e04e71aff4837259e54598708edcf7d" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_import_key_t) (psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, const psa_key_attributes_t *attributes, const uint8_t *data, size_t data_length, size_t *bits)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, const psa_key_attributes_t *attributes, const uint8_t *data, size_t data_length, size_t *bits)</argsstring>
        <name>psa_drv_se_import_key_t</name>
        <briefdescription>
<para>A function that imports a key into a secure element in binary format. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can support any output from <ref refid="group__import__export_1ga668e35be8d2852ad3feeef74ac6f75bf" kindref="member">psa_export_key()</ref>. Refer to the documentation of <ref refid="group__import__export_1ga668e35be8d2852ad3feeef74ac6f75bf" kindref="member">psa_export_key()</ref> for the format for each key type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Slot where the key will be stored. This must be a valid slot for a key of the chosen type. It must be unoccupied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attributes</parametername>
</parameternamelist>
<parameterdescription>
<para>The key attributes, including the lifetime, the key type and the usage policy. Drivers should not access the key size stored in the attributes: it may not match the data passed in <computeroutput>data</computeroutput>. Drivers can call <ref refid="group__attributes_1ga9ea8eae1b81e480cc56dec858859aff9" kindref="member">psa_get_key_lifetime()</ref>, <ref refid="group__attributes_1gae4fb812af4f57aa1ad85e335a865b918" kindref="member">psa_get_key_type()</ref>, <ref refid="group__attributes_1gaa1af20f142ca722222c6d98678a0c448" kindref="member">psa_get_key_usage_flags()</ref> and <ref refid="group__attributes_1gac255da850a00bbed925390044f016b34" kindref="member">psa_get_key_algorithm()</ref> to access this information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer containing the key data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>data</computeroutput> buffer in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">bits</parametername>
</parameternamelist>
<parameterdescription>
<para>On success, the key size in bits. The driver must determine this value after parsing the key according to the key type. This value is not used if the function fails.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="980" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="980" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__key__management_1gaaf8c22c4a5b87035fcb594858d68e1ba" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_destroy_key_t) (psa_drv_se_context_t *drv_context, void *persistent_data, psa_key_slot_number_t key_slot)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, void *persistent_data, psa_key_slot_number_t key_slot)</argsstring>
        <name>psa_drv_se_destroy_key_t</name>
        <briefdescription>
<para>A function that destroys a secure element key and restore the slot to its default state. </para>
        </briefdescription>
        <detaileddescription>
<para>This function destroys the content of the key from a secure element. Implementations shall make a best effort to ensure that any previous content of the slot is unrecoverable.</para>
<para>This function returns the specified slot to its default state.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">persistent_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the persistent data that allows writing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The key slot to erase.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The slot&apos;s content, if any, has been erased. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="1006" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="1006" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__key__management_1ga6c51abdf1eb2165b800f1de017ed42fb" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_export_key_t) (psa_drv_se_context_t *drv_context, psa_key_slot_number_t key, uint8_t *p_data, size_t data_size, size_t *p_data_length)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, psa_key_slot_number_t key, uint8_t *p_data, size_t data_size, size_t *p_data_length)</argsstring>
        <name>psa_drv_se_export_key_t</name>
        <briefdescription>
<para>A function that exports a secure element key in binary format. </para>
        </briefdescription>
        <detaileddescription>
<para>The output of this function can be passed to <ref refid="group__import__export_1ga0336ea76bf30587ab204a8296462327b" kindref="member">psa_import_key()</ref> to create an equivalent object.</para>
<para>If a key is created with <computeroutput><ref refid="group__import__export_1ga0336ea76bf30587ab204a8296462327b" kindref="member">psa_import_key()</ref></computeroutput> and then exported with this function, it is not guaranteed that the resulting data is identical: the implementation may choose a different representation of the same key if the format permits it.</para>
<para>This function should generate output in the same format that <computeroutput><ref refid="group__import__export_1ga668e35be8d2852ad3feeef74ac6f75bf" kindref="member">psa_export_key()</ref></computeroutput> does. Refer to the documentation of <computeroutput><ref refid="group__import__export_1ga668e35be8d2852ad3feeef74ac6f75bf" kindref="member">psa_export_key()</ref></computeroutput> for the format for each key type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>Slot whose content is to be exported. This must be an occupied key slot. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer where the key data is to be written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <computeroutput>p_data</computeroutput> buffer in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_data_length</parametername>
</parameternamelist>
<parameterdescription>
<para>On success, the number of bytes that make up the key data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga18646babb2ae6cbde02ea3828bbd9141" kindref="member">PSA_ERROR_DOES_NOT_EXIST</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4d1b8dd8526177a15a210b7afc1accb1" kindref="member">PSA_ERROR_NOT_PERMITTED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga1dcc6d130633ed5db8942257581b55dd" kindref="member">PSA_ERROR_NOT_SUPPORTED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga5cdb6948371d49e916106249020ea3f7" kindref="member">PSA_ERROR_COMMUNICATION_FAILURE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga08b10e70fa5ff0b05c631d9f8f6b2c6b" kindref="member">PSA_ERROR_HARDWARE_FAILURE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga116f4d4c6a9d9db3397991a8472d8950" kindref="member">PSA_ERROR_CORRUPTION_DETECTED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="1042" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="1042" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__se__key__management_1ga62df4bbc6b63ab5ef8183012b12a6cf8" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_generate_key_t) (psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, const psa_key_attributes_t *attributes, uint8_t *pubkey, size_t pubkey_size, size_t *pubkey_length)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, psa_key_slot_number_t key_slot, const psa_key_attributes_t *attributes, uint8_t *pubkey, size_t pubkey_size, size_t *pubkey_length)</argsstring>
        <name>psa_drv_se_generate_key_t</name>
        <briefdescription>
<para>A function that generates a symmetric or asymmetric key on a secure element. </para>
        </briefdescription>
        <detaileddescription>
<para>If the key type <computeroutput>type</computeroutput> recorded in <computeroutput>attributes</computeroutput> is asymmetric (<ref refid="group__crypto__types_1gab138ae2ebf2905dfbaf4154db2620939" kindref="member">PSA_KEY_TYPE_IS_ASYMMETRIC</ref>(<computeroutput>type</computeroutput>) = 1), the driver may export the public key at the time of generation, in the format documented for <ref refid="group__import__export_1gaf22ae73312217aaede2ea02cdebb6062" kindref="member">psa_export_public_key()</ref> by writing it to the <computeroutput>pubkey</computeroutput> buffer. This is optional, intended for secure elements that output the public key at generation time and that cannot export the public key later. Drivers that do not need this feature should leave <computeroutput>*pubkey_length</computeroutput> set to 0 and should implement the psa_drv_key_management_t::p_export_public function. Some implementations do not support this feature, in which case <computeroutput>pubkey</computeroutput> is <computeroutput>NULL</computeroutput> and <computeroutput>pubkey_size</computeroutput> is 0.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Slot where the key will be stored. This must be a valid slot for a key of the chosen type. It must be unoccupied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attributes</parametername>
</parameternamelist>
<parameterdescription>
<para>The key attributes, including the lifetime, the key type and size, and the usage policy. Drivers can call <ref refid="group__attributes_1ga9ea8eae1b81e480cc56dec858859aff9" kindref="member">psa_get_key_lifetime()</ref>, <ref refid="group__attributes_1gae4fb812af4f57aa1ad85e335a865b918" kindref="member">psa_get_key_type()</ref>, <ref refid="group__attributes_1ga5bee85c2164ad3d4c0d42501241eeb06" kindref="member">psa_get_key_bits()</ref>, <ref refid="group__attributes_1gaa1af20f142ca722222c6d98678a0c448" kindref="member">psa_get_key_usage_flags()</ref> and <ref refid="group__attributes_1gac255da850a00bbed925390044f016b34" kindref="member">psa_get_key_algorithm()</ref> to access this information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pubkey</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer where the driver can write the public key, when generating an asymmetric key pair. This is <computeroutput>NULL</computeroutput> when generating a symmetric key or if the core does not support exporting the public key at generation time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pubkey_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the <computeroutput>pubkey</computeroutput> buffer in bytes. This is 0 when generating a symmetric key or if the core does not support exporting the public key at generation time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pubkey_length</parametername>
</parameternamelist>
<parameterdescription>
<para>On entry, this is always 0. On success, the number of bytes written to <computeroutput>pubkey</computeroutput>. If this is 0 or unchanged on return, the core will not read the <computeroutput>pubkey</computeroutput> buffer, and will instead call the driver&apos;s psa_drv_key_management_t::p_export_public function to export the public key when needed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="1094" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="1094" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__driver__derivation_1ga517b85e6c8f12f986de375a7e70028fe" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_key_derivation_setup_t) (psa_drv_se_context_t *drv_context, void *op_context, psa_algorithm_t kdf_alg, psa_key_slot_number_t source_key)</definition>
        <argsstring>)(psa_drv_se_context_t *drv_context, void *op_context, psa_algorithm_t kdf_alg, psa_key_slot_number_t source_key)</argsstring>
        <name>psa_drv_se_key_derivation_setup_t</name>
        <briefdescription>
<para>A function that Sets up a secure element key derivation operation by specifying the algorithm and the source key sot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">drv_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver context structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A hardware-specific structure containing any context information for the implementation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kdf_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The algorithm to be used for the key derivation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source_key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to be used as the source material for the key derivation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="1189" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="1189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__driver__derivation_1ga3d730798a122772534887ea87e2f9c4e" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_key_derivation_collateral_t) (void *op_context, uint32_t collateral_id, const uint8_t *p_collateral, size_t collateral_size)</definition>
        <argsstring>)(void *op_context, uint32_t collateral_id, const uint8_t *p_collateral, size_t collateral_size)</argsstring>
        <name>psa_drv_se_key_derivation_collateral_t</name>
        <briefdescription>
<para>A function that provides collateral (parameters) needed for a secure element key derivation or key agreement operation. </para>
        </briefdescription>
        <detaileddescription>
<para>Since many key derivation algorithms require multiple parameters, it is expected that this function may be called multiple times for the same operation, each with a different algorithm-specific <computeroutput>collateral_id</computeroutput></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A hardware-specific structure containing any context information for the implementation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">collateral_id</parametername>
</parameternamelist>
<parameterdescription>
<para>An ID for the collateral being provided </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_collateral</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer containing the collateral data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">collateral_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the collateral</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="1209" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="1209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__driver__derivation_1ga27684e05d9af85548b26849302f4db8a" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_key_derivation_derive_t) (void *op_context, psa_key_slot_number_t dest_key)</definition>
        <argsstring>)(void *op_context, psa_key_slot_number_t dest_key)</argsstring>
        <name>psa_drv_se_key_derivation_derive_t</name>
        <briefdescription>
<para>A function that performs the final secure element key derivation step and place the generated key material in a slot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">op_context</parametername>
</parameternamelist>
<parameterdescription>
<para>A hardware-specific structure containing any context information for the implementation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dest_key</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot where the generated key material should be placed</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="1224" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="1224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__driver__derivation_1ga25d0d785a7acd6957891f3c1022f91b4" prot="public" static="no">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref>(*</type>
        <definition>typedef psa_status_t(* psa_drv_se_key_derivation_export_t) (void *op_context, uint8_t *p_output, size_t output_size, size_t *p_output_length)</definition>
        <argsstring>)(void *op_context, uint8_t *p_output, size_t output_size, size_t *p_output_length)</argsstring>
        <name>psa_drv_se_key_derivation_export_t</name>
        <briefdescription>
<para>A function that performs the final step of a secure element key agreement and place the generated key material in a buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">p_output</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer in which to place the generated key material </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of <computeroutput>p_output</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_output_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Upon success, contains the number of bytes of key material placed in <computeroutput>p_output</computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="1238" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" bodystart="1238" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__se__registration_1ga99b3afa3fcdf0599706e606119d87182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref></type>
        <definition>psa_status_t psa_register_se_driver</definition>
        <argsstring>(psa_key_location_t location, const psa_drv_se_t *methods)</argsstring>
        <name>psa_register_se_driver</name>
        <param>
          <type><ref refid="group__key__lifetimes_1ga5e700601f686237a8d1e29363ae543d5" kindref="member">psa_key_location_t</ref></type>
          <declname>location</declname>
        </param>
        <param>
          <type>const <ref refid="structpsa__drv__se__t" kindref="compound">psa_drv_se_t</ref> *</type>
          <declname>methods</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register an external cryptoprocessor (secure element) driver.</para>
<para>This function is only intended to be used by driver code, not by application code. In implementations with separation between the PSA cryptography module and applications, this function should only be available to callers that run in the same memory space as the cryptography module, and should not be exposed to applications running in a different memory space.</para>
<para>This function may be called before <ref refid="group__initialization_1ga2de150803fc2f7dc6101d5af7e921dd9" kindref="member">psa_crypto_init()</ref>. It is implementation-defined whether this function may be called after <ref refid="group__initialization_1ga2de150803fc2f7dc6101d5af7e921dd9" kindref="member">psa_crypto_init()</ref>.</para>
<para><simplesect kind="note"><para>Implementations store metadata about keys including the lifetime value, which contains the driver&apos;s location indicator. Therefore, from one instantiation of the PSA Cryptography library to the next one, if there is a key in storage with a certain lifetime value, you must always register the same driver (or an updated version that communicates with the same secure element) with the same location value.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>The location value through which this driver will be exposed to applications. This driver will be used for all keys such that <computeroutput>location == #<ref refid="group__key__lifetimes_1ga4bd83feb0ca4853eee26d5394e69a5de" kindref="member">PSA_KEY_LIFETIME_GET_LOCATION( lifetime )</ref></computeroutput>. The value <ref refid="group__key__lifetimes_1ga3fbfe4a4cf7430a51cf740fe05b2ab27" kindref="member">PSA_KEY_LOCATION_LOCAL_STORAGE</ref> is reserved and may not be used for drivers. Implementations may reserve other values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">methods</parametername>
</parameternamelist>
<parameterdescription>
<para>The method table of the driver. This structure must remain valid for as long as the cryptography module keeps running. It is typically a global constant.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__error_1ga4cc859e2c66ca381c7418db3527a65e1" kindref="member">PSA_SUCCESS</ref> The driver was successfully registered. Applications can now use <computeroutput>location</computeroutput> to access keys through the methods passed to this function. </para>
</simplesect>
<simplesect kind="return"><para><ref refid="group__error_1ga933d40fa2a591004f2e93aa91e11db84" kindref="member">PSA_ERROR_BAD_STATE</ref> This function was called after the initialization of the cryptography module, and this implementation does not support driver registration at this stage. </para>
</simplesect>
<simplesect kind="return"><para><ref refid="group__error_1gaf2b34cc87edc72f3ba90071a08210d20" kindref="member">PSA_ERROR_ALREADY_EXISTS</ref> There is already a registered driver for this value of <computeroutput>location</computeroutput>. </para>
</simplesect>
<simplesect kind="return"><para><ref refid="group__error_1ga798df25a505ebf931f7bec1f80f1f85f" kindref="member">PSA_ERROR_INVALID_ARGUMENT</ref> <computeroutput>location</computeroutput> is a reserved value. </para>
</simplesect>
<simplesect kind="return"><para><ref refid="group__error_1ga1dcc6d130633ed5db8942257581b55dd" kindref="member">PSA_ERROR_NOT_SUPPORTED</ref> <computeroutput>methods-&gt;hal_version</computeroutput> is not supported by this implementation. </para>
</simplesect>
<simplesect kind="return"><para><ref refid="group__error_1ga91b2ad8a867517a2651f1b076c5216e5" kindref="member">PSA_ERROR_INSUFFICIENT_MEMORY</ref> </para>
</simplesect>
<simplesect kind="return"><para><ref refid="group__error_1ga4d1b8dd8526177a15a210b7afc1accb1" kindref="member">PSA_ERROR_NOT_PERMITTED</ref> </para>
</simplesect>
<simplesect kind="return"><para><ref refid="group__error_1gadd169a1af2707862b95fb9df91dfc37d" kindref="member">PSA_ERROR_STORAGE_FAILURE</ref> </para>
</simplesect>
<simplesect kind="return"><para><ref refid="group__error_1ga9febb81a44bdeb4c6c42bf4f697b13bf" kindref="member">PSA_ERROR_DATA_CORRUPT</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" line="1373" column="14" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h" declline="1373" declcolumn="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>PSA external cryptoprocessor driver module. </para>
    </briefdescription>
    <detaileddescription>
<para>This header declares types and function signatures for cryptography drivers that access key material via opaque references. This is meant for cryptoprocessors that have a separate key storage from the space in which the PSA Crypto implementation runs, typically secure elements (SEs).</para>
<para>This file is part of the PSA Crypto Driver HAL (hardware abstraction layer), containing functions for driver developers to implement to enable hardware to be called in a standardized way by a PSA Cryptography API implementation. The functions comprising the driver HAL, which driver authors implement, are not intended to be called by application developers. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="18"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>The<sp/>Mbed<sp/>TLS<sp/>Contributors</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-License-Identifier:<sp/>Apache-2.0<sp/>OR<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PSA_CRYPTO_SE_DRIVER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PSA_CRYPTO_SE_DRIVER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="private__access_8h" kindref="compound">mbedtls/private_access.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="crypto__driver__common_8h" kindref="compound">crypto_driver_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structpsa__drv__se__context__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="89" refid="structpsa__drv__se__context__t_1aec397926e3f4d632cdff5df7b8b50e4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(persistent_data);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="structpsa__drv__se__context__t_1aec353671b641d17f394c29310aa2df26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(persistent_data_size);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="structpsa__drv__se__context__t_1ac1741cc4fe186b3e75ab9b7eaff4fc80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uintptr_t<sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(transient_data);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}<sp/><ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="group__se__init_1ga61d926bb163ea2aae3c6e27c19ebe58c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__init_1ga61d926bb163ea2aae3c6e27c19ebe58c" kindref="member">psa_drv_se_init_t</ref>)(<ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*persistent_data,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__key__lifetimes_1ga5e700601f686237a8d1e29363ae543d5" kindref="member">psa_key_location_t</ref><sp/>location);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__DOXYGEN_ONLY__)<sp/>||<sp/>!defined(MBEDTLS_PSA_CRYPTO_SE_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Mbed<sp/>TLS<sp/>with<sp/>secure<sp/>element<sp/>support<sp/>enabled<sp/>defines<sp/>this<sp/>type<sp/>in</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>crypto_types.h<sp/>because<sp/>it<sp/>is<sp/>also<sp/>visible<sp/>to<sp/>applications<sp/>through<sp/>an</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>implementation-specific<sp/>extension.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>For<sp/>the<sp/>PSA<sp/>Cryptography<sp/>specification,<sp/>this<sp/>type<sp/>is<sp/>only<sp/>visible</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>via<sp/>crypto_se_driver.h.<sp/>*/</highlight></codeline>
<codeline lineno="137"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__DOXYGEN_ONLY__<sp/>||<sp/>!MBEDTLS_PSA_CRYPTO_SE_C<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="group__se__mac_1ga1d7dacfb4ede205538c5713b11e10326" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__mac_1ga1d7dacfb4ede205538c5713b11e10326" kindref="member">psa_drv_se_mac_setup_t</ref>)(<ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*op_context,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__types_1gac2e4d47f1300d73c2f829a6d99252d69" kindref="member">psa_algorithm_t</ref><sp/>algorithm);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="group__se__mac_1ga5066f0423519b1a403019f16cad004f6" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__mac_1ga5066f0423519b1a403019f16cad004f6" kindref="member">psa_drv_se_mac_update_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*op_context,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_input,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>input_length);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="group__se__mac_1ga8d2c6b8639790e00a755774270c9a36a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__mac_1ga8d2c6b8639790e00a755774270c9a36a" kindref="member">psa_drv_se_mac_finish_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*op_context,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p_mac,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>mac_size,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*p_mac_length);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="group__se__mac_1ga57c46b9072760a2f3f501dc8278bf963" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__mac_1ga57c46b9072760a2f3f501dc8278bf963" kindref="member">psa_drv_se_mac_finish_verify_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*op_context,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_mac,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>mac_length);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="group__se__mac_1ga5ffdfc1d70ef3b4da100e9e46a08e511" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__mac_1ga5ffdfc1d70ef3b4da100e9e46a08e511" kindref="member">psa_drv_se_mac_abort_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*op_context);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="group__se__mac_1gac8b2bbcfeb4a8f4409a4777051f55666" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__mac_1gac8b2bbcfeb4a8f4409a4777051f55666" kindref="member">psa_drv_se_mac_generate_t</ref>)(<ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_input,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>input_length,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__types_1gac2e4d47f1300d73c2f829a6d99252d69" kindref="member">psa_algorithm_t</ref><sp/>alg,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p_mac,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>mac_size,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*p_mac_length);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="group__se__mac_1ga6e7e9a020f0061492ba383aa404f1c09" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__mac_1ga6e7e9a020f0061492ba383aa404f1c09" kindref="member">psa_drv_se_mac_verify_t</ref>)(<ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_input,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>input_length,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__types_1gac2e4d47f1300d73c2f829a6d99252d69" kindref="member">psa_algorithm_t</ref><sp/>alg,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_mac,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>mac_length);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="structpsa__drv__se__mac__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="315" refid="structpsa__drv__se__mac__t_1a630880a61a343c3066ace740fd4393ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(context_size);</highlight></codeline>
<codeline lineno="318" refid="structpsa__drv__se__mac__t_1a409a50bcf9ecf6bb3f5ce57eab9b941a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__mac_1ga1d7dacfb4ede205538c5713b11e10326" kindref="member">psa_drv_se_mac_setup_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_setup);</highlight></codeline>
<codeline lineno="321" refid="structpsa__drv__se__mac__t_1acae02c07a7a5f13e8fed9cb611f1d9f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__mac_1ga5066f0423519b1a403019f16cad004f6" kindref="member">psa_drv_se_mac_update_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_update);</highlight></codeline>
<codeline lineno="324" refid="structpsa__drv__se__mac__t_1adb1a899a75355167c46978b511a27b03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__mac_1ga8d2c6b8639790e00a755774270c9a36a" kindref="member">psa_drv_se_mac_finish_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_finish);</highlight></codeline>
<codeline lineno="327" refid="structpsa__drv__se__mac__t_1a1c189e417c2bc3add303b3277a9442b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__mac_1ga57c46b9072760a2f3f501dc8278bf963" kindref="member">psa_drv_se_mac_finish_verify_t</ref><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_finish_verify);</highlight></codeline>
<codeline lineno="330" refid="structpsa__drv__se__mac__t_1a04523532f4f063e0b79b00d8dd304871" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__mac_1ga5ffdfc1d70ef3b4da100e9e46a08e511" kindref="member">psa_drv_se_mac_abort_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_abort);</highlight></codeline>
<codeline lineno="333" refid="structpsa__drv__se__mac__t_1a0103d05a464b85025506373e971f9b77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__mac_1gac8b2bbcfeb4a8f4409a4777051f55666" kindref="member">psa_drv_se_mac_generate_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_mac);</highlight></codeline>
<codeline lineno="336" refid="structpsa__drv__se__mac__t_1a130a8059464a2716bb23ee18d823afb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__mac_1ga6e7e9a020f0061492ba383aa404f1c09" kindref="member">psa_drv_se_mac_verify_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_mac_verify);</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}<sp/><ref refid="structpsa__drv__se__mac__t" kindref="compound">psa_drv_se_mac_t</ref>;</highlight></codeline>
<codeline lineno="379" refid="group__se__cipher_1ga7d31744990222cf99a02bcd905996a3a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__cipher_1ga7d31744990222cf99a02bcd905996a3a" kindref="member">psa_drv_se_cipher_setup_t</ref>)(<ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*op_context,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__types_1gac2e4d47f1300d73c2f829a6d99252d69" kindref="member">psa_algorithm_t</ref><sp/>algorithm,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="crypto__driver__common_8h_1ad4cfad719c2b1ad88835d193f593371d" kindref="member">psa_encrypt_or_decrypt_t</ref><sp/>direction);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="group__se__cipher_1ga4c603c3ee2f0f98a09d9df1e9a0c86bf" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__cipher_1ga4c603c3ee2f0f98a09d9df1e9a0c86bf" kindref="member">psa_drv_se_cipher_set_iv_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*op_context,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_iv,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iv_length);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="group__se__cipher_1gaeca34a7a7afd10ba9c79f3eaaf20d96b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__cipher_1gaeca34a7a7afd10ba9c79f3eaaf20d96b" kindref="member">psa_drv_se_cipher_update_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*op_context,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_input,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>input_size,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p_output,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>output_size,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*p_output_length);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="group__se__cipher_1ga06bf0bfbf55291d0bf5a411175a0350b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__cipher_1ga06bf0bfbf55291d0bf5a411175a0350b" kindref="member">psa_drv_se_cipher_finish_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*op_context,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p_output,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>output_size,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*p_output_length);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="group__se__cipher_1ga1cb204afa81012e4c561e0731792cae9" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__cipher_1ga1cb204afa81012e4c561e0731792cae9" kindref="member">psa_drv_se_cipher_abort_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*op_context);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="group__se__cipher_1gaec35ce527439186d9f7e283e24c63a75" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__cipher_1gaec35ce527439186d9f7e283e24c63a75" kindref="member">psa_drv_se_cipher_ecb_t</ref>)(<ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__types_1gac2e4d47f1300d73c2f829a6d99252d69" kindref="member">psa_algorithm_t</ref><sp/>algorithm,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="crypto__driver__common_8h_1ad4cfad719c2b1ad88835d193f593371d" kindref="member">psa_encrypt_or_decrypt_t</ref><sp/>direction,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_input,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>input_size,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p_output,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>output_size);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="structpsa__drv__se__cipher__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="502" refid="structpsa__drv__se__cipher__t_1affb02befeff9d54d7e99542601f6ba1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(context_size);</highlight></codeline>
<codeline lineno="504" refid="structpsa__drv__se__cipher__t_1a3b82a3288d815290ca35669eba7eb45a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__cipher_1ga7d31744990222cf99a02bcd905996a3a" kindref="member">psa_drv_se_cipher_setup_t</ref><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_setup);</highlight></codeline>
<codeline lineno="506" refid="structpsa__drv__se__cipher__t_1aca20219b5832b42d6662a0f5b98372c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__cipher_1ga4c603c3ee2f0f98a09d9df1e9a0c86bf" kindref="member">psa_drv_se_cipher_set_iv_t</ref><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_set_iv);</highlight></codeline>
<codeline lineno="508" refid="structpsa__drv__se__cipher__t_1a7f45ef113692a806e8dc1fe2f226e650" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__cipher_1gaeca34a7a7afd10ba9c79f3eaaf20d96b" kindref="member">psa_drv_se_cipher_update_t</ref><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_update);</highlight></codeline>
<codeline lineno="510" refid="structpsa__drv__se__cipher__t_1a7c0214546e4e3f3d63b064e63e3516ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__cipher_1ga06bf0bfbf55291d0bf5a411175a0350b" kindref="member">psa_drv_se_cipher_finish_t</ref><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_finish);</highlight></codeline>
<codeline lineno="512" refid="structpsa__drv__se__cipher__t_1a18fa04905608d4484813f81441ab99f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__cipher_1ga1cb204afa81012e4c561e0731792cae9" kindref="member">psa_drv_se_cipher_abort_t</ref><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_abort);</highlight></codeline>
<codeline lineno="517" refid="structpsa__drv__se__cipher__t_1a3a264edc55b96bb8ba585d6f9abfdf55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__cipher_1gaec35ce527439186d9f7e283e24c63a75" kindref="member">psa_drv_se_cipher_ecb_t</ref><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_ecb);</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}<sp/><ref refid="structpsa__drv__se__cipher__t" kindref="compound">psa_drv_se_cipher_t</ref>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="group__se__asymmetric_1gaac5182bca42737841785662743594515" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__asymmetric_1gaac5182bca42737841785662743594515" kindref="member">psa_drv_se_asymmetric_sign_t</ref>)(<ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__types_1gac2e4d47f1300d73c2f829a6d99252d69" kindref="member">psa_algorithm_t</ref><sp/>alg,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_hash,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hash_length,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p_signature,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>signature_size,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*p_signature_length);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="group__se__asymmetric_1gabb372536a004009294591eaf6cc4d186" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__asymmetric_1gabb372536a004009294591eaf6cc4d186" kindref="member">psa_drv_se_asymmetric_verify_t</ref>)(<ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__types_1gac2e4d47f1300d73c2f829a6d99252d69" kindref="member">psa_algorithm_t</ref><sp/>alg,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_hash,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hash_length,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_signature,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>signature_length);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="group__se__asymmetric_1ga8544105c218640adfc4f983da4b34478" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__asymmetric_1ga8544105c218640adfc4f983da4b34478" kindref="member">psa_drv_se_asymmetric_encrypt_t</ref>)(<ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__types_1gac2e4d47f1300d73c2f829a6d99252d69" kindref="member">psa_algorithm_t</ref><sp/>alg,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_input,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>input_length,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_salt,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>salt_length,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p_output,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>output_size,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*p_output_length);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="651" refid="group__se__asymmetric_1ga3472b9f36ffd9eb303100d5ec3eacda0" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__asymmetric_1ga3472b9f36ffd9eb303100d5ec3eacda0" kindref="member">psa_drv_se_asymmetric_decrypt_t</ref>)(<ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__types_1gac2e4d47f1300d73c2f829a6d99252d69" kindref="member">psa_algorithm_t</ref><sp/>alg,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_input,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>input_length,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_salt,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>salt_length,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p_output,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>output_size,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*p_output_length);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="structpsa__drv__se__asymmetric__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="673" refid="structpsa__drv__se__asymmetric__t_1a32eda772d9a7ba0f47e9672e70625812" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__asymmetric_1gaac5182bca42737841785662743594515" kindref="member">psa_drv_se_asymmetric_sign_t</ref><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_sign);</highlight></codeline>
<codeline lineno="675" refid="structpsa__drv__se__asymmetric__t_1aae8d5b389df3f9455fa42eb29d0105fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__asymmetric_1gabb372536a004009294591eaf6cc4d186" kindref="member">psa_drv_se_asymmetric_verify_t</ref><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_verify);</highlight></codeline>
<codeline lineno="677" refid="structpsa__drv__se__asymmetric__t_1a4136fbf90073f9eb73b633b1ab2a511e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__asymmetric_1ga8544105c218640adfc4f983da4b34478" kindref="member">psa_drv_se_asymmetric_encrypt_t</ref><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_encrypt);</highlight></codeline>
<codeline lineno="679" refid="structpsa__drv__se__asymmetric__t_1a5a458389f3f6e57665bc7dfad9d30d3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__asymmetric_1ga3472b9f36ffd9eb303100d5ec3eacda0" kindref="member">psa_drv_se_asymmetric_decrypt_t</ref><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_decrypt);</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}<sp/><ref refid="structpsa__drv__se__asymmetric__t" kindref="compound">psa_drv_se_asymmetric_t</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="724" refid="group__se__aead_1ga0acef6488a7dddbc707467907dec1842" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__aead_1ga0acef6488a7dddbc707467907dec1842" kindref="member">psa_drv_se_aead_encrypt_t</ref>)(<ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__types_1gac2e4d47f1300d73c2f829a6d99252d69" kindref="member">psa_algorithm_t</ref><sp/>algorithm,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_nonce,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nonce_length,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_additional_data,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>additional_data_length,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_plaintext,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>plaintext_length,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p_ciphertext,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ciphertext_size,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*p_ciphertext_length);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="766" refid="group__se__aead_1gab517338cb0541c9e36fbcea713622104" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__aead_1gab517338cb0541c9e36fbcea713622104" kindref="member">psa_drv_se_aead_decrypt_t</ref>)(<ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__types_1gac2e4d47f1300d73c2f829a6d99252d69" kindref="member">psa_algorithm_t</ref><sp/>algorithm,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_nonce,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nonce_length,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_additional_data,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>additional_data_length,</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_ciphertext,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ciphertext_length,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p_plaintext,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>plaintext_size,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*p_plaintext_length);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="788" refid="structpsa__drv__se__aead__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="790" refid="structpsa__drv__se__aead__t_1a2992811373ce8cf1b83612737d14d943" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__aead_1ga0acef6488a7dddbc707467907dec1842" kindref="member">psa_drv_se_aead_encrypt_t</ref><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_encrypt);</highlight></codeline>
<codeline lineno="792" refid="structpsa__drv__se__aead__t_1ad4b2c76a5a954d35f7ba8b435056bbeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__aead_1gab517338cb0541c9e36fbcea713622104" kindref="member">psa_drv_se_aead_decrypt_t</ref><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_decrypt);</highlight></codeline>
<codeline lineno="793"><highlight class="normal">}<sp/><ref refid="structpsa__drv__se__aead__t" kindref="compound">psa_drv_se_aead_t</ref>;</highlight></codeline>
<codeline lineno="806" refid="group__se__key__management_1ga984d5535962320e0c4692bb4ede486ef" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="807" refid="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efa9d61c409158f958b864b759662adbbed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efa9d61c409158f958b864b759662adbbed" kindref="member">PSA_KEY_CREATION_IMPORT</ref>,<sp/></highlight></codeline>
<codeline lineno="808" refid="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efab197db75a74e331a570562ba3b3e04a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efab197db75a74e331a570562ba3b3e04a9" kindref="member">PSA_KEY_CREATION_GENERATE</ref>,<sp/></highlight></codeline>
<codeline lineno="809" refid="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efaae615ce8bde386039d1ee1b348f6552c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efaae615ce8bde386039d1ee1b348f6552c" kindref="member">PSA_KEY_CREATION_DERIVE</ref>,<sp/></highlight></codeline>
<codeline lineno="810" refid="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efa61d76b2af65ab3fb904b5eedd8f46363" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efa61d76b2af65ab3fb904b5eedd8f46363" kindref="member">PSA_KEY_CREATION_COPY</ref>,<sp/></highlight></codeline>
<codeline lineno="812"><highlight class="preprocessor">#ifndef<sp/>__DOXYGEN_ONLY__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="830" refid="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efabcea58ac75861648df36ae58a8562257" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__key__management_1gga984d5535962320e0c4692bb4ede486efabcea58ac75861648df36ae58a8562257" kindref="member">PSA_KEY_CREATION_REGISTER</ref>,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal">}<sp/><ref refid="group__se__key__management_1ga984d5535962320e0c4692bb4ede486ef" kindref="member">psa_key_creation_method_t</ref>;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="898" refid="group__se__key__management_1gaab9a5d39285c68ac29264017e0119d98" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__key__management_1gaab9a5d39285c68ac29264017e0119d98" kindref="member">psa_drv_se_allocate_key_t</ref>)(</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*persistent_data,</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpsa__key__attributes__s" kindref="compound">psa_key_attributes_t</ref><sp/>*attributes,</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__key__management_1ga984d5535962320e0c4692bb4ede486ef" kindref="member">psa_key_creation_method_t</ref><sp/>method,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>*key_slot);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="944" refid="group__se__key__management_1ga26c4b96c6d68dbd74b0512475d29f934" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__key__management_1ga26c4b96c6d68dbd74b0512475d29f934" kindref="member">psa_drv_se_validate_slot_number_t</ref>)(</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*persistent_data,</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpsa__key__attributes__s" kindref="compound">psa_key_attributes_t</ref><sp/>*attributes,</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__key__management_1ga984d5535962320e0c4692bb4ede486ef" kindref="member">psa_key_creation_method_t</ref><sp/>method,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="980" refid="group__se__key__management_1ga9e04e71aff4837259e54598708edcf7d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__key__management_1ga9e04e71aff4837259e54598708edcf7d" kindref="member">psa_drv_se_import_key_t</ref>)(</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot,</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpsa__key__attributes__s" kindref="compound">psa_key_attributes_t</ref><sp/>*attributes,</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data,</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_length,</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*bits);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006" refid="group__se__key__management_1gaaf8c22c4a5b87035fcb594858d68e1ba" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__key__management_1gaaf8c22c4a5b87035fcb594858d68e1ba" kindref="member">psa_drv_se_destroy_key_t</ref>)(</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*persistent_data,</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042" refid="group__se__key__management_1ga6c51abdf1eb2165b800f1de017ed42fb" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__key__management_1ga6c51abdf1eb2165b800f1de017ed42fb" kindref="member">psa_drv_se_export_key_t</ref>)(<ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key,</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p_data,</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_size,</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*p_data_length);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094" refid="group__se__key__management_1ga62df4bbc6b63ab5ef8183012b12a6cf8" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__se__key__management_1ga62df4bbc6b63ab5ef8183012b12a6cf8" kindref="member">psa_drv_se_generate_key_t</ref>)(</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>key_slot,</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpsa__key__attributes__s" kindref="compound">psa_key_attributes_t</ref><sp/>*attributes,</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*pubkey,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pubkey_size,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*pubkey_length);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109" refid="structpsa__drv__se__key__management__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1111" refid="structpsa__drv__se__key__management__t_1abb4d6fb90105c1034df79fdceb62d725" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__key__management_1gaab9a5d39285c68ac29264017e0119d98" kindref="member">psa_drv_se_allocate_key_t</ref><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_allocate);</highlight></codeline>
<codeline lineno="1113" refid="structpsa__drv__se__key__management__t_1a4437d405382ec5972e1ce5b895d8d4c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__key__management_1ga26c4b96c6d68dbd74b0512475d29f934" kindref="member">psa_drv_se_validate_slot_number_t</ref><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_validate_slot_number);</highlight></codeline>
<codeline lineno="1115" refid="structpsa__drv__se__key__management__t_1a1074b67bfde26d777adbb1eae1fb6380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__key__management_1ga9e04e71aff4837259e54598708edcf7d" kindref="member">psa_drv_se_import_key_t</ref><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_import);</highlight></codeline>
<codeline lineno="1117" refid="structpsa__drv__se__key__management__t_1a0d4041e85a75422f4390855314d83a65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__key__management_1ga62df4bbc6b63ab5ef8183012b12a6cf8" kindref="member">psa_drv_se_generate_key_t</ref><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_generate);</highlight></codeline>
<codeline lineno="1119" refid="structpsa__drv__se__key__management__t_1a5cc7a7031dbea124f613ab27c12385a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__key__management_1gaaf8c22c4a5b87035fcb594858d68e1ba" kindref="member">psa_drv_se_destroy_key_t</ref><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_destroy);</highlight></codeline>
<codeline lineno="1121" refid="structpsa__drv__se__key__management__t_1ac16153ff52656c19d83c896c73ecfe62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__key__management_1ga6c51abdf1eb2165b800f1de017ed42fb" kindref="member">psa_drv_se_export_key_t</ref><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_export);</highlight></codeline>
<codeline lineno="1123" refid="structpsa__drv__se__key__management__t_1ad2f2df9ed1d03357a43513f074e27662" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__key__management_1ga6c51abdf1eb2165b800f1de017ed42fb" kindref="member">psa_drv_se_export_key_t</ref><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_export_public);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal">}<sp/><ref refid="structpsa__drv__se__key__management__t" kindref="compound">psa_drv_se_key_management_t</ref>;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189" refid="group__driver__derivation_1ga517b85e6c8f12f986de375a7e70028fe" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__driver__derivation_1ga517b85e6c8f12f986de375a7e70028fe" kindref="member">psa_drv_se_key_derivation_setup_t</ref>)(<ref refid="structpsa__drv__se__context__t" kindref="compound">psa_drv_se_context_t</ref><sp/>*drv_context,</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*op_context,</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__types_1gac2e4d47f1300d73c2f829a6d99252d69" kindref="member">psa_algorithm_t</ref><sp/>kdf_alg,</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>source_key);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209" refid="group__driver__derivation_1ga3d730798a122772534887ea87e2f9c4e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__driver__derivation_1ga3d730798a122772534887ea87e2f9c4e" kindref="member">psa_drv_se_key_derivation_collateral_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*op_context,</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>collateral_id,</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p_collateral,</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>collateral_size);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224" refid="group__driver__derivation_1ga27684e05d9af85548b26849302f4db8a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__driver__derivation_1ga27684e05d9af85548b26849302f4db8a" kindref="member">psa_drv_se_key_derivation_derive_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*op_context,</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__attributes_1ga90828ba6e282dd39260c81af68532e1d" kindref="member">psa_key_slot_number_t</ref><sp/>dest_key);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238" refid="group__driver__derivation_1ga25d0d785a7acd6957891f3c1022f91b4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/>(*<ref refid="group__driver__derivation_1ga25d0d785a7acd6957891f3c1022f91b4" kindref="member">psa_drv_se_key_derivation_export_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*op_context,</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p_output,</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>output_size,</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*p_output_length);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252" refid="structpsa__drv__se__key__derivation__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1254" refid="structpsa__drv__se__key__derivation__t_1ade32bef1eea2bfdc57239b0442ee47fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(context_size);</highlight></codeline>
<codeline lineno="1256" refid="structpsa__drv__se__key__derivation__t_1adc6f5235812811da6de152a3b5e0734f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__driver__derivation_1ga517b85e6c8f12f986de375a7e70028fe" kindref="member">psa_drv_se_key_derivation_setup_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_setup);</highlight></codeline>
<codeline lineno="1258" refid="structpsa__drv__se__key__derivation__t_1a65ad88d01a7ea1523cb62e52770cd685" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__driver__derivation_1ga3d730798a122772534887ea87e2f9c4e" kindref="member">psa_drv_se_key_derivation_collateral_t</ref><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_collateral);</highlight></codeline>
<codeline lineno="1260" refid="structpsa__drv__se__key__derivation__t_1afab5a37e8a4f6a7d9da10d021a4155d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__driver__derivation_1ga27684e05d9af85548b26849302f4db8a" kindref="member">psa_drv_se_key_derivation_derive_t</ref><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_derive);</highlight></codeline>
<codeline lineno="1263" refid="structpsa__drv__se__key__derivation__t_1a7d514e4e01dea00404d597299d16fbda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__driver__derivation_1ga25d0d785a7acd6957891f3c1022f91b4" kindref="member">psa_drv_se_key_derivation_export_t</ref><sp/><sp/><sp/><sp/><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_export);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal">}<sp/><ref refid="structpsa__drv__se__key__derivation__t" kindref="compound">psa_drv_se_key_derivation_t</ref>;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278" refid="structpsa__drv__se__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1284" refid="structpsa__drv__se__t_1a0b7dcdeaa115d6198f633af77c81a623" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(hal_version);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294" refid="structpsa__drv__se__t_1a8105019970db18ca40c76808f64b2d2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(persistent_data_size);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306" refid="structpsa__drv__se__t_1a6f8ed8576d52acee34c58b36583cc501" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__se__init_1ga61d926bb163ea2aae3c6e27c19ebe58c" kindref="member">psa_drv_se_init_t</ref><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(p_init);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308" refid="structpsa__drv__se__t_1a7cefb1bff884aa46d19c1901248ae76c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpsa__drv__se__key__management__t" kindref="compound">psa_drv_se_key_management_t</ref><sp/>*<ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(key_management);</highlight></codeline>
<codeline lineno="1309" refid="structpsa__drv__se__t_1aede4884f72e812920cb910cca78776e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpsa__drv__se__mac__t" kindref="compound">psa_drv_se_mac_t</ref><sp/>*<ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(mac);</highlight></codeline>
<codeline lineno="1310" refid="structpsa__drv__se__t_1a072fa1ee230dff89868754d0d9d0349d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpsa__drv__se__cipher__t" kindref="compound">psa_drv_se_cipher_t</ref><sp/>*<ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(cipher);</highlight></codeline>
<codeline lineno="1311" refid="structpsa__drv__se__t_1a61f4e232db4f185c40c1a9c013a048d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpsa__drv__se__aead__t" kindref="compound">psa_drv_se_aead_t</ref><sp/>*<ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(aead);</highlight></codeline>
<codeline lineno="1312" refid="structpsa__drv__se__t_1afbd4d3e7762d7e24fe475f9a8c4f6298" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpsa__drv__se__asymmetric__t" kindref="compound">psa_drv_se_asymmetric_t</ref><sp/>*<ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(asymmetric);</highlight></codeline>
<codeline lineno="1313" refid="structpsa__drv__se__t_1a2cd1ece81a7ec7f991aa78f0baf987a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpsa__drv__se__key__derivation__t" kindref="compound">psa_drv_se_key_derivation_t</ref><sp/>*<ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(derivation);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">}<sp/><ref refid="structpsa__drv__se__t" kindref="compound">psa_drv_se_t</ref>;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="comment">/*<sp/>0.0.0<sp/>patchlevel<sp/>5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319" refid="group__se__registration_1ga65e25a718c3e95893522ae882d4ea826" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PSA_DRV_SE_HAL_VERSION<sp/>0x00000005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><ref refid="group__error_1ga05676e70ba5c6a7565aff3c36677c1f9" kindref="member">psa_status_t</ref><sp/><ref refid="group__se__registration_1ga99b3afa3fcdf0599706e606119d87182" kindref="member">psa_register_se_driver</ref>(</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__key__lifetimes_1ga5e700601f686237a8d1e29363ae543d5" kindref="member">psa_key_location_t</ref><sp/>location,</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpsa__drv__se__t" kindref="compound">psa_drv_se_t</ref><sp/>*methods);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>PSA_CRYPTO_SE_DRIVER_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/psa/crypto_se_driver.h"/>
  </compounddef>
</doxygen>
