<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="mbedtls__config_8h" kind="file" language="C++">
    <compoundname>mbedtls_config.h</compoundname>
    <includedby refid="mbedtls_2build__info_8h" local="yes">build_info.h</includedby>
    <invincdepgraph>
      <node id="73">
        <label>lms.h</label>
        <link refid="lms_8h"/>
      </node>
      <node id="75">
        <label>pem.h</label>
        <link refid="pem_8h"/>
      </node>
      <node id="69">
        <label>sha256.h</label>
        <link refid="sha256_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>ripemd160.h</label>
        <link refid="ripemd160_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>aria.h</label>
        <link refid="aria_8h"/>
      </node>
      <node id="23">
        <label>pkcs5.h</label>
        <link refid="pkcs5_8h"/>
      </node>
      <node id="52">
        <label>dhm.h</label>
        <link refid="dhm_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>crypto_builtin_composites.h</label>
        <link refid="crypto__builtin__composites_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ssl_ciphersuites.h</label>
        <link refid="ssl__ciphersuites_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="13">
        <label>debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="49">
        <label>ecp.h</label>
        <link refid="ecp_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>hkdf.h</label>
        <link refid="hkdf_8h"/>
      </node>
      <node id="57">
        <label>threading.h</label>
        <link refid="threading_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>platform_time.h</label>
        <link refid="platform__time_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>x509_csr.h</label>
        <link refid="x509__csr_8h"/>
      </node>
      <node id="3">
        <label>aes.h</label>
        <link refid="aes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>entropy.h</label>
        <link refid="entropy_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>crypto_extra.h</label>
        <link refid="crypto__extra_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>crypto.h</label>
        <link refid="crypto_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ssl_cookie.h</label>
        <link refid="ssl__cookie_8h"/>
      </node>
      <node id="72">
        <label>error.h</label>
        <link refid="error_8h"/>
      </node>
      <node id="60">
        <label>crypto_types.h</label>
        <link refid="crypto__types_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>nist_kw.h</label>
        <link refid="nist__kw_8h"/>
      </node>
      <node id="10">
        <label>x509.h</label>
        <link refid="x509_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>bignum.h</label>
        <link refid="bignum_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>gcm.h</label>
        <link refid="gcm_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>platform_util.h</label>
        <link refid="platform__util_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>sha512.h</label>
        <link refid="sha512_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>md5.h</label>
        <link refid="md5_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>build_info.h</label>
        <link refid="mbedtls_2build__info_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>hmac_drbg.h</label>
        <link refid="hmac__drbg_8h"/>
      </node>
      <node id="71">
        <label>sha3.h</label>
        <link refid="sha3_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ssl.h</label>
        <link refid="ssl_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ssl_ticket.h</label>
        <link refid="ssl__ticket_8h"/>
      </node>
      <node id="29">
        <label>crypto_struct.h</label>
        <link refid="crypto__struct_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>ecdsa.h</label>
        <link refid="ecdsa_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>crypto_builtin_primitives.h</label>
        <link refid="crypto__builtin__primitives_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ssl_cache.h</label>
        <link refid="ssl__cache_8h"/>
      </node>
      <node id="62">
        <label>crypto_driver_contexts_key_derivation.h</label>
        <link refid="crypto__driver__contexts__key__derivation_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ccm.h</label>
        <link refid="ccm_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>pk.h</label>
        <link refid="pk_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ctr_drbg.h</label>
        <link refid="ctr__drbg_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>pkcs7.h</label>
        <link refid="pkcs7_8h"/>
      </node>
      <node id="21">
        <label>oid.h</label>
        <link refid="oid_8h"/>
      </node>
      <node id="14">
        <label>net_sockets.h</label>
        <link refid="net__sockets_8h"/>
      </node>
      <node id="35">
        <label>crypto_driver_contexts_primitives.h</label>
        <link refid="crypto__driver__contexts__primitives_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>crypto_platform.h</label>
        <link refid="crypto__platform_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>crypto_sizes.h</label>
        <link refid="crypto__sizes_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>poly1305.h</label>
        <link refid="poly1305_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>ecjpake.h</label>
        <link refid="ecjpake_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>mbedtls_config.h</label>
        <link refid="mbedtls__config_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>psa_util.h</label>
        <link refid="psa__util_8h"/>
      </node>
      <node id="53">
        <label>base64.h</label>
        <link refid="base64_8h"/>
      </node>
      <node id="77">
        <label>version.h</label>
        <link refid="version_8h"/>
      </node>
      <node id="61">
        <label>crypto_driver_common.h</label>
        <link refid="crypto__driver__common_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>ecdh.h</label>
        <link refid="ecdh_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>crypto_driver_contexts_composites.h</label>
        <link refid="crypto__driver__contexts__composites_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>des.h</label>
        <link refid="des_8h"/>
      </node>
      <node id="58">
        <label>build_info.h</label>
        <link refid="psa_2build__info_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>camellia.h</label>
        <link refid="camellia_8h"/>
      </node>
      <node id="33">
        <label>cmac.h</label>
        <link refid="cmac_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>crypto_builtin_key_derivation.h</label>
        <link refid="crypto__builtin__key__derivation_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>cipher.h</label>
        <link refid="cipher_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>md.h</label>
        <link refid="md_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>chachapoly.h</label>
        <link refid="chachapoly_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>x509_crl.h</label>
        <link refid="x509__crl_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>memory_buffer_alloc.h</label>
        <link refid="memory__buffer__alloc_8h"/>
      </node>
      <node id="11">
        <label>x509_crt.h</label>
        <link refid="x509__crt_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>asn1.h</label>
        <link refid="asn1_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>rsa.h</label>
        <link refid="rsa_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>chacha20.h</label>
        <link refid="chacha20_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>asn1write.h</label>
        <link refid="asn1write_8h"/>
      </node>
      <node id="68">
        <label>sha1.h</label>
        <link refid="sha1_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>crypto_se_driver.h</label>
        <link refid="crypto__se__driver_8h"/>
      </node>
      <node id="22">
        <label>pkcs12.h</label>
        <link refid="pkcs12_8h"/>
      </node>
      <node id="76">
        <label>timing.h</label>
        <link refid="timing_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <header>SECTION: System support</header>
      <description><para>This is an optional version symbol that enables compatibility handling of config files.</para>
<para>It is equal to the <ref refid="mbedtls_2build__info_8h_1adb4f54ebb33fd1a25e2c4d4480cf4936" kindref="member">MBEDTLS_VERSION_NUMBER</ref> of the Mbed TLS version that introduced the config format we want to be compatible with.</para>
<para>This section sets system specific settings. </para>
</description>
      <memberdef kind="define" id="mbedtls__config_8h_1a6eb06bd9262371cafc5e51e40285d4bb" prot="public" static="no">
        <name>MBEDTLS_HAVE_ASM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The compiler has support for asm().</para>
<para>Requires support for asm() in compiler.</para>
<para>Used in: library/aesni.h library/aria.c library/bn_mul.h library/constant_time.c library/padlock.h</para>
<para>Required by: MBEDTLS_AESCE_C MBEDTLS_AESNI_C (on some platforms) MBEDTLS_PADLOCK_C</para>
<para>Comment to disable the use of assembly code. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="52" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a0d2a3e0e00f099a570fa56a0c4cf0d35" prot="public" static="no">
        <name>MBEDTLS_HAVE_TIME</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>System has time.h and time(). The time does not need to be correct, only time differences are used, by contrast with MBEDTLS_HAVE_TIME_DATE</para>
<para>Defining MBEDTLS_HAVE_TIME allows you to specify MBEDTLS_PLATFORM_TIME_ALT, MBEDTLS_PLATFORM_TIME_MACRO, MBEDTLS_PLATFORM_TIME_TYPE_MACRO and MBEDTLS_PLATFORM_STD_TIME.</para>
<para>Comment if your system does not support time functions.</para>
<para><simplesect kind="note"><para>If MBEDTLS_TIMING_C is set - to enable the semi-portable timing interface - timing.c will include time.h on suitable platforms regardless of the setting of MBEDTLS_HAVE_TIME, unless MBEDTLS_TIMING_ALT is used. See timing.c for more information. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="131" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a6309908be96df5277599f10d22bd91b7" prot="public" static="no">
        <name>MBEDTLS_HAVE_TIME_DATE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>System has time.h, time(), and an implementation for <ref refid="platform__util_8h_1a70cb8d98764bd7ccd8821dec9b44ad60" kindref="member">mbedtls_platform_gmtime_r()</ref> (see below). The time needs to be correct (not necessarily very accurate, but at least the date should be correct). This is used to verify the validity period of X.509 certificates.</para>
<para>Comment if your system does not have a correct clock.</para>
<para><simplesect kind="note"><para><ref refid="platform__util_8h_1a70cb8d98764bd7ccd8821dec9b44ad60" kindref="member">mbedtls_platform_gmtime_r()</ref> is an abstraction in <ref refid="platform__util_8h" kindref="compound">platform_util.h</ref> that behaves similarly to the gmtime_r() function from the C standard. Refer to the documentation for <ref refid="platform__util_8h_1a70cb8d98764bd7ccd8821dec9b44ad60" kindref="member">mbedtls_platform_gmtime_r()</ref> for more information.</para>
</simplesect>
<simplesect kind="note"><para>It is possible to configure an implementation for <ref refid="platform__util_8h_1a70cb8d98764bd7ccd8821dec9b44ad60" kindref="member">mbedtls_platform_gmtime_r()</ref> at compile-time by using the macro MBEDTLS_PLATFORM_GMTIME_R_ALT. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="152" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ae58dba1b4a4c30f8c4d2f0e6080351af" prot="public" static="no">
        <name>MBEDTLS_PLATFORM_MEMORY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the memory allocation layer.</para>
<para>By default Mbed TLS uses the system-provided calloc() and free(). This allows different allocators (self-implemented or provided) to be provided to the platform abstraction layer.</para>
<para>Enabling <ref refid="mbedtls__config_8h_1ae58dba1b4a4c30f8c4d2f0e6080351af" kindref="member">MBEDTLS_PLATFORM_MEMORY</ref> without the MBEDTLS_PLATFORM_{FREE,CALLOC}_MACROs will provide &quot;mbedtls_platform_set_calloc_free()&quot; allowing you to set an alternative calloc() and free() function pointer at runtime.</para>
<para>Enabling <ref refid="mbedtls__config_8h_1ae58dba1b4a4c30f8c4d2f0e6080351af" kindref="member">MBEDTLS_PLATFORM_MEMORY</ref> and specifying MBEDTLS_PLATFORM_{CALLOC,FREE}_MACROs will allow you to specify the alternate function at compile time.</para>
<para>An overview of how the value of mbedtls_calloc is determined:</para>
<para><itemizedlist>
<listitem><para>if !MBEDTLS_PLATFORM_MEMORY<itemizedlist>
<listitem><para>mbedtls_calloc = calloc</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>if MBEDTLS_PLATFORM_MEMORY<itemizedlist>
<listitem><para>if (MBEDTLS_PLATFORM_CALLOC_MACRO &amp;&amp; MBEDTLS_PLATFORM_FREE_MACRO):<itemizedlist>
<listitem><para>mbedtls_calloc = MBEDTLS_PLATFORM_CALLOC_MACRO</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>if !(MBEDTLS_PLATFORM_CALLOC_MACRO &amp;&amp; MBEDTLS_PLATFORM_FREE_MACRO):<itemizedlist>
<listitem><para>Dynamic setup via mbedtls_platform_set_calloc_free is now possible with a default value MBEDTLS_PLATFORM_STD_CALLOC.</para>
</listitem><listitem><para>How is MBEDTLS_PLATFORM_STD_CALLOC handled?</para>
</listitem><listitem><para>if MBEDTLS_PLATFORM_NO_STD_FUNCTIONS:<itemizedlist>
<listitem><para>MBEDTLS_PLATFORM_STD_CALLOC is not set to anything;</para>
</listitem><listitem><para>MBEDTLS_PLATFORM_STD_MEM_HDR can be included if present;</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>if !MBEDTLS_PLATFORM_NO_STD_FUNCTIONS:<itemizedlist>
<listitem><para>if MBEDTLS_PLATFORM_STD_CALLOC is present:<itemizedlist>
<listitem><para>User-defined MBEDTLS_PLATFORM_STD_CALLOC is respected;</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>if !MBEDTLS_PLATFORM_STD_CALLOC:<itemizedlist>
<listitem><para>MBEDTLS_PLATFORM_STD_CALLOC = calloc</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>At this point the presence of MBEDTLS_PLATFORM_STD_CALLOC is checked.</para>
</listitem><listitem><para>if !MBEDTLS_PLATFORM_STD_CALLOC<itemizedlist>
<listitem><para>MBEDTLS_PLATFORM_STD_CALLOC = uninitialized_calloc</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>mbedtls_calloc = MBEDTLS_PLATFORM_STD_CALLOC.</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para>Defining MBEDTLS_PLATFORM_CALLOC_MACRO and <ref refid="platform_8h_1a9e7b93e4a92624d51bc7cbdc04723a05" kindref="member">MBEDTLS_PLATFORM_STD_CALLOC</ref> at the same time is not possible. MBEDTLS_PLATFORM_CALLOC_MACRO and MBEDTLS_PLATFORM_FREE_MACRO must both be defined or undefined at the same time. <ref refid="platform_8h_1a9e7b93e4a92624d51bc7cbdc04723a05" kindref="member">MBEDTLS_PLATFORM_STD_CALLOC</ref> and <ref refid="platform_8h_1a2abc88498566e351dc97660f5aecf46c" kindref="member">MBEDTLS_PLATFORM_STD_FREE</ref> do not have to be defined at the same time, as, if they are used, dynamic setup of these functions is possible. See the tree above to see how are they handled in all cases. An uninitialized <ref refid="platform_8h_1a9e7b93e4a92624d51bc7cbdc04723a05" kindref="member">MBEDTLS_PLATFORM_STD_CALLOC</ref> always fails, returning a null pointer. An uninitialized <ref refid="platform_8h_1a2abc88498566e351dc97660f5aecf46c" kindref="member">MBEDTLS_PLATFORM_STD_FREE</ref> does not do anything.</para>
<para>Requires: MBEDTLS_PLATFORM_C</para>
<para>Enable this layer to allow use of alternative memory allocators. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="208" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ad35d2e4db2d939fde391d4f0ed9ead6c" prot="public" static="no">
        <name>MBEDTLS_PLATFORM_SETBUF_ALT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="252" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a2a65f769524672f1adaf40a037a35fa7" prot="public" static="no">
        <name>MBEDTLS_PLATFORM_EXIT_ALT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MBEDTLS_PLATFORM_XXX_ALT: Uncomment a macro to let Mbed TLS support the function in the platform abstraction layer.</para>
<para>Example: In case you uncomment MBEDTLS_PLATFORM_PRINTF_ALT, Mbed TLS will provide a function &quot;mbedtls_platform_set_printf()&quot; that allows you to set an alternative printf function pointer.</para>
<para>All these define require MBEDTLS_PLATFORM_C to be defined!</para>
<para><simplesect kind="note"><para>MBEDTLS_PLATFORM_SNPRINTF_ALT is required on Windows; it will be enabled automatically by <ref refid="check__config_8h" kindref="compound">check_config.h</ref></para>
</simplesect>
<simplesect kind="warning"><para>MBEDTLS_PLATFORM_XXX_ALT cannot be defined at the same time as MBEDTLS_PLATFORM_XXX_MACRO!</para>
</simplesect>
Requires: MBEDTLS_PLATFORM_TIME_ALT requires MBEDTLS_HAVE_TIME</para>
<para>Uncomment a macro to enable alternate implementation of specific base platform function </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="253" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a6df1ea4414dedc34a5ce96b9d559c571" prot="public" static="no">
        <name>MBEDTLS_PLATFORM_TIME_ALT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="254" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ad3290b9fc6639dc09d441dd71fd45f96" prot="public" static="no">
        <name>MBEDTLS_PLATFORM_FPRINTF_ALT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="255" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ad8c34317956c63e2216be18a3591e955" prot="public" static="no">
        <name>MBEDTLS_PLATFORM_PRINTF_ALT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="256" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1aa17da3c87f84b41b6ac802b6cef4aeb5" prot="public" static="no">
        <name>MBEDTLS_PLATFORM_SNPRINTF_ALT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="257" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a48877504d5a51d67d92e3ad862d7d5c0" prot="public" static="no">
        <name>MBEDTLS_PLATFORM_VSNPRINTF_ALT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="258" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a02ef63e60ce6880cda2e9393bf9d5f4f" prot="public" static="no">
        <name>MBEDTLS_PLATFORM_NV_SEED_ALT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="259" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>SECTION: Mbed TLS feature support</header>
      <description><para>This section sets support for features that are or are not needed within the modules that are enabled. </para>
</description>
      <memberdef kind="define" id="mbedtls__config_8h_1aa0aaa3f0466b5ae15ff9bf176f632a3d" prot="public" static="no">
        <name>MBEDTLS_AES_ROM_TABLES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use precomputed AES tables stored in ROM.</para>
<para>Uncomment this macro to use precomputed AES tables stored in ROM. Comment this macro to generate AES tables in RAM at runtime.</para>
<para>Tradeoff: Using precomputed ROM tables reduces RAM usage by ~8kb (or ~2kb if <computeroutput>MBEDTLS_AES_FEWER_TABLES</computeroutput> is used) and reduces the initialization time before the first AES operation can be performed. It comes at the cost of additional ~8kb ROM use (resp. ~2kb if <computeroutput>MBEDTLS_AES_FEWER_TABLES</computeroutput> below is used), and potentially degraded performance if ROM access is slower than RAM access.</para>
<para>This option is independent of <computeroutput>MBEDTLS_AES_FEWER_TABLES</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="562" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a8099f25dc31d0f01f82482ede7906a94" prot="public" static="no">
        <name>MBEDTLS_AES_FEWER_TABLES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use less ROM/RAM for AES tables.</para>
<para>Uncommenting this macro omits 75% of the AES tables from ROM / RAM (depending on the value of <computeroutput>MBEDTLS_AES_ROM_TABLES</computeroutput>) by computing their values on the fly during operations (the tables are entry-wise rotations of one another).</para>
<para>Tradeoff: Uncommenting this reduces the RAM / ROM footprint by ~6kb but at the cost of more arithmetic operations during runtime. Specifically, one has to compare 4 accesses within different tables to 4 accesses with additional arithmetic operations within the same table. The performance gain/loss depends on the system and memory details.</para>
<para>This option is independent of <computeroutput>MBEDTLS_AES_ROM_TABLES</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="583" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="583" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a20e18a582cad78b9b45868de1edbd513" prot="public" static="no">
        <name>MBEDTLS_CAMELLIA_SMALL_MEMORY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use less ROM for the Camellia implementation (saves about 768 bytes).</para>
<para>Uncomment this macro to use less memory for Camellia. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="623" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a9b119eb50a9fca70aef16b75792c9fd1" prot="public" static="no">
        <name>MBEDTLS_CHECK_RETURN_WARNING</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If this macro is defined, emit a compile-time warning if application code calls a function without checking its return value, but the return value should generally be checked in portable applications.</para>
<para>This is only supported on platforms where <ref refid="platform__util_8h_1a2d0f01774eec8835fa77c4354ece05d8" kindref="member">MBEDTLS_CHECK_RETURN</ref> is implemented. Otherwise this option has no effect.</para>
<para>Uncomment to get warnings on using fallible functions without checking their return value.</para>
<para><simplesect kind="note"><para>This feature is a work in progress. Warnings will be added to more functions in the future.</para>
</simplesect>
<simplesect kind="note"><para>A few functions are considered critical, and ignoring the return value of these functions will trigger a warning even if this macro is not defined. To completely disable return value check warnings, define <ref refid="platform__util_8h_1a2d0f01774eec8835fa77c4354ece05d8" kindref="member">MBEDTLS_CHECK_RETURN</ref> with an empty expansion. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="646" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ae0290beb1dc98ac21d930144d34ae2d0" prot="public" static="no">
        <name>MBEDTLS_CIPHER_MODE_CBC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable Cipher Block Chaining mode (CBC) for symmetric ciphers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="653" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a0bd3991e40ebd9db3b29ba327f4e6d54" prot="public" static="no">
        <name>MBEDTLS_CIPHER_MODE_CFB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable Cipher Feedback mode (CFB) for symmetric ciphers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="660" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="660" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a5bc21fd94f62fae79688ad096ef5c2d8" prot="public" static="no">
        <name>MBEDTLS_CIPHER_MODE_CTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable Counter Block Cipher mode (CTR) for symmetric ciphers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="667" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="667" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a5c8409c489e8b6038c4fe2c45fb14e72" prot="public" static="no">
        <name>MBEDTLS_CIPHER_MODE_OFB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable Output Feedback mode (OFB) for symmetric ciphers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="674" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="674" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1aa5d15e01fd572d3e47fa051a6ebdeee3" prot="public" static="no">
        <name>MBEDTLS_CIPHER_MODE_XTS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable Xor-encrypt-xor with ciphertext stealing mode (XTS) for AES. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="681" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a83cc0903ed6bb07061aa0f5c0e5b0382" prot="public" static="no">
        <name>MBEDTLS_CIPHER_NULL_CIPHER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable NULL cipher. Warning: Only do so when you know what you are doing. This allows for encryption or channels without any security!</para>
<para>To enable the following ciphersuites: MBEDTLS_TLS_ECDH_ECDSA_WITH_NULL_SHA MBEDTLS_TLS_ECDH_RSA_WITH_NULL_SHA MBEDTLS_TLS_ECDHE_ECDSA_WITH_NULL_SHA MBEDTLS_TLS_ECDHE_RSA_WITH_NULL_SHA MBEDTLS_TLS_ECDHE_PSK_WITH_NULL_SHA384 MBEDTLS_TLS_ECDHE_PSK_WITH_NULL_SHA256 MBEDTLS_TLS_ECDHE_PSK_WITH_NULL_SHA MBEDTLS_TLS_DHE_PSK_WITH_NULL_SHA384 MBEDTLS_TLS_DHE_PSK_WITH_NULL_SHA256 MBEDTLS_TLS_DHE_PSK_WITH_NULL_SHA MBEDTLS_TLS_RSA_WITH_NULL_SHA256 MBEDTLS_TLS_RSA_WITH_NULL_SHA MBEDTLS_TLS_RSA_WITH_NULL_MD5 MBEDTLS_TLS_RSA_PSK_WITH_NULL_SHA384 MBEDTLS_TLS_RSA_PSK_WITH_NULL_SHA256 MBEDTLS_TLS_RSA_PSK_WITH_NULL_SHA MBEDTLS_TLS_PSK_WITH_NULL_SHA384 MBEDTLS_TLS_PSK_WITH_NULL_SHA256 MBEDTLS_TLS_PSK_WITH_NULL_SHA</para>
<para>Uncomment this macro to enable the NULL cipher and ciphersuites </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="713" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="713" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a0f53acf64658fe68c1e532a9434c31f0" prot="public" static="no">
        <name>MBEDTLS_CIPHER_PADDING_PKCS7</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MBEDTLS_CIPHER_PADDING_XXX: Uncomment or comment macros to add support for specific padding modes in the cipher layer with cipher modes that support padding (e.g. CBC)</para>
<para>If you disable all padding modes, only full blocks can be used with CBC.</para>
<para>Enable padding modes in the cipher layer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="726" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ae97ea80bdee414503dbc0f9927aa4f78" prot="public" static="no">
        <name>MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="727" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="727" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1abf958fb428f93be154b13d074821a850" prot="public" static="no">
        <name>MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="728" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="728" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a80b6971fec5fcd09de71ada9ab6f53c2" prot="public" static="no">
        <name>MBEDTLS_CIPHER_PADDING_ZEROS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="729" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="729" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a8c45e2be551b48e4feb1453fff99b8d5" prot="public" static="no">
        <name>MBEDTLS_ECP_DP_SECP192R1_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the verified implementations of ECDH primitives from Project Everest (currently only Curve25519). This feature changes the layout of ECDH contexts and therefore is a compatibility break for applications that access fields of a <ref refid="structmbedtls__ecdh__context" kindref="compound">mbedtls_ecdh_context</ref> structure directly. See also MBEDTLS_ECDH_LEGACY_CONTEXT in <ref refid="ecdh_8h" kindref="compound">include/mbedtls/ecdh.h</ref>.</para>
<para>The Everest code is provided under the Apache 2.0 license only; therefore enabling this option is not compatible with taking the library under the GPL v2.0-or-later license.</para>
<para>MBEDTLS_ECP_XXXX_ENABLED: Enables specific curves within the Elliptic Curve module. By default all supported curves are enabled.</para>
<para>Comment macros to disable the curve and functions for it </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="760" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="760" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a53ca938afec54658ef4b643c60ed617c" prot="public" static="no">
        <name>MBEDTLS_ECP_DP_SECP224R1_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="761" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="761" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1aa7661e25bab8f0e87060ee05f1216fe4" prot="public" static="no">
        <name>MBEDTLS_ECP_DP_SECP256R1_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="762" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="762" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a8d7d810065d58b237787c6749b7ef232" prot="public" static="no">
        <name>MBEDTLS_ECP_DP_SECP384R1_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="763" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="763" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a0afb3cbe18e3ad5abde001c32f319d12" prot="public" static="no">
        <name>MBEDTLS_ECP_DP_SECP521R1_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="764" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="764" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a3a85a85a23a2b5935e97d400d224eac5" prot="public" static="no">
        <name>MBEDTLS_ECP_DP_SECP192K1_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="765" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="765" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a056eb2e0e44147c2df7ec5a4c0c8b152" prot="public" static="no">
        <name>MBEDTLS_ECP_DP_SECP224K1_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="766" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a5234a2a9d84b7b6c8de05f1494ead4d7" prot="public" static="no">
        <name>MBEDTLS_ECP_DP_SECP256K1_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="767" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1abc22a5b0870dd8ff1b38cdce1423b0ff" prot="public" static="no">
        <name>MBEDTLS_ECP_DP_BP256R1_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="768" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="768" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a980c4064e72ef188840d9b0a68d2e85e" prot="public" static="no">
        <name>MBEDTLS_ECP_DP_BP384R1_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="769" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1afd338008d2ae25ba0dba0c07ba1e2482" prot="public" static="no">
        <name>MBEDTLS_ECP_DP_BP512R1_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="770" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="770" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a7bb6872451a7b080abda9d489bd56826" prot="public" static="no">
        <name>MBEDTLS_ECP_DP_CURVE25519_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="772" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="772" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a01106318909806638cccf73891b9a539" prot="public" static="no">
        <name>MBEDTLS_ECP_DP_CURVE448_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="773" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="773" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a6c2a0ec24ee2e843114131f1087653cf" prot="public" static="no">
        <name>MBEDTLS_ECP_NIST_OPTIM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable specific &apos;modulo p&apos; routines for each NIST prime. Depending on the prime and architecture, makes operations 4 to 8 times faster on the corresponding curve.</para>
<para>Comment this macro to disable NIST curves optimisation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="784" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="784" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a6d48573b52280bc7f0133f85ee29bfd7" prot="public" static="no">
        <name>MBEDTLS_ECP_RESTARTABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable &quot;non-blocking&quot; ECC operations that can return early and be resumed.</para>
<para>This allows various functions to pause by returning <ref refid="ecp_8h_1a6d549348fe93c843c19bfcd102b6e94f" kindref="member">MBEDTLS_ERR_ECP_IN_PROGRESS</ref> (or, for functions in the SSL module, <ref refid="ssl_8h_1a6516299349393931e8d17957f9b80eca" kindref="member">MBEDTLS_ERR_SSL_CRYPTO_IN_PROGRESS</ref>) and then be called later again in order to further progress and eventually complete their operation. This is controlled through <ref refid="ecp_8h_1a4116275f34714de2218e8969611b6f42" kindref="member">mbedtls_ecp_set_max_ops()</ref> which limits the maximum number of ECC operations a function may perform before pausing; see <ref refid="ecp_8h_1a4116275f34714de2218e8969611b6f42" kindref="member">mbedtls_ecp_set_max_ops()</ref> for more information.</para>
<para>This is useful in non-threaded environments if you want to avoid blocking for too long on ECC (and, hence, X.509 or SSL/TLS) operations.</para>
<para>This option:<itemizedlist>
<listitem><para>Adds xxx_restartable() variants of existing operations in the following modules, with corresponding restart context types:<itemizedlist>
<listitem><para>ECP (for Short Weierstrass curves only): scalar multiplication (mul), linear combination (muladd);</para>
</listitem><listitem><para>ECDSA: signature generation &amp; verification;</para>
</listitem><listitem><para>PK: signature generation &amp; verification;</para>
</listitem><listitem><para>X509: certificate chain verification.</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>Adds <ref refid="ecdh_8h_1a7acea404701bec3bbbf95c256df9a19f" kindref="member">mbedtls_ecdh_enable_restart()</ref> in the ECDH module.</para>
</listitem><listitem><para>Changes the behaviour of TLS 1.2 clients (not servers) when using the ECDHE-ECDSA key exchange (not other key exchanges) to make all ECC computations restartable:<itemizedlist>
<listitem><para>ECDH operations from the key exchange, only for Short Weierstrass curves, only when MBEDTLS_USE_PSA_CRYPTO is not enabled.</para>
</listitem><listitem><para>verification of the server&apos;s key exchange signature;</para>
</listitem><listitem><para>verification of the server&apos;s certificate chain;</para>
</listitem><listitem><para>generation of the client&apos;s signature if client authentication is used, with an ECC key/certificate.</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>In the cases above, the usual SSL/TLS functions, such as <ref refid="ssl_8h_1a4a37e497cd08c896870a42b1b618186e" kindref="member">mbedtls_ssl_handshake()</ref>, can now return MBEDTLS_ERR_SSL_CRYPTO_IN_PROGRESS.</para>
</simplesect>
<simplesect kind="note"><para>When this option and MBEDTLS_USE_PSA_CRYPTO are both enabled, restartable operations in PK, X.509 and TLS (see above) are not using PSA. On the other hand, ECDH computations in TLS are using PSA, and are not restartable. These are temporary limitations that should be lifted in the future.</para>
</simplesect>
<simplesect kind="note"><para>This option only works with the default software implementation of elliptic curve functionality. It is incompatible with MBEDTLS_ECP_ALT, MBEDTLS_ECDH_XXX_ALT, MBEDTLS_ECDSA_XXX_ALT.</para>
</simplesect>
Requires: MBEDTLS_ECP_C</para>
<para>Uncomment this macro to enable restartable ECC computations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="839" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="839" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1adba50fdb786e1708b3360bd04bb77bd1" prot="public" static="no">
        <name>MBEDTLS_ECDSA_DETERMINISTIC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Uncomment to enable using new bignum code in the ECC modules.</para>
<para><simplesect kind="warning"><para>This is currently experimental, incomplete and therefore should not be used in production.</para>
</simplesect>
Enable deterministic ECDSA (RFC 6979). Standard ECDSA is &quot;fragile&quot; in the sense that lack of entropy when signing may result in a compromise of the long-term signing key. This is avoided by the deterministic variant.</para>
<para>Requires: MBEDTLS_HMAC_DRBG_C, MBEDTLS_ECDSA_C</para>
<para>Comment this macro to disable deterministic ECDSA. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="861" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="861" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ad40b43f5e34794970572576ef3984bae" prot="public" static="no">
        <name>MBEDTLS_KEY_EXCHANGE_PSK_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the PSK based ciphersuite modes in SSL / TLS.</para>
<para>This enables the following ciphersuites (if other requisites are enabled as well): MBEDTLS_TLS_PSK_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_PSK_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_PSK_WITH_AES_256_CBC_SHA MBEDTLS_TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_PSK_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_PSK_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_PSK_WITH_AES_128_CBC_SHA MBEDTLS_TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="881" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="881" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a749b1e8d58e6787c8914106ef02b43ff" prot="public" static="no">
        <name>MBEDTLS_KEY_EXCHANGE_DHE_PSK_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the DHE-PSK based ciphersuite modes in SSL / TLS.</para>
<para>Requires: MBEDTLS_DHM_C</para>
<para>This enables the following ciphersuites (if other requisites are enabled as well): MBEDTLS_TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CBC_SHA MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CBC_SHA MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256</para>
<para><simplesect kind="warning"><para>Using DHE constitutes a security risk as it is not possible to validate custom DH parameters. If possible, it is recommended users should consider preferring other methods of key exchange. See <ref refid="dhm_8h" kindref="compound">dhm.h</ref> for more details. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="910" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="910" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1af3f5e018957fb1375a4d305efe8fd67a" prot="public" static="no">
        <name>MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the ECDHE-PSK based ciphersuite modes in SSL / TLS.</para>
<para>Requires: MBEDTLS_ECDH_C or (MBEDTLS_USE_PSA_CRYPTO and PSA_WANT_ALG_ECDH)</para>
<para>This enables the following ciphersuites (if other requisites are enabled as well): MBEDTLS_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA MBEDTLS_TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA MBEDTLS_TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="928" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="928" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a44368acdc70ca47e98700c023ac88840" prot="public" static="no">
        <name>MBEDTLS_KEY_EXCHANGE_RSA_PSK_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the RSA-PSK based ciphersuite modes in SSL / TLS.</para>
<para>Requires: MBEDTLS_RSA_C, MBEDTLS_PKCS1_V15, MBEDTLS_X509_CRT_PARSE_C</para>
<para>This enables the following ciphersuites (if other requisites are enabled as well): MBEDTLS_TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_RSA_PSK_WITH_AES_256_CBC_SHA MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_RSA_PSK_WITH_AES_128_CBC_SHA MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="951" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="951" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a4e31bcb46f4cd29deced2ef3ef6a8925" prot="public" static="no">
        <name>MBEDTLS_KEY_EXCHANGE_RSA_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the RSA-only based ciphersuite modes in SSL / TLS.</para>
<para>Requires: MBEDTLS_RSA_C, MBEDTLS_PKCS1_V15, MBEDTLS_X509_CRT_PARSE_C</para>
<para>This enables the following ciphersuites (if other requisites are enabled as well): MBEDTLS_TLS_RSA_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_RSA_WITH_AES_256_CBC_SHA256 MBEDTLS_TLS_RSA_WITH_AES_256_CBC_SHA MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA MBEDTLS_TLS_RSA_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_RSA_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_RSA_WITH_AES_128_CBC_SHA MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="976" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="976" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a0aaa13268bc8e4e74076e1dc4828f79d" prot="public" static="no">
        <name>MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the DHE-RSA based ciphersuite modes in SSL / TLS.</para>
<para>Requires: MBEDTLS_DHM_C, MBEDTLS_RSA_C, MBEDTLS_PKCS1_V15, MBEDTLS_X509_CRT_PARSE_C</para>
<para>This enables the following ciphersuites (if other requisites are enabled as well): MBEDTLS_TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CBC_SHA MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA MBEDTLS_TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CBC_SHA MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA</para>
<para><simplesect kind="warning"><para>Using DHE constitutes a security risk as it is not possible to validate custom DH parameters. If possible, it is recommended users should consider preferring other methods of key exchange. See <ref refid="dhm_8h" kindref="compound">dhm.h</ref> for more details. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1008" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1008" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a323959c9c447de38e9db7cd7ed733e75" prot="public" static="no">
        <name>MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the ECDHE-RSA based ciphersuite modes in SSL / TLS.</para>
<para>Requires: MBEDTLS_ECDH_C or (MBEDTLS_USE_PSA_CRYPTO and PSA_WANT_ALG_ECDH) MBEDTLS_RSA_C MBEDTLS_PKCS1_V15 MBEDTLS_X509_CRT_PARSE_C</para>
<para>This enables the following ciphersuites (if other requisites are enabled as well): MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1033" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1033" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a17ad52b9c597d50d6bab1557e96dd2e2" prot="public" static="no">
        <name>MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the ECDHE-ECDSA based ciphersuite modes in SSL / TLS.</para>
<para>Requires: MBEDTLS_ECDH_C or (MBEDTLS_USE_PSA_CRYPTO and PSA_WANT_ALG_ECDH) MBEDTLS_ECDSA_C or (MBEDTLS_USE_PSA_CRYPTO and PSA_WANT_ALG_ECDSA) MBEDTLS_X509_CRT_PARSE_C</para>
<para>This enables the following ciphersuites (if other requisites are enabled as well): MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1057" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1057" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a4c1339e693a493a5b28957ee84a78a39" prot="public" static="no">
        <name>MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the ECDH-ECDSA based ciphersuite modes in SSL / TLS.</para>
<para>Requires: MBEDTLS_ECDH_C or (MBEDTLS_USE_PSA_CRYPTO and PSA_WANT_ALG_ECDH) MBEDTLS_ECDSA_C or (MBEDTLS_USE_PSA_CRYPTO and PSA_WANT_ALG_ECDSA) MBEDTLS_X509_CRT_PARSE_C</para>
<para>This enables the following ciphersuites (if other requisites are enabled as well): MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1081" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1aa21769532291089a98bb9051516709c6" prot="public" static="no">
        <name>MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the ECDH-RSA based ciphersuite modes in SSL / TLS.</para>
<para>Requires: MBEDTLS_ECDH_C or (MBEDTLS_USE_PSA_CRYPTO and PSA_WANT_ALG_ECDH) MBEDTLS_RSA_C MBEDTLS_X509_CRT_PARSE_C</para>
<para>This enables the following ciphersuites (if other requisites are enabled as well): MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1105" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ac9580ac865324c142232c3e0bc654e14" prot="public" static="no">
        <name>MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the ECJPAKE based ciphersuite modes in SSL / TLS.</para>
<para><simplesect kind="warning"><para>This is currently experimental. EC J-PAKE support is based on the Thread v1.0.0 specification; incompatible changes to the specification might still happen. For this reason, this is disabled by default.</para>
</simplesect>
Requires: MBEDTLS_ECJPAKE_C or (MBEDTLS_USE_PSA_CRYPTO and PSA_WANT_ALG_JPAKE) SHA-256 (via MBEDTLS_SHA256_C or a PSA driver) MBEDTLS_ECP_DP_SECP256R1_ENABLED</para>
<para><simplesect kind="warning"><para>If SHA-256 is provided only by a PSA driver, you must call <ref refid="group__initialization_1ga2de150803fc2f7dc6101d5af7e921dd9" kindref="member">psa_crypto_init()</ref> before the first hanshake (even if MBEDTLS_USE_PSA_CRYPTO is disabled).</para>
</simplesect>
This enables the following ciphersuites (if other requisites are enabled as well): MBEDTLS_TLS_ECJPAKE_WITH_AES_128_CCM_8 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1128" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a6d2d68f07e8d1b00d1e6f47d162cedc9" prot="public" static="no">
        <name>MBEDTLS_PK_PARSE_EC_EXTENDED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enhance support for reading EC keys using variants of SEC1 not allowed by RFC 5915 and RFC 5480.</para>
<para>Currently this means parsing the SpecifiedECDomain choice of EC parameters (only known groups are supported, not arbitrary domains, to avoid validation issues).</para>
<para>Disable if you only need to support RFC 5915 + 5480 key formats. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1142" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a559d8c5a37901284b4fd642ae7c46006" prot="public" static="no">
        <name>MBEDTLS_PK_PARSE_EC_COMPRESSED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the support for parsing public keys of type Short Weierstrass (MBEDTLS_ECP_DP_SECP_XXX and MBEDTLS_ECP_DP_BP_XXX) which are using the compressed point format. This parsing is done through ECP module&apos;s functions.</para>
<para><simplesect kind="note"><para>As explained in the description of MBEDTLS_ECP_PF_COMPRESSED (in <ref refid="ecp_8h" kindref="compound">ecp.h</ref>) the only unsupported curves are MBEDTLS_ECP_DP_SECP224R1 and MBEDTLS_ECP_DP_SECP224K1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1155" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a6382cfe1b528f3382248b1d746418865" prot="public" static="no">
        <name>MBEDTLS_ERROR_STRERROR_DUMMY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable a dummy error function to make use of <ref refid="error_8h_1a8c41c149b77a4807115b19c2af858558" kindref="member">mbedtls_strerror()</ref> in third party libraries easier when MBEDTLS_ERROR_C is disabled (no effect when MBEDTLS_ERROR_C is enabled).</para>
<para>You can safely disable this if MBEDTLS_ERROR_C is enabled, or if you&apos;re not using <ref refid="error_8h_1a8c41c149b77a4807115b19c2af858558" kindref="member">mbedtls_strerror()</ref> or error_strerror() in your application.</para>
<para>Disable if you run into name conflicts and want to really remove the <ref refid="error_8h_1a8c41c149b77a4807115b19c2af858558" kindref="member">mbedtls_strerror()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1170" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a6bad7f4050b2dd6ea1d2b498f5b548d9" prot="public" static="no">
        <name>MBEDTLS_GENPRIME</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the prime-number generation code.</para>
<para>Requires: MBEDTLS_BIGNUM_C </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1179" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a29dbd0110b545e25201e3babd907738d" prot="public" static="no">
        <name>MBEDTLS_FS_IO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable functions that use the filesystem. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1186" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1aa0d53f9505ee880893fdfee416931b38" prot="public" static="no">
        <name>MBEDTLS_ENTROPY_NV_SEED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the non-volatile (NV) seed file-based entropy source. (Also enables the NV seed read/write functions in the platform layer)</para>
<para>This is crucial (if not required) on systems that do not have a cryptographic entropy source (in hardware or kernel) available.</para>
<para>Requires: MBEDTLS_ENTROPY_C, MBEDTLS_PLATFORM_C</para>
<para><simplesect kind="note"><para>The read/write functions that are used by the entropy source are determined in the platform layer, and can be modified at runtime and/or compile-time depending on the flags (MBEDTLS_PLATFORM_NV_SEED_*) used.</para>
</simplesect>
<simplesect kind="note"><para>If you use the default implementation functions that read a seedfile with regular fopen(), please make sure you make a seedfile with the proper name (defined in MBEDTLS_PLATFORM_STD_NV_SEED_FILE) and at least MBEDTLS_ENTROPY_BLOCK_SIZE bytes in size that can be read from and written to or you will get an entropy source error! The default implementation will only use the first MBEDTLS_ENTROPY_BLOCK_SIZE bytes from the file.</para>
</simplesect>
<simplesect kind="note"><para>The entropy collector will write to the seed file before entropy is given to an external source, to update it. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1253" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a62e934fe1c7e54c9342fe5d84d3ea888" prot="public" static="no">
        <name>MBEDTLS_PK_RSA_ALT_SUPPORT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Support external private RSA keys (eg from a HSM) in the PK layer.</para>
<para>Comment this macro to disable support for external private RSA keys. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1299" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ab9ff33e1da5c1afaf8ce3fc47ab8d577" prot="public" static="no">
        <name>MBEDTLS_PKCS1_V15</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for PKCS#1 v1.5 encoding.</para>
<para>Requires: MBEDTLS_RSA_C</para>
<para>This enables support for PKCS#1 v1.5 operations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1310" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a45f7284cdb45e4505ff79bd40116c338" prot="public" static="no">
        <name>MBEDTLS_PKCS1_V21</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for PKCS#1 v2.1 encoding.</para>
<para>Requires: MBEDTLS_RSA_C</para>
<para><simplesect kind="warning"><para>If using a hash that is only provided by PSA drivers, you must call <ref refid="group__initialization_1ga2de150803fc2f7dc6101d5af7e921dd9" kindref="member">psa_crypto_init()</ref> before doing any PKCS#1 v2.1 operation.</para>
</simplesect>
This enables support for RSAES-OAEP and RSASSA-PSS operations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1324" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a1bd8bee51fb122e552a4cbc1bbdb0b96" prot="public" static="no">
        <name>MBEDTLS_PSA_CRYPTO_BUILTIN_KEYS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for platform built-in keys. If you enable this feature, you must implement the function <ref refid="group__psa__builtin__keys_1gaffcd70aaab258bd6a1721b031f9965c5" kindref="member">mbedtls_psa_platform_get_builtin_key()</ref>. See the documentation of that function for more information.</para>
<para>Built-in keys are typically derived from a hardware unique key or stored in a secure element.</para>
<para>Requires: MBEDTLS_PSA_CRYPTO_C.</para>
<para><simplesect kind="warning"><para>This interface is experimental and may change or be removed without notice. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1340" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ab935ee7c6dc4ea860d54b192cccbc00a" prot="public" static="no">
        <name>MBEDTLS_PSA_CRYPTO_CLIENT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for PSA crypto client.</para>
<para><simplesect kind="note"><para>This option allows to include the code necessary for a PSA crypto client when the PSA crypto implementation is not included in the library (MBEDTLS_PSA_CRYPTO_C disabled). The code included is the code to set and get PSA key attributes. The development of PSA drivers partially relying on the library to fulfill the hardware gaps is another possible usage of this option.</para>
</simplesect>
<simplesect kind="warning"><para>This interface is experimental and may change or be removed without notice. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1356" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ad70d6eb71def154fc4cefa0d0ec90d96" prot="public" static="no">
        <name>MBEDTLS_SELF_TEST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the checkup functions (*_self_test). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1487" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a37056e26ff582813ab505fa8e59287b6" prot="public" static="no">
        <name>MBEDTLS_SHA256_SMALLER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable an implementation of SHA-256 that has lower ROM footprint but also lower performance.</para>
<para>The default implementation is meant to be a reasonable compromise between performance and size. This version optimizes more aggressively for size at the expense of performance. Eg on Cortex-M4 it reduces the size of mbedtls_sha256_process() from ~2KB to ~0.5KB for a performance hit of about 30%.</para>
<para>Uncomment to enable the smaller implementation of SHA256. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1503" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ad1ff9b338931f938b066845c64eb5830" prot="public" static="no">
        <name>MBEDTLS_SHA512_SMALLER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable an implementation of SHA-512 that has lower ROM footprint but also lower performance.</para>
<para>Uncomment to enable the smaller implementation of SHA512. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1513" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a0c0ea1b637ed407466a3788ff622423b" prot="public" static="no">
        <name>MBEDTLS_SSL_ALL_ALERT_MESSAGES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable sending of alert messages in case of encountered errors as per RFC. If you choose not to send the alert messages, Mbed TLS can still communicate with other servers, only debugging of failures is harder.</para>
<para>The advantage of not sending alert messages, is that no information is given about reasons for failures thus preventing adversaries of gaining intel.</para>
<para>Enable sending of all alert messages </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1527" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1af5ed31b295ab56e45ceab4f17329c6ec" prot="public" static="no">
        <name>MBEDTLS_SSL_DTLS_CONNECTION_ID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for the DTLS Connection ID (CID) extension, which allows to identify DTLS connections across changes in the underlying transport. The CID functionality is described in RFC 9146.</para>
<para>Setting this option enables the SSL APIs <computeroutput><ref refid="ssl_8h_1afe94a33d384006339080fbd901cd806b" kindref="member">mbedtls_ssl_set_cid()</ref></computeroutput>, <ref refid="ssl_8h_1a30eabe9aa5dcdfb157a336a1cc6f7aaa" kindref="member">mbedtls_ssl_get_own_cid()</ref><computeroutput>,</computeroutput><ref refid="ssl_8h_1a7f19198119e077b70d014eac5252bf91" kindref="member">mbedtls_ssl_get_peer_cid()</ref><computeroutput>and </computeroutput><ref refid="ssl_8h_1a8b3cdd39e60718056f4db139ac85c365" kindref="member">mbedtls_ssl_conf_cid()</ref>`. See the corresponding documentation for more information.</para>
<para>The maximum lengths of outgoing and incoming CIDs can be configured through the options<itemizedlist>
<listitem><para>MBEDTLS_SSL_CID_OUT_LEN_MAX</para>
</listitem><listitem><para>MBEDTLS_SSL_CID_IN_LEN_MAX.</para>
</listitem></itemizedlist>
</para>
<para>Requires: MBEDTLS_SSL_PROTO_DTLS</para>
<para>Uncomment to enable the Connection ID extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1551" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1af5421935540ecb6481a392528e20e9a4" prot="public" static="no">
        <name>MBEDTLS_SSL_DTLS_CONNECTION_ID_COMPAT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines whether RFC 9146 (default) or the legacy version (version draft-ietf-tls-dtls-connection-id-05, <ulink url="https://tools.ietf.org/html/draft-ietf-tls-dtls-connection-id-05">https://tools.ietf.org/html/draft-ietf-tls-dtls-connection-id-05</ulink>) is used.</para>
<para>Set the value to 0 for the standard version, and 1 for the legacy draft version.</para>
<para><xrefsect id="deprecated_1_deprecated000005"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Support for the legacy version of the DTLS Connection ID feature is deprecated. Please switch to the standardized version defined in RFC 9146 enabled by utilizing MBEDTLS_SSL_DTLS_CONNECTION_ID without use of MBEDTLS_SSL_DTLS_CONNECTION_ID_COMPAT.</para>
</xrefdescription></xrefsect></para>
<para>Requires: MBEDTLS_SSL_DTLS_CONNECTION_ID </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1574" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a57548c9328e88a99a521f8b756ac64ed" prot="public" static="no">
        <name>MBEDTLS_SSL_ASYNC_PRIVATE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable asynchronous external private key operations in SSL. This allows you to configure an SSL connection to call an external cryptographic module to perform private key operations instead of performing the operation inside the library.</para>
<para>Requires: MBEDTLS_X509_CRT_PARSE_C </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1586" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a224be1876a20bb15c554a06c174101df" prot="public" static="no">
        <name>MBEDTLS_SSL_CONTEXT_SERIALIZATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable serialization of the TLS context structures, through use of the functions <ref refid="ssl_8h_1abd110552b6306e31617e85d4dffe9e13" kindref="member">mbedtls_ssl_context_save()</ref> and <ref refid="ssl_8h_1a8351242a219e04475cf0f0f871954f12" kindref="member">mbedtls_ssl_context_load()</ref>.</para>
<para>This pair of functions allows one side of a connection to serialize the context associated with the connection, then free or re-use that context while the serialized state is persisted elsewhere, and finally deserialize that state to a live context for resuming read/write operations on the connection. From a protocol perspective, the state of the connection is unaffected, in particular this is entirely transparent to the peer.</para>
<para>Note: this is distinct from TLS session resumption, which is part of the protocol and fully visible by the peer. TLS session resumption enables establishing new connections associated to a saved session with shorter, lighter handshakes, while context serialization is a local optimization in handling a single, potentially long-lived connection.</para>
<para>Enabling these APIs makes some SSL structures larger, as 64 extra bytes are saved after the handshake to allow for more efficient serialization, so if you don&apos;t need this feature you&apos;ll save RAM by disabling it.</para>
<para>Requires: MBEDTLS_GCM_C or MBEDTLS_CCM_C or MBEDTLS_CHACHAPOLY_C</para>
<para>Comment to disable the context serialization APIs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1615" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a7f7e00e92f146c9248dfcb2f4c9debfc" prot="public" static="no">
        <name>MBEDTLS_SSL_DEBUG_ALL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the debug messages in SSL module for all issues. Debug messages have been disabled in some places to prevent timing attacks due to (unbalanced) debugging function calls.</para>
<para>If you need all error reporting you should enable this during debugging, but remove this for production servers that should log as well.</para>
<para>Uncomment this macro to report all debug messages on errors introducing a timing side-channel. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1631" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1631" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a80e8e0fb5fea758fa451d1268201aded" prot="public" static="no">
        <name>MBEDTLS_SSL_ENCRYPT_THEN_MAC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for Encrypt-then-MAC, RFC 7366.</para>
<para>This allows peers that both support it to use a more robust protection for ciphersuites using CBC, providing deep resistance against timing attacks on the padding or underlying cipher.</para>
<para>This only affects CBC ciphersuites, and is useless if none is defined.</para>
<para>Requires: MBEDTLS_SSL_PROTO_TLS1_2</para>
<para>Comment this macro to disable support for Encrypt-then-MAC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1647" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1647" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a1fbd7ec4862c3563163614e0900e7f31" prot="public" static="no">
        <name>MBEDTLS_SSL_EXTENDED_MASTER_SECRET</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for RFC 7627: Session Hash and Extended Master Secret Extension.</para>
<para>This was introduced as &quot;the proper fix&quot; to the Triple Handshake family of attacks, but it is recommended to always use it (even if you disable renegotiation), since it actually fixes a more fundamental issue in the original SSL/TLS design, and has implications beyond Triple Handshake.</para>
<para>Requires: MBEDTLS_SSL_PROTO_TLS1_2</para>
<para>Comment this macro to disable support for Extended Master Secret. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1663" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1663" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ae46bbbec93735b6d601991c5ff22b767" prot="public" static="no">
        <name>MBEDTLS_SSL_KEEP_PEER_CERTIFICATE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This option controls the availability of the API <ref refid="ssl_8h_1aa7ab0ac8d8341063a0f815ee99337831" kindref="member">mbedtls_ssl_get_peer_cert()</ref> giving access to the peer&apos;s certificate after completion of the handshake.</para>
<para>Unless you need mbedtls_ssl_peer_cert() in your application, it is recommended to disable this option for reduced RAM usage.</para>
<para><simplesect kind="note"><para>If this option is disabled, <ref refid="ssl_8h_1aa7ab0ac8d8341063a0f815ee99337831" kindref="member">mbedtls_ssl_get_peer_cert()</ref> is still defined, but always returns <computeroutput>NULL</computeroutput>.</para>
</simplesect>
<simplesect kind="note"><para>This option has no influence on the protection against the triple handshake attack. Even if it is disabled, Mbed TLS will still ensure that certificates do not change during renegotiation, for example by keeping a hash of the peer&apos;s certificate.</para>
</simplesect>
<simplesect kind="note"><para>This option is required if MBEDTLS_SSL_PROTO_TLS1_3 is set.</para>
</simplesect>
Comment this macro to disable storing the peer&apos;s certificate after the handshake. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1687" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1687" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a313f12fd8fd65b5c831a912808133140" prot="public" static="no">
        <name>MBEDTLS_SSL_RENEGOTIATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for TLS renegotiation.</para>
<para>The two main uses of renegotiation are (1) refresh keys on long-lived connections and (2) client authentication after the initial handshake. If you don&apos;t need renegotiation, it&apos;s probably better to disable it, since it has been associated with security issues in the past and is easy to misuse/misunderstand.</para>
<para>Requires: MBEDTLS_SSL_PROTO_TLS1_2</para>
<para>Comment this to disable support for renegotiation.</para>
<para><simplesect kind="note"><para>Even if this option is disabled, both client and server are aware of the Renegotiation Indication Extension (RFC 5746) used to prevent the SSL renegotiation attack (see RFC 5746 Sect. 1). (See <computeroutput>mbedtls_ssl_conf_legacy_renegotiation</computeroutput> for the configuration of this extension). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1711" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1711" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a82777395be62d667a657dc1372d6b975" prot="public" static="no">
        <name>MBEDTLS_SSL_MAX_FRAGMENT_LENGTH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for RFC 6066 max_fragment_length extension in SSL.</para>
<para>Comment this macro to disable support for the max_fragment_length extension </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1720" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a8a7aca10569198cf8e8dbff1c40677c6" prot="public" static="no">
        <name>MBEDTLS_SSL_PROTO_TLS1_2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for TLS 1.2 (and DTLS 1.2 if DTLS is enabled).</para>
<para>Requires: Without MBEDTLS_USE_PSA_CRYPTO: MBEDTLS_MD_C and (MBEDTLS_SHA256_C or MBEDTLS_SHA384_C or SHA-256 or SHA-512 provided by a PSA driver) With MBEDTLS_USE_PSA_CRYPTO: PSA_WANT_ALG_SHA_256 or PSA_WANT_ALG_SHA_384</para>
<para><simplesect kind="warning"><para>If building with MBEDTLS_USE_PSA_CRYPTO, or if the hash(es) used are only provided by PSA drivers, you must call <ref refid="group__initialization_1ga2de150803fc2f7dc6101d5af7e921dd9" kindref="member">psa_crypto_init()</ref> before doing any TLS operations.</para>
</simplesect>
Comment this macro to disable support for TLS 1.2 / DTLS 1.2 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1753" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1753" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a506f9100cba4cfd5d8caa306fbd6d78b" prot="public" static="no">
        <name>MBEDTLS_SSL_PROTO_TLS1_3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for TLS 1.3.</para>
<para><simplesect kind="note"><para>See docs/architecture/tls13-support.md for a description of the TLS 1.3 support that this option enables.</para>
</simplesect>
Requires: MBEDTLS_SSL_KEEP_PEER_CERTIFICATE Requires: MBEDTLS_PSA_CRYPTO_C</para>
<para><simplesect kind="note"><para>TLS 1.3 uses PSA crypto for cryptographic operations that are directly performed by TLS 1.3 code. As a consequence, you must call <ref refid="group__initialization_1ga2de150803fc2f7dc6101d5af7e921dd9" kindref="member">psa_crypto_init()</ref> before the first TLS 1.3 handshake.</para>
</simplesect>
<simplesect kind="note"><para>Cryptographic operations performed indirectly via another module (X.509, PK) or by code shared with TLS 1.2 (record protection, running handshake hash) only use PSA crypto if <ref refid="mbedtls__config_8h_1a70fd7b97d5f11170546583f2095942a6" kindref="member">MBEDTLS_USE_PSA_CRYPTO</ref> is enabled.</para>
</simplesect>
Uncomment this macro to enable the support for TLS 1.3. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1777" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a4eaec932ebcc774c4c1ab0009883ac17" prot="public" static="no">
        <name>MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable TLS 1.3 middlebox compatibility mode.</para>
<para>As specified in Section D.4 of RFC 8446, TLS 1.3 offers a compatibility mode to make a TLS 1.3 connection more likely to pass through middle boxes expecting TLS 1.2 traffic.</para>
<para>Turning on the compatibility mode comes at the cost of a few added bytes on the wire, but it doesn&apos;t affect compatibility with TLS 1.3 implementations that don&apos;t use it. Therefore, unless transmission bandwidth is critical and you know that middlebox compatibility issues won&apos;t occur, it is therefore recommended to set this option.</para>
<para>Comment to disable compatibility mode for TLS 1.3. If MBEDTLS_SSL_PROTO_TLS1_3 is not enabled, this option does not have any effect on the build. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1799" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1799" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a5190a81e733ec8d92933ddd5860403bf" prot="public" static="no">
        <name>MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable TLS 1.3 PSK key exchange mode.</para>
<para>Comment to disable support for the PSK key exchange mode in TLS 1.3. If MBEDTLS_SSL_PROTO_TLS1_3 is not enabled, this option does not have any effect on the build. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1811" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1811" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ae617d4fcb6b7591d37f4d669e4b633dc" prot="public" static="no">
        <name>MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable TLS 1.3 ephemeral key exchange mode.</para>
<para>Requires: PSA_WANT_ALG_ECDH or PSA_WANT_ALG_FFDH MBEDTLS_X509_CRT_PARSE_C and at least one of: MBEDTLS_ECDSA_C or (MBEDTLS_USE_PSA_CRYPTO and PSA_WANT_ALG_ECDSA) MBEDTLS_PKCS1_V21</para>
<para>Comment to disable support for the ephemeral key exchange mode in TLS 1.3. If MBEDTLS_SSL_PROTO_TLS1_3 is not enabled, this option does not have any effect on the build. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1829" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1829" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a48e6f0ce6a0f8e2b2a63868bfcd3a4bd" prot="public" static="no">
        <name>MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable TLS 1.3 PSK ephemeral key exchange mode.</para>
<para>Requires: PSA_WANT_ALG_ECDH or PSA_WANT_ALG_FFDH</para>
<para>Comment to disable support for the PSK ephemeral key exchange mode in TLS 1.3. If MBEDTLS_SSL_PROTO_TLS1_3 is not enabled, this option does not have any effect on the build. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1843" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1843" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1acf992e5b82b4bc8fe7e666a58472c389" prot="public" static="no">
        <name>MBEDTLS_SSL_EARLY_DATA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for RFC 8446 TLS 1.3 early data.</para>
<para>Requires: MBEDTLS_SSL_SESSION_TICKETS and either MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_ENABLED or MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED</para>
<para>Comment this to disable support for early data. If MBEDTLS_SSL_PROTO_TLS1_3 is not enabled, this option does not have any effect on the build.</para>
<para>This feature is experimental, not completed and thus not ready for production.</para>
<para><simplesect kind="note"><para>The maximum amount of early data can be set with MBEDTLS_SSL_MAX_EARLY_DATA_SIZE. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1864" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1864" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ad7a9f2592e4e3475274a18b561e086ce" prot="public" static="no">
        <name>MBEDTLS_SSL_PROTO_DTLS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for DTLS (all available versions).</para>
<para>Enable this and MBEDTLS_SSL_PROTO_TLS1_2 to enable DTLS 1.2.</para>
<para>Requires: MBEDTLS_SSL_PROTO_TLS1_2</para>
<para>Comment this macro to disable support for DTLS </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1877" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1877" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a8d8dcefd8e95b10d757d1fd92623b283" prot="public" static="no">
        <name>MBEDTLS_SSL_ALPN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for RFC 7301 Application Layer Protocol Negotiation.</para>
<para>Comment this macro to disable support for ALPN. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1886" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1886" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a3a74b34386b00896b50e2809d2b5bbfc" prot="public" static="no">
        <name>MBEDTLS_SSL_DTLS_ANTI_REPLAY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for the anti-replay mechanism in DTLS.</para>
<para>Requires: MBEDTLS_SSL_TLS_C MBEDTLS_SSL_PROTO_DTLS</para>
<para><simplesect kind="warning"><para>Disabling this is often a security risk! See <ref refid="ssl_8h_1a46d919254eafef2ae642fb692c5e560a" kindref="member">mbedtls_ssl_conf_dtls_anti_replay()</ref> for details.</para>
</simplesect>
Comment this to disable anti-replay in DTLS. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1901" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1901" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ad60d011e349df1b96ef40ee48619699d" prot="public" static="no">
        <name>MBEDTLS_SSL_DTLS_HELLO_VERIFY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for HelloVerifyRequest on DTLS servers.</para>
<para>This feature is highly recommended to prevent DTLS servers being used as amplifiers in DoS attacks against other hosts. It should always be enabled unless you know for sure amplification cannot be a problem in the environment in which your server operates.</para>
<para><simplesect kind="warning"><para>Disabling this can be a security risk! (see above)</para>
</simplesect>
Requires: MBEDTLS_SSL_PROTO_DTLS</para>
<para>Comment this to disable support for HelloVerifyRequest. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1919" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1919" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a0689743c1010e1cf9ca49053352b9cd1" prot="public" static="no">
        <name>MBEDTLS_SSL_DTLS_SRTP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for negotiation of DTLS-SRTP (RFC 5764) through the use_srtp extension.</para>
<para><simplesect kind="note"><para>This feature provides the minimum functionality required to negotiate the use of DTLS-SRTP and to allow the derivation of the associated SRTP packet protection key material. In particular, the SRTP packet protection itself, as well as the demultiplexing of RTP and DTLS packets at the datagram layer (see Section 5 of RFC 5764), are not handled by this feature. Instead, after successful completion of a handshake negotiating the use of DTLS-SRTP, the extended key exporter API mbedtls_ssl_conf_export_keys_cb() should be used to implement the key exporter described in Section 4.2 of RFC 5764 and RFC 5705 (this is implemented in the SSL example programs). The resulting key should then be passed to an SRTP stack.</para>
</simplesect>
Setting this option enables the runtime API <ref refid="ssl_8h_1a60708396eb994ce23136821a9943ed45" kindref="member">mbedtls_ssl_conf_dtls_srtp_protection_profiles()</ref> through which the supported DTLS-SRTP protection profiles can be configured. You must call this API at runtime if you wish to negotiate the use of DTLS-SRTP.</para>
<para>Requires: MBEDTLS_SSL_PROTO_DTLS</para>
<para>Uncomment this to enable support for use_srtp extension. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1950" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1950" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ae7ea521806ace1971c7050a332693c5a" prot="public" static="no">
        <name>MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable server-side support for clients that reconnect from the same port.</para>
<para>Some clients unexpectedly close the connection and try to reconnect using the same source port. This needs special support from the server to handle the new connection securely, as described in section 4.2.8 of RFC 6347. This flag enables that support.</para>
<para>Requires: MBEDTLS_SSL_DTLS_HELLO_VERIFY</para>
<para>Comment this to disable support for clients reusing the source port. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1966" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1966" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a6751e31291b388713f5b611a9694d4e7" prot="public" static="no">
        <name>MBEDTLS_SSL_SESSION_TICKETS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for RFC 5077 session tickets in SSL. Client-side, provides full support for session tickets (maintenance of a session store remains the responsibility of the application, though). Server-side, you also need to provide callbacks for writing and parsing tickets, including authenticated encryption and key management. Example callbacks are provided by MBEDTLS_SSL_TICKET_C.</para>
<para>Comment this macro to disable support for SSL session tickets </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1980" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1980" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ab69f58bd04df63c09ffaa435baa47bf7" prot="public" static="no">
        <name>MBEDTLS_SSL_SERVER_NAME_INDICATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable support for RFC 6066 server name indication (SNI) in SSL.</para>
<para>Requires: MBEDTLS_X509_CRT_PARSE_C</para>
<para>Comment this macro to disable support for server name indication in SSL </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="1991" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="1991" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a9c096cdfc72f710061b5f4d8f5edd88b" prot="public" static="no">
        <name>MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When this option is enabled, the SSL buffer will be resized automatically based on the negotiated maximum fragment length in each direction.</para>
<para>Requires: MBEDTLS_SSL_MAX_FRAGMENT_LENGTH </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2001" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2001" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a17fd090aed0539bb286eaf949d4714ac" prot="public" static="no">
        <name>MBEDTLS_TEST_HOOKS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable features for invasive testing such as introspection functions and hooks for fault injection. This enables additional unit tests.</para>
<para>Merely enabling this feature should not change the behavior of the product. It only adds new code, and new branching points where the default behavior is the same as when this feature is disabled. However, this feature increases the attack surface: there is an added risk of vulnerabilities, and more gadgets that can make exploits easier. Therefore this feature must never be enabled in production.</para>
<para>See <computeroutput>docs/architecture/testing/mbed-crypto-invasive-testing.md</computeroutput> for more information.</para>
<para>Uncomment to enable invasive tests. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2057" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2057" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1aa63c4047f878fda72db99162c13a328f" prot="public" static="no">
        <name>MBEDTLS_THREADING_PTHREAD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the pthread wrapper layer for the threading layer.</para>
<para>Requires: MBEDTLS_THREADING_C</para>
<para>Uncomment this to enable pthread mutexes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2079" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2079" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a70fd7b97d5f11170546583f2095942a6" prot="public" static="no">
        <name>MBEDTLS_USE_PSA_CRYPTO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make the X.509 and TLS libraries use PSA for cryptographic operations as much as possible, and enable new APIs for using keys handled by PSA Crypto.</para>
<para><simplesect kind="note"><para>Development of this option is currently in progress, and parts of Mbed TLS&apos;s X.509 and TLS modules are not ported to PSA yet. However, these parts will still continue to work as usual, so enabling this option should not break backwards compatibility.</para>
</simplesect>
<simplesect kind="warning"><para>If you enable this option, you need to call <computeroutput><ref refid="group__initialization_1ga2de150803fc2f7dc6101d5af7e921dd9" kindref="member">psa_crypto_init()</ref></computeroutput> before calling any function from the SSL/TLS, X.509 or PK modules, except for the various mbedtls_xxx_init() functions which can be called at any time.</para>
</simplesect>
<simplesect kind="note"><para>An important and desirable effect of this option is that it allows PK, X.509 and TLS to take advantage of PSA drivers. For example, enabling this option is what allows use of drivers for ECDSA, ECDH and EC J-PAKE in those modules. However, note that even with this option disabled, some code in PK, X.509, TLS or the crypto library might still use PSA drivers, if it can determine it&apos;s safe to do so; currently that&apos;s the case for hashes.</para>
</simplesect>
<simplesect kind="note"><para>See docs/use-psa-crypto.md for a complete description this option.</para>
</simplesect>
Requires: MBEDTLS_PSA_CRYPTO_C.</para>
<para>Uncomment this to enable internal use of PSA Crypto and new associated APIs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2109" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a5aca5ddcffb586acad82f9aef26db056" prot="public" static="no">
        <name>MBEDTLS_PSA_CRYPTO_CONFIG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This setting allows support for cryptographic mechanisms through the PSA API to be configured separately from support through the mbedtls API.</para>
<para>When this option is disabled, the PSA API exposes the cryptographic mechanisms that can be implemented on top of the <computeroutput>mbedtls_xxx</computeroutput> API configured with <computeroutput>MBEDTLS_XXX</computeroutput> symbols.</para>
<para>When this option is enabled, the PSA API exposes the cryptographic mechanisms requested by the <computeroutput>PSA_WANT_XXX</computeroutput> symbols defined in <ref refid="crypto__config_8h" kindref="compound">include/psa/crypto_config.h</ref>. The corresponding <computeroutput>MBEDTLS_XXX</computeroutput> settings are automatically enabled if required (i.e. if no PSA driver provides the mechanism). You may still freely enable additional <computeroutput>MBEDTLS_XXX</computeroutput> symbols in <ref refid="mbedtls__config_8h" kindref="compound">mbedtls_config.h</ref>.</para>
<para>If the symbol #MBEDTLS_PSA_CRYPTO_CONFIG_FILE is defined, it specifies an alternative header to include instead of <ref refid="crypto__config_8h" kindref="compound">include/psa/crypto_config.h</ref>.</para>
<para><simplesect kind="warning"><para>This option is experimental, in that the set of <computeroutput>PSA_WANT_XXX</computeroutput> symbols is not completely finalized yet, and the configuration tooling is not ideally adapted to having two separate configuration files. Future minor releases of Mbed TLS may make minor changes to those symbols, but we will endeavor to provide a transition path. Nonetheless, this option is considered mature enough to use in production, as long as you accept that you may need to make minor changes to <ref refid="crypto__config_8h" kindref="compound">psa/crypto_config.h</ref> when upgrading Mbed TLS. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2141" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a9695236b5192ac4a15afe1681adbb990" prot="public" static="no">
        <name>MBEDTLS_VERSION_FEATURES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allow run-time checking of compile-time enabled features. Thus allowing users to check at run-time if the library is for instance compiled with threading support via <ref refid="version_8h_1afe471be7bb2bd441b0c693256ab298ea" kindref="member">mbedtls_version_check_feature()</ref>.</para>
<para>Requires: MBEDTLS_VERSION_C</para>
<para>Comment this to disable run-time checking and save ROM space </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2154" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a6d767be4cc0658c87771cc22418138bd" prot="public" static="no">
        <name>MBEDTLS_X509_TRUSTED_CERTIFICATE_CALLBACK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If set, this enables the X.509 API <computeroutput><ref refid="group__x509__module_1ga169e418a7c1ecf4d2dcc896cf24049a7" kindref="member">mbedtls_x509_crt_verify_with_ca_cb()</ref></computeroutput> and the SSL API <computeroutput><ref refid="ssl_8h_1aaff29509e19ba559c9228e4ee8a49e32" kindref="member">mbedtls_ssl_conf_ca_cb()</ref></computeroutput> which allow users to configure the set of trusted certificates through a callback instead of a linked list.</para>
<para>This is useful for example in environments where a large number of trusted certificates is present and storing them in a linked list isn&apos;t efficient enough, or when the set of trusted certificates changes frequently.</para>
<para>See the documentation of <computeroutput><ref refid="group__x509__module_1ga169e418a7c1ecf4d2dcc896cf24049a7" kindref="member">mbedtls_x509_crt_verify_with_ca_cb()</ref></computeroutput> and <computeroutput><ref refid="ssl_8h_1aaff29509e19ba559c9228e4ee8a49e32" kindref="member">mbedtls_ssl_conf_ca_cb()</ref></computeroutput> for more information.</para>
<para>Requires: MBEDTLS_X509_CRT_PARSE_C</para>
<para>Uncomment to enable trusted certificate callbacks. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2175" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a0510bbca604b868f3150a38f65623e8b" prot="public" static="no">
        <name>MBEDTLS_X509_RSASSA_PSS_SUPPORT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable parsing and verification of X.509 certificates, CRLs and CSRS signed with RSASSA-PSS (aka PKCS#1 v2.1).</para>
<para>Comment this macro to disallow using RSASSA-PSS in certificates. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2196" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2196" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>SECTION: Mbed TLS modules</header>
      <description><para>This section enables or disables entire modules in Mbed TLS </para>
</description>
      <memberdef kind="define" id="mbedtls__config_8h_1ab3bca0048342cf2789e7d170548ff3a5" prot="public" static="no">
        <name>MBEDTLS_AESNI_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable AES-NI support on x86-64 or x86-32.</para>
<para><simplesect kind="note"><para>AESNI is only supported with certain compilers and target options:<itemizedlist>
<listitem><para>Visual Studio 2013: supported.</para>
</listitem><listitem><para>GCC, x86-64, target not explicitly supporting AESNI: requires MBEDTLS_HAVE_ASM.</para>
</listitem><listitem><para>GCC, x86-32, target not explicitly supporting AESNI: not supported.</para>
</listitem><listitem><para>GCC, x86-64 or x86-32, target supporting AESNI: supported. For this assembly-less implementation, you must currently compile <computeroutput>library/aesni.c</computeroutput> and <computeroutput>library/aes.c</computeroutput> with machine options to enable SSE2 and AESNI instructions: <computeroutput>gcc -msse2 -maes -mpclmul</computeroutput> or <computeroutput>clang -maes -mpclmul</computeroutput>.</para>
</listitem><listitem><para>Non-x86 targets: this option is silently ignored.</para>
</listitem><listitem><para>Other compilers: this option is silently ignored.</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="note"><para>Above, &quot;GCC&quot; includes compatible compilers such as Clang. The limitations on target support are likely to be relaxed in the future.</para>
</simplesect>
Module: library/aesni.c Caller: library/aes.c</para>
<para>Requires: MBEDTLS_HAVE_ASM (on some platforms, see note)</para>
<para>This modules adds support for the AES-NI instructions on x86. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2236" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a509e3410ce73c63d2c18e680dfb67cb6" prot="public" static="no">
        <name>MBEDTLS_AESCE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable AES cryptographic extension support on 64-bit Arm.</para>
<para>Module: library/aesce.c Caller: library/aes.c</para>
<para>Requires: MBEDTLS_AES_C</para>
<para><simplesect kind="warning"><para>Runtime detection only works on Linux. For non-Linux operating system, Armv8-A Cryptographic Extensions must be supported by the CPU when this option is enabled.</para>
</simplesect>
<simplesect kind="note"><para>Minimum compiler versions for this feature are Clang 4.0, armclang 6.6, GCC 6.0 or MSVC 2019 version 16.11.2.</para>
</simplesect>
<simplesect kind="note"><para><computeroutput>CFLAGS</computeroutput> must be set to a minimum of <computeroutput>-march=armv8-a+crypto</computeroutput> for armclang &lt;= 6.9</para>
</simplesect>
This module adds support for the AES Armv8-A Cryptographic Extensions on Aarch64 systems. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2260" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a54a11655ee76cbd7b4d8b159e377adef" prot="public" static="no">
        <name>MBEDTLS_AES_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the AES block cipher.</para>
<para>Module: library/aes.c Caller: library/cipher.c library/pem.c library/ctr_drbg.c</para>
<para>This module enables the following ciphersuites (if other requisites are enabled as well): MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CBC_SHA MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CBC_SHA MBEDTLS_TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CBC_SHA MBEDTLS_TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CBC_SHA MBEDTLS_TLS_RSA_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_RSA_WITH_AES_256_CBC_SHA256 MBEDTLS_TLS_RSA_WITH_AES_256_CBC_SHA MBEDTLS_TLS_RSA_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_RSA_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_RSA_WITH_AES_128_CBC_SHA MBEDTLS_TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_RSA_PSK_WITH_AES_256_CBC_SHA MBEDTLS_TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_RSA_PSK_WITH_AES_128_CBC_SHA MBEDTLS_TLS_PSK_WITH_AES_256_GCM_SHA384 MBEDTLS_TLS_PSK_WITH_AES_256_CBC_SHA384 MBEDTLS_TLS_PSK_WITH_AES_256_CBC_SHA MBEDTLS_TLS_PSK_WITH_AES_128_GCM_SHA256 MBEDTLS_TLS_PSK_WITH_AES_128_CBC_SHA256 MBEDTLS_TLS_PSK_WITH_AES_128_CBC_SHA</para>
<para>PEM_PARSE uses AES for decrypting encrypted keys. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2335" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ab6d2cedeb9ad2d5f11e008708c922a7d" prot="public" static="no">
        <name>MBEDTLS_ASN1_PARSE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the generic ASN1 parser.</para>
<para>Module: library/asn1.c Caller: library/x509.c library/dhm.c library/pkcs12.c library/pkcs5.c library/pkparse.c </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2349" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a79098f46901a7da949424ca81fcb4be2" prot="public" static="no">
        <name>MBEDTLS_ASN1_WRITE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the generic ASN1 writer.</para>
<para>Module: library/asn1write.c Caller: library/ecdsa.c library/pkwrite.c library/x509_create.c library/x509write_crt.c library/x509write_csr.c </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2363" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a95e58aa3f6b5391f9fc423b3809cf9a4" prot="public" static="no">
        <name>MBEDTLS_BASE64_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the Base64 module.</para>
<para>Module: library/base64.c Caller: library/pem.c</para>
<para>This module is required for PEM support (required by X.509). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2375" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a1cceb2b05fcbf777d24948d63a1aa74c" prot="public" static="no">
        <name>MBEDTLS_BIGNUM_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the multi-precision integer library.</para>
<para>Module: library/bignum.c library/bignum_core.c library/bignum_mod.c library/bignum_mod_raw.c Caller: library/dhm.c library/ecp.c library/ecdsa.c library/rsa.c library/rsa_alt_helpers.c library/ssl_tls.c</para>
<para>This module is required for RSA, DHM and ECC (ECDH, ECDSA) support. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2395" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a0c207f9b12519686ffb8a22d656f7289" prot="public" static="no">
        <name>MBEDTLS_CAMELLIA_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the Camellia block cipher.</para>
<para>Module: library/camellia.c Caller: library/cipher.c</para>
<para>This module enables the following ciphersuites (if other requisites are enabled as well): MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 MBEDTLS_TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 MBEDTLS_TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 MBEDTLS_TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 MBEDTLS_TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 MBEDTLS_TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2450" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ab674e244fd8131e3dc1d5e18cd5c1e16" prot="public" static="no">
        <name>MBEDTLS_ARIA_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the ARIA block cipher.</para>
<para>Module: library/aria.c Caller: library/cipher.c</para>
<para>This module enables the following ciphersuites (if other requisites are enabled as well): <verbatim> MBEDTLS_TLS_RSA_WITH_ARIA_128_CBC_SHA256
 MBEDTLS_TLS_RSA_WITH_ARIA_256_CBC_SHA384
 MBEDTLS_TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256
 MBEDTLS_TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384
 MBEDTLS_TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256
 MBEDTLS_TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384
 MBEDTLS_TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256
 MBEDTLS_TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384
 MBEDTLS_TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256
 MBEDTLS_TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384
 MBEDTLS_TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256
 MBEDTLS_TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384
 MBEDTLS_TLS_RSA_WITH_ARIA_128_GCM_SHA256
 MBEDTLS_TLS_RSA_WITH_ARIA_256_GCM_SHA384
 MBEDTLS_TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256
 MBEDTLS_TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384
 MBEDTLS_TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256
 MBEDTLS_TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384
 MBEDTLS_TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256
 MBEDTLS_TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384
 MBEDTLS_TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256
 MBEDTLS_TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384
 MBEDTLS_TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256
 MBEDTLS_TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384
 MBEDTLS_TLS_PSK_WITH_ARIA_128_CBC_SHA256
 MBEDTLS_TLS_PSK_WITH_ARIA_256_CBC_SHA384
 MBEDTLS_TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256
 MBEDTLS_TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384
 MBEDTLS_TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256
 MBEDTLS_TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384
 MBEDTLS_TLS_PSK_WITH_ARIA_128_GCM_SHA256
 MBEDTLS_TLS_PSK_WITH_ARIA_256_GCM_SHA384
 MBEDTLS_TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256
 MBEDTLS_TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384
 MBEDTLS_TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256
 MBEDTLS_TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384
 MBEDTLS_TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256
 MBEDTLS_TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2502" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1af1b8731adc061cf1cc1826035e32e941" prot="public" static="no">
        <name>MBEDTLS_CCM_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the Counter with CBC-MAC (CCM) mode for 128-bit block cipher.</para>
<para>Module: library/ccm.c</para>
<para>Requires: MBEDTLS_CIPHER_C, MBEDTLS_AES_C or MBEDTLS_CAMELLIA_C or MBEDTLS_ARIA_C</para>
<para>This module enables the AES-CCM ciphersuites, if other requisites are enabled as well. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2517" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1acdb992313a04115aa608de67392880de" prot="public" static="no">
        <name>MBEDTLS_CHACHA20_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the ChaCha20 stream cipher.</para>
<para>Module: library/chacha20.c </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2526" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1aa058d643c79d5eae4b92a1a0d5232e13" prot="public" static="no">
        <name>MBEDTLS_CHACHAPOLY_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the ChaCha20-Poly1305 AEAD algorithm.</para>
<para>Module: library/chachapoly.c</para>
<para>This module requires: MBEDTLS_CHACHA20_C, MBEDTLS_POLY1305_C </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2537" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a4a186eda38ce80f484524f3f12de2923" prot="public" static="no">
        <name>MBEDTLS_CIPHER_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the generic cipher layer.</para>
<para>Module: library/cipher.c Caller: library/ccm.c library/cmac.c library/gcm.c library/nist_kw.c library/pkcs12.c library/pkcs5.c library/psa_crypto_aead.c library/psa_crypto_mac.c library/ssl_ciphersuites.c library/ssl_msg.c library/ssl_ticket.c (unless MBEDTLS_USE_PSA_CRYPTO is enabled)</para>
<para>Uncomment to enable generic cipher wrappers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2559" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2559" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a44adbf6ab596bdbcff486313978eee04" prot="public" static="no">
        <name>MBEDTLS_CMAC_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the CMAC (Cipher-based Message Authentication Code) mode for block ciphers.</para>
<para><simplesect kind="note"><para>When #MBEDTLS_CMAC_ALT is active, meaning that the underlying implementation of the CMAC algorithm is provided by an alternate implementation, that alternate implementation may opt to not support AES-192 or 3DES as underlying block ciphers for the CMAC operation.</para>
</simplesect>
Module: library/cmac.c</para>
<para>Requires: MBEDTLS_CIPHER_C, MBEDTLS_AES_C or MBEDTLS_DES_C </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2577" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a493cf54dbd2c093c8541b1ad106436e9" prot="public" static="no">
        <name>MBEDTLS_CTR_DRBG_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the CTR_DRBG AES-based random generator. The CTR_DRBG generator uses AES-256 by default. To use AES-128 instead, enable <computeroutput>MBEDTLS_CTR_DRBG_USE_128_BIT_KEY</computeroutput> above.</para>
<para><simplesect kind="note"><para>AES-128 will be used if <computeroutput>MBEDTLS_AES_ONLY_128_BIT_KEY_LENGTH</computeroutput> is set.</para>
</simplesect>
<simplesect kind="note"><para>To achieve a 256-bit security strength with CTR_DRBG, you must use AES-256 <emphasis>and</emphasis> use sufficient entropy. See <ref refid="ctr__drbg_8h" kindref="compound">ctr_drbg.h</ref> for more details.</para>
</simplesect>
Module: library/ctr_drbg.c Caller:</para>
<para>Requires: MBEDTLS_AES_C</para>
<para>This module provides the CTR_DRBG AES random number generator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2599" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2599" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ac64f663ce793cda3cc14e5a300e30a65" prot="public" static="no">
        <name>MBEDTLS_DEBUG_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the debug functions.</para>
<para>Module: library/debug.c Caller: library/ssl_msg.c library/ssl_tls.c library/ssl_tls12_*.c library/ssl_tls13_*.c</para>
<para>This module provides debugging functions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2614" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a6cf0e4c49c7f61321d1e8f2cfb2c9ab9" prot="public" static="no">
        <name>MBEDTLS_DES_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the DES block cipher.</para>
<para>Module: library/des.c Caller: library/pem.c library/cipher.c</para>
<para>PEM_PARSE uses DES/3DES for decrypting encrypted keys.</para>
<para><simplesect kind="warning"><para>DES/3DES are considered weak ciphers and their use constitutes a security risk. We recommend considering stronger ciphers instead. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2630" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ae6058d084fccdc95cce6de3b5e46b367" prot="public" static="no">
        <name>MBEDTLS_DHM_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the Diffie-Hellman-Merkle module.</para>
<para>Module: library/dhm.c Caller: library/ssl_tls.c library/ssl*_client.c library/ssl*_server.c</para>
<para>This module is used by the following key exchanges: DHE-RSA, DHE-PSK</para>
<para><simplesect kind="warning"><para>Using DHE constitutes a security risk as it is not possible to validate custom DH parameters. If possible, it is recommended users should consider preferring other methods of key exchange. See <ref refid="dhm_8h" kindref="compound">dhm.h</ref> for more details. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2652" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1aa3615295cbab56882c919eb9cf79fe10" prot="public" static="no">
        <name>MBEDTLS_ECDH_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the elliptic curve Diffie-Hellman library.</para>
<para>Module: library/ecdh.c Caller: library/psa_crypto.c library/ssl_tls.c library/ssl*_client.c library/ssl*_server.c</para>
<para>This module is used by the following key exchanges: ECDHE-ECDSA, ECDHE-RSA, DHE-PSK</para>
<para>Requires: MBEDTLS_ECP_C </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2670" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2670" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ac5796bd242fe0f33d66f9e2cc3c2b490" prot="public" static="no">
        <name>MBEDTLS_ECDSA_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the elliptic curve DSA library.</para>
<para>Module: library/ecdsa.c Caller:</para>
<para>This module is used by the following key exchanges: ECDHE-ECDSA</para>
<para>Requires: MBEDTLS_ECP_C, MBEDTLS_ASN1_WRITE_C, MBEDTLS_ASN1_PARSE_C, and at least one MBEDTLS_ECP_DP_XXX_ENABLED for a short Weierstrass curve. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2687" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2687" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1af4c97c30b6084ceb60392781b93c9f58" prot="public" static="no">
        <name>MBEDTLS_ECJPAKE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the elliptic curve J-PAKE library.</para>
<para><simplesect kind="note"><para>EC J-PAKE support is based on the Thread v1.0.0 specification. It has not been reviewed for compliance with newer standards such as Thread v1.1 or RFC 8236.</para>
</simplesect>
Module: library/ecjpake.c Caller:</para>
<para>This module is used by the following key exchanges: ECJPAKE</para>
<para>Requires: MBEDTLS_ECP_C and either MBEDTLS_MD_C or MBEDTLS_PSA_CRYPTO_C</para>
<para><simplesect kind="warning"><para>If using a hash that is only provided by PSA drivers, you must call <ref refid="group__initialization_1ga2de150803fc2f7dc6101d5af7e921dd9" kindref="member">psa_crypto_init()</ref> before doing any EC J-PAKE operations. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2709" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2709" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ae9d24fd58758d905e43ace39f9798b46" prot="public" static="no">
        <name>MBEDTLS_ECP_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the elliptic curve over GF(p) library.</para>
<para>Module: library/ecp.c Caller: library/ecdh.c library/ecdsa.c library/ecjpake.c</para>
<para>Requires: MBEDTLS_BIGNUM_C and at least one MBEDTLS_ECP_DP_XXX_ENABLED </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2723" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2723" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a24884ce4da3fed0ceff29962dd7a01fc" prot="public" static="no">
        <name>MBEDTLS_ENTROPY_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the platform-specific entropy code.</para>
<para>Module: library/entropy.c Caller:</para>
<para>Requires: MBEDTLS_SHA512_C or MBEDTLS_SHA256_C</para>
<para>This module provides a generic entropy pool </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2737" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2737" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a8d615f5d4143f300c13c9f6fec1fb17a" prot="public" static="no">
        <name>MBEDTLS_ERROR_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable error code to error string conversion.</para>
<para>Module: library/error.c Caller:</para>
<para>This module enables <ref refid="error_8h_1a8c41c149b77a4807115b19c2af858558" kindref="member">mbedtls_strerror()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2749" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2749" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a1302769eb08072aaf2d8cd6ca9ac206b" prot="public" static="no">
        <name>MBEDTLS_GCM_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the Galois/Counter Mode (GCM).</para>
<para>Module: library/gcm.c</para>
<para>Requires: MBEDTLS_CIPHER_C, MBEDTLS_AES_C or MBEDTLS_CAMELLIA_C or MBEDTLS_ARIA_C</para>
<para>This module enables the AES-GCM and CAMELLIA-GCM ciphersuites, if other requisites are enabled as well. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2764" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2764" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1aa046c86ba7c3101e5128ccac09128a71" prot="public" static="no">
        <name>MBEDTLS_HKDF_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the HKDF algorithm (RFC 5869).</para>
<para>Module: library/hkdf.c Caller:</para>
<para>Requires: MBEDTLS_MD_C</para>
<para>This module adds support for the Hashed Message Authentication Code (HMAC)-based key derivation function (HKDF). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2779" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2779" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a3ddaec887496f6a2b18975d52afc87d5" prot="public" static="no">
        <name>MBEDTLS_HMAC_DRBG_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the HMAC_DRBG random generator.</para>
<para>Module: library/hmac_drbg.c Caller:</para>
<para>Requires: MBEDTLS_MD_C</para>
<para>Uncomment to enable the HMAC_DRBG random number generator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2793" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1aa15d2538251a7b4ec68e9e160540a44a" prot="public" static="no">
        <name>MBEDTLS_LMS_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the LMS stateful-hash asymmetric signature algorithm.</para>
<para>Module: library/lms.c Caller:</para>
<para>Requires: MBEDTLS_PSA_CRYPTO_C</para>
<para>Uncomment to enable the LMS verification algorithm and public key operations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2807" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2807" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a8b152b74f793230b7c50af3b9dd5a269" prot="public" static="no">
        <name>MBEDTLS_LMS_PRIVATE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable LMS private-key operations and signing code. Functions enabled by this option are experimental, and should not be used in production.</para>
<para>Requires: MBEDTLS_LMS_C</para>
<para>Uncomment to enable the LMS signature algorithm and private key operations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2819" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2819" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a0c096eeabeb4b6080ac40c4f89498731" prot="public" static="no">
        <name>MBEDTLS_NIST_KW_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the Key Wrapping mode for 128-bit block ciphers, as defined in NIST SP 800-38F. Only KW and KWP modes are supported. At the moment, only AES is approved by NIST.</para>
<para>Module: library/nist_kw.c</para>
<para>Requires: MBEDTLS_AES_C and MBEDTLS_CIPHER_C </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2832" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2832" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a17195cf7384dbcab5bae3f1d2971fb03" prot="public" static="no">
        <name>MBEDTLS_MD_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the generic layer for message digest (hashing) and HMAC.</para>
<para>Requires: one of: MBEDTLS_MD5_C, MBEDTLS_RIPEMD160_C, MBEDTLS_SHA1_C, MBEDTLS_SHA224_C, MBEDTLS_SHA256_C, MBEDTLS_SHA384_C, MBEDTLS_SHA512_C, or MBEDTLS_PSA_CRYPTO_C with at least one hash. Module: library/md.c Caller: library/constant_time.c library/ecdsa.c library/ecjpake.c library/hkdf.c library/hmac_drbg.c library/pk.c library/pkcs5.c library/pkcs12.c library/psa_crypto_ecp.c library/psa_crypto_rsa.c library/rsa.c library/ssl_cookie.c library/ssl_msg.c library/ssl_tls.c library/x509.c library/x509_crt.c library/x509write_crt.c library/x509write_csr.c</para>
<para>Uncomment to enable generic message digest wrappers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2865" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2865" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a76686ebb937ad5cc1623638965c4bc22" prot="public" static="no">
        <name>MBEDTLS_MD5_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the MD5 hash algorithm.</para>
<para>Module: library/md5.c Caller: library/md.c library/pem.c library/ssl_tls.c</para>
<para>This module is required for TLS 1.2 depending on the handshake parameters. Further, it is used for checking MD5-signed certificates, and for PBKDF1 when decrypting PEM-encoded encrypted keys.</para>
<para><simplesect kind="warning"><para>MD5 is considered a weak message digest and its use constitutes a security risk. If possible, we recommend avoiding dependencies on it, and considering stronger message digests instead. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2886" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2886" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ae73dbeb395510070a756ed6689459b30" prot="public" static="no">
        <name>MBEDTLS_NET_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the TCP and UDP over IPv6/IPv4 networking routines.</para>
<para><simplesect kind="note"><para>This module only works on POSIX/Unix (including Linux, BSD and OS X) and Windows. For other platforms, you&apos;ll want to disable it, and write your own networking callbacks to be passed to <computeroutput><ref refid="ssl_8h_1a8b7442420aef7f1a76fa8c5336362f9e" kindref="member">mbedtls_ssl_set_bio()</ref></computeroutput>.</para>
</simplesect>
<simplesect kind="note"><para>See also our Knowledge Base article about porting to a new environment: <ulink url="https://mbed-tls.readthedocs.io/en/latest/kb/how-to/how-do-i-port-mbed-tls-to-a-new-environment-OS">https://mbed-tls.readthedocs.io/en/latest/kb/how-to/how-do-i-port-mbed-tls-to-a-new-environment-OS</ulink></para>
</simplesect>
Module: library/net_sockets.c</para>
<para>This module provides networking routines. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2921" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2921" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a0960129d0cf6e043a1cbc7c41d7c2297" prot="public" static="no">
        <name>MBEDTLS_OID_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the OID database.</para>
<para>Module: library/oid.c Caller: library/asn1write.c library/pkcs5.c library/pkparse.c library/pkwrite.c library/rsa.c library/x509.c library/x509_create.c library/x509_crl.c library/x509_crt.c library/x509_csr.c library/x509write_crt.c library/x509write_csr.c</para>
<para>This modules translates between OIDs and internal values. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2944" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2944" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a47e6357c250060fd78ba8c17b1b5a55d" prot="public" static="no">
        <name>MBEDTLS_PADLOCK_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable VIA Padlock support on x86.</para>
<para>Module: library/padlock.c Caller: library/aes.c</para>
<para>Requires: MBEDTLS_HAVE_ASM</para>
<para>This modules adds support for the VIA PadLock on x86. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2958" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2958" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ac90a92552ac2f87c701b24857fd6d4c1" prot="public" static="no">
        <name>MBEDTLS_PEM_PARSE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable PEM decoding / parsing.</para>
<para>Module: library/pem.c Caller: library/dhm.c library/pkparse.c library/x509_crl.c library/x509_crt.c library/x509_csr.c</para>
<para>Requires: MBEDTLS_BASE64_C optionally MBEDTLS_MD5_C, or PSA Crypto with MD5 (see below)</para>
<para><simplesect kind="warning"><para>When parsing password-protected files, if MD5 is provided only by a PSA driver, you must call <ref refid="group__initialization_1ga2de150803fc2f7dc6101d5af7e921dd9" kindref="member">psa_crypto_init()</ref> before the first file.</para>
</simplesect>
This modules adds support for decoding / parsing PEM files. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2980" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2980" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a6f285fd8cf87b2169373154d219011a6" prot="public" static="no">
        <name>MBEDTLS_PEM_WRITE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable PEM encoding / writing.</para>
<para>Module: library/pem.c Caller: library/pkwrite.c library/x509write_crt.c library/x509write_csr.c</para>
<para>Requires: MBEDTLS_BASE64_C</para>
<para>This modules adds support for encoding / writing PEM files. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="2996" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="2996" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a0dcc79b4e757e34d2a625470fb016e18" prot="public" static="no">
        <name>MBEDTLS_PK_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the generic public (asymmetric) key layer.</para>
<para>Module: library/pk.c Caller: library/psa_crypto_rsa.c library/ssl_tls.c library/ssl*_client.c library/ssl*_server.c library/x509.c</para>
<para>Requires: MBEDTLS_MD_C, MBEDTLS_RSA_C or MBEDTLS_ECP_C</para>
<para>Uncomment to enable generic public key wrappers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3014" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3014" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a09eefef8f4562ba86a9c7a47c114ddaa" prot="public" static="no">
        <name>MBEDTLS_PK_PARSE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the generic public (asymmetric) key parser.</para>
<para>Module: library/pkparse.c Caller: library/x509_crt.c library/x509_csr.c</para>
<para>Requires: MBEDTLS_PK_C</para>
<para>Uncomment to enable generic public key parse functions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3029" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3029" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a6ec5fb843794dcbfa6e27e5b62bd1c29" prot="public" static="no">
        <name>MBEDTLS_PK_WRITE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the generic public (asymmetric) key writer.</para>
<para>Module: library/pkwrite.c Caller: library/x509write.c</para>
<para>Requires: MBEDTLS_PK_C</para>
<para>Uncomment to enable generic public key write functions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3043" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3043" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a2d9853334811c4e2220fb5c6266e908e" prot="public" static="no">
        <name>MBEDTLS_PKCS5_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable PKCS#5 functions.</para>
<para>Module: library/pkcs5.c</para>
<para>Requires: MBEDTLS_CIPHER_C Auto-enables: MBEDTLS_MD_C</para>
<para><simplesect kind="warning"><para>If using a hash that is only provided by PSA drivers, you must call <ref refid="group__initialization_1ga2de150803fc2f7dc6101d5af7e921dd9" kindref="member">psa_crypto_init()</ref> before doing any PKCS5 operations.</para>
</simplesect>
This module adds support for the PKCS#5 functions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3060" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3060" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a13e9242b1f331966929aa4a6f689de3c" prot="public" static="no">
        <name>MBEDTLS_PKCS7_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable PKCS #7 core for using PKCS #7-formatted signatures. RFC Link - <ulink url="https://tools.ietf.org/html/rfc2315">https://tools.ietf.org/html/rfc2315</ulink></para>
<para>Module: library/pkcs7.c</para>
<para>Requires: MBEDTLS_ASN1_PARSE_C, MBEDTLS_OID_C, MBEDTLS_PK_PARSE_C, MBEDTLS_X509_CRT_PARSE_C MBEDTLS_X509_CRL_PARSE_C, MBEDTLS_BIGNUM_C, MBEDTLS_MD_C</para>
<para>This module is required for the PKCS #7 parsing modules. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3076" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3076" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a66477e50d4c1e5cf01f3f63010596c1f" prot="public" static="no">
        <name>MBEDTLS_PKCS12_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable PKCS#12 PBE functions. Adds algorithms for parsing PKCS#8 encrypted private keys</para>
<para>Module: library/pkcs12.c Caller: library/pkparse.c</para>
<para>Requires: MBEDTLS_ASN1_PARSE_C, MBEDTLS_CIPHER_C and either MBEDTLS_MD_C or MBEDTLS_PSA_CRYPTO_C.</para>
<para><simplesect kind="warning"><para>If using a hash that is only provided by PSA drivers, you must call <ref refid="group__initialization_1ga2de150803fc2f7dc6101d5af7e921dd9" kindref="member">psa_crypto_init()</ref> before doing any PKCS12 operations.</para>
</simplesect>
This module enables PKCS#12 functions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3095" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3095" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a756fb086e76be2a76954beb682195a49" prot="public" static="no">
        <name>MBEDTLS_PLATFORM_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the platform abstraction layer that allows you to re-assign functions like calloc(), free(), snprintf(), printf(), fprintf(), exit().</para>
<para>Enabling MBEDTLS_PLATFORM_C enables to use of MBEDTLS_PLATFORM_XXX_ALT or MBEDTLS_PLATFORM_XXX_MACRO directives, allowing the functions mentioned above to be specified at runtime or compile time respectively.</para>
<para><simplesect kind="note"><para>This abstraction layer must be enabled on Windows (including MSYS2) as other modules rely on it for a fixed snprintf implementation.</para>
</simplesect>
Module: library/platform.c Caller: Most other .c files</para>
<para>This module enables abstraction of common (libc) functions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3115" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a64fd6228228da29393d954679621be75" prot="public" static="no">
        <name>MBEDTLS_POLY1305_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the Poly1305 MAC algorithm.</para>
<para>Module: library/poly1305.c Caller: library/chachapoly.c </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3125" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a7035fab808a098a76627fb4d466e3b21" prot="public" static="no">
        <name>MBEDTLS_PSA_CRYPTO_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the Platform Security Architecture cryptography API.</para>
<para>Module: library/psa_crypto.c</para>
<para>Requires: MBEDTLS_CIPHER_C, either MBEDTLS_CTR_DRBG_C and MBEDTLS_ENTROPY_C, or MBEDTLS_HMAC_DRBG_C and MBEDTLS_ENTROPY_C, or MBEDTLS_PSA_CRYPTO_EXTERNAL_RNG. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3140" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a7d31bdc8946b87038702628ba1f60e8c" prot="public" static="no">
        <name>MBEDTLS_PSA_CRYPTO_SE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable dynamic secure element support in the Platform Security Architecture cryptography API.</para>
<para><xrefsect id="deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This feature is deprecated. Please switch to the PSA driver interface.</para>
</xrefdescription></xrefsect></para>
<para>Module: library/psa_crypto_se.c</para>
<para>Requires: MBEDTLS_PSA_CRYPTO_C, MBEDTLS_PSA_CRYPTO_STORAGE_C </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3156" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ac6762bbebb75d81d4a3dc663bf948b75" prot="public" static="no">
        <name>MBEDTLS_PSA_CRYPTO_STORAGE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the Platform Security Architecture persistent key storage.</para>
<para>Module: library/psa_crypto_storage.c</para>
<para>Requires: MBEDTLS_PSA_CRYPTO_C, either MBEDTLS_PSA_ITS_FILE_C or a native implementation of the PSA ITS interface </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3169" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a743014c310cbb4a00d3eacfcac625564" prot="public" static="no">
        <name>MBEDTLS_PSA_ITS_FILE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the emulation of the Platform Security Architecture Internal Trusted Storage (PSA ITS) over files.</para>
<para>Module: library/psa_its_file.c</para>
<para>Requires: MBEDTLS_FS_IO </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3181" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1af4366a787d9164355c3206f27c6bb036" prot="public" static="no">
        <name>MBEDTLS_RIPEMD160_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the RIPEMD-160 hash algorithm.</para>
<para>Module: library/ripemd160.c Caller: library/md.c </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3192" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a035227f1c3c88103fdb13621e9a5df51" prot="public" static="no">
        <name>MBEDTLS_RSA_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the RSA public-key cryptosystem.</para>
<para>Module: library/rsa.c library/rsa_alt_helpers.c Caller: library/pk.c library/psa_crypto.c library/ssl_tls.c library/ssl*_client.c library/ssl*_server.c</para>
<para>This module is used by the following key exchanges: RSA, DHE-RSA, ECDHE-RSA, RSA-PSK</para>
<para>Requires: MBEDTLS_BIGNUM_C, MBEDTLS_OID_C </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3212" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1af0a5a26171b8cc9ba46b9775cf56b541" prot="public" static="no">
        <name>MBEDTLS_SHA1_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the SHA1 cryptographic hash algorithm.</para>
<para>Module: library/sha1.c Caller: library/md.c library/psa_crypto_hash.c</para>
<para>This module is required for TLS 1.2 depending on the handshake parameters, and for SHA1-signed certificates.</para>
<para><simplesect kind="warning"><para>SHA-1 is considered a weak message digest and its use constitutes a security risk. If possible, we recommend avoiding dependencies on it, and considering stronger message digests instead. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3231" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ad9ce2492f61eae86103d3e9ed90fd72e" prot="public" static="no">
        <name>MBEDTLS_SHA224_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the SHA-224 cryptographic hash algorithm.</para>
<para>Module: library/sha256.c Caller: library/md.c library/ssl_cookie.c</para>
<para>This module adds support for SHA-224. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3244" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a8cc51fc9b077f5b669bc4dfba0bde43e" prot="public" static="no">
        <name>MBEDTLS_SHA256_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the SHA-256 cryptographic hash algorithm.</para>
<para>Module: library/sha256.c Caller: library/entropy.c library/md.c library/ssl_tls.c library/ssl*_client.c library/ssl*_server.c</para>
<para>This module adds support for SHA-256. This module is required for the SSL/TLS 1.2 PRF function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3261" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ad4ceff6d1d341dee2f4713dd02aa27e1" prot="public" static="no">
        <name>MBEDTLS_SHA256_USE_A64_CRYPTO_IF_PRESENT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable acceleration of the SHA-256 and SHA-224 cryptographic hash algorithms with the ARMv8 cryptographic extensions if they are available at runtime. If not, the library will fall back to the C implementation.</para>
<para><simplesect kind="note"><para>If MBEDTLS_SHA256_USE_A64_CRYPTO_IF_PRESENT is defined when building for a non-Aarch64 build it will be silently ignored.</para>
</simplesect>
<simplesect kind="note"><para>Minimum compiler versions for this feature are Clang 4.0, armclang 6.6 or GCC 6.0.</para>
</simplesect>
<simplesect kind="note"><para><computeroutput>CFLAGS</computeroutput> must be set to a minimum of <computeroutput>-march=armv8-a+crypto</computeroutput> for armclang &lt;= 6.9</para>
</simplesect>
<simplesect kind="warning"><para>MBEDTLS_SHA256_USE_A64_CRYPTO_IF_PRESENT cannot be defined at the same time as MBEDTLS_SHA256_USE_A64_CRYPTO_ONLY.</para>
</simplesect>
Requires: MBEDTLS_SHA256_C.</para>
<para>Module: library/sha256.c</para>
<para>Uncomment to have the library check for the A64 SHA-256 crypto extensions and use them if available. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3289" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a0ec4393b2d0b0ecb05bda6b0cb39e1f2" prot="public" static="no">
        <name>MBEDTLS_SHA384_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the SHA-384 cryptographic hash algorithm.</para>
<para>Module: library/sha512.c Caller: library/md.c library/psa_crypto_hash.c library/ssl_tls.c library/ssl*_client.c library/ssl*_server.c</para>
<para>Comment to disable SHA-384 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3333" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1adb76d28ffd9734d3643df457857a4424" prot="public" static="no">
        <name>MBEDTLS_SHA512_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable SHA-512 cryptographic hash algorithms.</para>
<para>Module: library/sha512.c Caller: library/entropy.c library/md.c library/ssl_tls.c library/ssl_cookie.c</para>
<para>This module adds support for SHA-512. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3348" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ab3922241a16e40c7eda29ab77be8ed2f" prot="public" static="no">
        <name>MBEDTLS_SHA3_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the SHA3 cryptographic hash algorithm.</para>
<para>Module: library/sha3.c</para>
<para>This module adds support for SHA3. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3359" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1af95522e6cfda8a60b342396c8634abe2" prot="public" static="no">
        <name>MBEDTLS_SHA512_USE_A64_CRYPTO_IF_PRESENT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable acceleration of the SHA-512 and SHA-384 cryptographic hash algorithms with the ARMv8 cryptographic extensions if they are available at runtime. If not, the library will fall back to the C implementation.</para>
<para><simplesect kind="note"><para>If MBEDTLS_SHA512_USE_A64_CRYPTO_IF_PRESENT is defined when building for a non-Aarch64 build it will be silently ignored.</para>
</simplesect>
<simplesect kind="note"><para>Minimum compiler versions for this feature are Clang 7.0, armclang 6.9 or GCC 8.0.</para>
</simplesect>
<simplesect kind="note"><para><computeroutput>CFLAGS</computeroutput> must be set to a minimum of <computeroutput>-march=armv8.2-a+sha3</computeroutput> for armclang 6.9</para>
</simplesect>
<simplesect kind="warning"><para>MBEDTLS_SHA512_USE_A64_CRYPTO_IF_PRESENT cannot be defined at the same time as MBEDTLS_SHA512_USE_A64_CRYPTO_ONLY.</para>
</simplesect>
Requires: MBEDTLS_SHA512_C.</para>
<para>Module: library/sha512.c</para>
<para>Uncomment to have the library check for the A64 SHA-512 crypto extensions and use them if available. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3387" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a6189ba7bc3cd246e23419284de3a1f75" prot="public" static="no">
        <name>MBEDTLS_SSL_CACHE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable simple SSL cache implementation.</para>
<para>Module: library/ssl_cache.c Caller:</para>
<para>Requires: MBEDTLS_SSL_CACHE_C </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3427" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a5c1e2c54608878fd46c1d72880eed9d9" prot="public" static="no">
        <name>MBEDTLS_SSL_COOKIE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable basic implementation of DTLS cookies for hello verification.</para>
<para>Module: library/ssl_cookie.c Caller: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3437" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a0ce8705f94c4fa4b35e818ee72d3cc76" prot="public" static="no">
        <name>MBEDTLS_SSL_TICKET_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable an implementation of TLS server-side callbacks for session tickets.</para>
<para>Module: library/ssl_ticket.c Caller:</para>
<para>Requires: (MBEDTLS_CIPHER_C || MBEDTLS_USE_PSA_CRYPTO) &amp;&amp; (MBEDTLS_GCM_C || MBEDTLS_CCM_C || MBEDTLS_CHACHAPOLY_C) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3450" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a38112435a93c8cf0e9c9e9c15cb3f516" prot="public" static="no">
        <name>MBEDTLS_SSL_CLI_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the SSL/TLS client code.</para>
<para>Module: library/ssl*_client.c Caller:</para>
<para>Requires: MBEDTLS_SSL_TLS_C</para>
<para>This module is required for SSL/TLS client support. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3464" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a311e2a994e4e5f25b550e170ca9605e0" prot="public" static="no">
        <name>MBEDTLS_SSL_SRV_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the SSL/TLS server code.</para>
<para>Module: library/ssl*_server.c Caller:</para>
<para>Requires: MBEDTLS_SSL_TLS_C</para>
<para>This module is required for SSL/TLS server support. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3478" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a85f2821433dbf22916e865a49f2652df" prot="public" static="no">
        <name>MBEDTLS_SSL_TLS_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the generic SSL/TLS code.</para>
<para>Module: library/ssl_tls.c Caller: library/ssl*_client.c library/ssl*_server.c</para>
<para>Requires: MBEDTLS_CIPHER_C, MBEDTLS_MD_C and at least one of the MBEDTLS_SSL_PROTO_XXX defines</para>
<para>This module is required for SSL/TLS. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3494" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a599a23e8bca30ab3fe9ce9151a40f06b" prot="public" static="no">
        <name>MBEDTLS_THREADING_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the threading abstraction layer. By default Mbed TLS assumes it is used in a non-threaded environment or that contexts are not shared between threads. If you do intend to use contexts between threads, you will need to enable this layer to prevent race conditions. See also our Knowledge Base article about threading: <ulink url="https://mbed-tls.readthedocs.io/en/latest/kb/development/thread-safety-and-multi-threading">https://mbed-tls.readthedocs.io/en/latest/kb/development/thread-safety-and-multi-threading</ulink></para>
<para>Module: library/threading.c</para>
<para>This allows different threading implementations (self-implemented or provided).</para>
<para>You will have to enable either MBEDTLS_THREADING_ALT or MBEDTLS_THREADING_PTHREAD.</para>
<para>Enable this layer to allow use of mutexes within Mbed TLS </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3516" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a207ef8366f5c438b28881e473b3ca87f" prot="public" static="no">
        <name>MBEDTLS_TIMING_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the semi-portable timing interface.</para>
<para><simplesect kind="note"><para>The provided implementation only works on POSIX/Unix (including Linux, BSD and OS X) and Windows. On other platforms, you can either disable that module and provide your own implementations of the callbacks needed by <computeroutput><ref refid="ssl_8h_1a335ee78886daf7f8fb369fa925b3cca8" kindref="member">mbedtls_ssl_set_timer_cb()</ref></computeroutput> for DTLS, or leave it enabled and provide your own implementation of the whole module by setting <computeroutput>MBEDTLS_TIMING_ALT</computeroutput> in the current file.</para>
</simplesect>
<simplesect kind="note"><para>The timing module will include time.h on suitable platforms regardless of the setting of MBEDTLS_HAVE_TIME, unless MBEDTLS_TIMING_ALT is used. See timing.c for more information.</para>
</simplesect>
<simplesect kind="note"><para>See also our Knowledge Base article about porting to a new environment: <ulink url="https://mbed-tls.readthedocs.io/en/latest/kb/how-to/how-do-i-port-mbed-tls-to-a-new-environment-OS">https://mbed-tls.readthedocs.io/en/latest/kb/how-to/how-do-i-port-mbed-tls-to-a-new-environment-OS</ulink></para>
</simplesect>
Module: library/timing.c </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3540" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a1d96e634d319f743786c921fb3962497" prot="public" static="no">
        <name>MBEDTLS_VERSION_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable run-time version information.</para>
<para>Module: library/version.c</para>
<para>This module provides run-time version information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3551" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ad377c385a02385defbd866a5b190bba8" prot="public" static="no">
        <name>MBEDTLS_X509_USE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable X.509 core for using certificates.</para>
<para>Module: library/x509.c Caller: library/x509_crl.c library/x509_crt.c library/x509_csr.c</para>
<para>Requires: MBEDTLS_ASN1_PARSE_C, MBEDTLS_BIGNUM_C, MBEDTLS_OID_C, MBEDTLS_PK_PARSE_C, (MBEDTLS_MD_C or MBEDTLS_USE_PSA_CRYPTO)</para>
<para><simplesect kind="warning"><para>If building with MBEDTLS_USE_PSA_CRYPTO, you must call <ref refid="group__initialization_1ga2de150803fc2f7dc6101d5af7e921dd9" kindref="member">psa_crypto_init()</ref> before doing any X.509 operation.</para>
</simplesect>
This module is required for the X.509 parsing modules. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3571" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a813d4cf0b3fc03db0f9dbec52ba04b40" prot="public" static="no">
        <name>MBEDTLS_X509_CRT_PARSE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable X.509 certificate parsing.</para>
<para>Module: library/x509_crt.c Caller: library/ssl_tls.c library/ssl*_client.c library/ssl*_server.c</para>
<para>Requires: MBEDTLS_X509_USE_C</para>
<para>This module is required for X.509 certificate parsing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3587" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ad5a3f68b02887cc6df09d6eb1730b697" prot="public" static="no">
        <name>MBEDTLS_X509_CRL_PARSE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable X.509 CRL parsing.</para>
<para>Module: library/x509_crl.c Caller: library/x509_crt.c</para>
<para>Requires: MBEDTLS_X509_USE_C</para>
<para>This module is required for X.509 CRL parsing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3601" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a9c71c72a85d3974200c96795c991d14e" prot="public" static="no">
        <name>MBEDTLS_X509_CSR_PARSE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable X.509 Certificate Signing Request (CSR) parsing.</para>
<para>Module: library/x509_csr.c Caller: library/x509_crt_write.c</para>
<para>Requires: MBEDTLS_X509_USE_C</para>
<para>This module is used for reading X.509 certificate request. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3615" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1ada343519ead4d60568eeda89b8b2e38d" prot="public" static="no">
        <name>MBEDTLS_X509_CREATE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable X.509 core for creating certificates.</para>
<para>Module: library/x509_create.c</para>
<para>Requires: MBEDTLS_BIGNUM_C, MBEDTLS_OID_C, MBEDTLS_PK_PARSE_C, (MBEDTLS_MD_C or MBEDTLS_USE_PSA_CRYPTO)</para>
<para><simplesect kind="warning"><para>If building with MBEDTLS_USE_PSA_CRYPTO, you must call <ref refid="group__initialization_1ga2de150803fc2f7dc6101d5af7e921dd9" kindref="member">psa_crypto_init()</ref> before doing any X.509 create operation.</para>
</simplesect>
This module is the basis for creating X.509 certificates and CSRs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3632" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a6a0558894f9b352d84cdcbf284bc395b" prot="public" static="no">
        <name>MBEDTLS_X509_CRT_WRITE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable creating X.509 certificates.</para>
<para>Module: library/x509_crt_write.c</para>
<para>Requires: MBEDTLS_X509_CREATE_C</para>
<para>This module is required for X.509 certificate creation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3645" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3645" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mbedtls__config_8h_1a2aabd723030209c1eba787c33143f05a" prot="public" static="no">
        <name>MBEDTLS_X509_CSR_WRITE_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable creating X.509 Certificate Signing Requests (CSR).</para>
<para>Module: library/x509_csr_write.c</para>
<para>Requires: MBEDTLS_X509_CREATE_C</para>
<para>This module is required for X.509 certificate request writing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" line="3658" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h" bodystart="3658" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Configuration options (set of defines) </para>
    </briefdescription>
    <detaileddescription>
<para>This set of compile-time options may be used to enable or disable features selectively, and reduce the global memory footprint. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>The<sp/>Mbed<sp/>TLS<sp/>Contributors</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-License-Identifier:<sp/>Apache-2.0<sp/>OR<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">//#define<sp/>MBEDTLS_CONFIG_VERSION<sp/>0x03000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="mbedtls__config_8h_1a6eb06bd9262371cafc5e51e40285d4bb" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_HAVE_ASM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="comment">//#define<sp/>MBEDTLS_NO_UDBL_DIVISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="comment">//#define<sp/>MBEDTLS_NO_64BIT_MULTIPLICATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="comment">//#define<sp/>MBEDTLS_HAVE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="mbedtls__config_8h_1a0d2a3e0e00f099a570fa56a0c4cf0d35" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_HAVE_TIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="mbedtls__config_8h_1a6309908be96df5277599f10d22bd91b7" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_HAVE_TIME_DATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="mbedtls__config_8h_1ae58dba1b4a4c30f8c4d2f0e6080351af" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PLATFORM_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_NO_STD_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="mbedtls__config_8h_1ad35d2e4db2d939fde391d4f0ed9ead6c" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PLATFORM_SETBUF_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="mbedtls__config_8h_1a2a65f769524672f1adaf40a037a35fa7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PLATFORM_EXIT_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="mbedtls__config_8h_1a6df1ea4414dedc34a5ce96b9d559c571" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PLATFORM_TIME_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="mbedtls__config_8h_1ad3290b9fc6639dc09d441dd71fd45f96" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PLATFORM_FPRINTF_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="mbedtls__config_8h_1ad8c34317956c63e2216be18a3591e955" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PLATFORM_PRINTF_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="mbedtls__config_8h_1aa17da3c87f84b41b6ac802b6cef4aeb5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PLATFORM_SNPRINTF_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="mbedtls__config_8h_1a48877504d5a51d67d92e3ad862d7d5c0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PLATFORM_VSNPRINTF_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="mbedtls__config_8h_1a02ef63e60ce6880cda2e9393bf9d5f4f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_PLATFORM_NV_SEED_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_SETUP_TEARDOWN_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_MS_TIME_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_GMTIME_R_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_ZEROIZE_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="comment">//#define<sp/>MBEDTLS_DEPRECATED_WARNING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="comment">//#define<sp/>MBEDTLS_DEPRECATED_REMOVED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="comment">//#define<sp/>MBEDTLS_TIMING_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="comment">//#define<sp/>MBEDTLS_AES_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ARIA_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_CAMELLIA_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_CCM_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_CHACHA20_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_CHACHAPOLY_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_CMAC_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_DES_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_DHM_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECJPAKE_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_GCM_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_NIST_KW_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_MD5_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_POLY1305_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_RIPEMD160_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_RSA_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_SHA1_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_SHA256_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_SHA512_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/>When<sp/>replacing<sp/>the<sp/>elliptic<sp/>curve<sp/>module,<sp/>please<sp/>consider,<sp/>that<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/>implemented<sp/>with<sp/>two<sp/>.c<sp/>files:</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>ecp.c</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>ecp_curves.c</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>replace<sp/>them<sp/>very<sp/>much<sp/>like<sp/>all<sp/>the<sp/>other<sp/>MBEDTLS__MODULE_NAME__ALT</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*<sp/>macros<sp/>as<sp/>described<sp/>above.<sp/>The<sp/>only<sp/>difference<sp/>is<sp/>that<sp/>you<sp/>have<sp/>to<sp/>make<sp/>sure</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*<sp/>that<sp/>you<sp/>provide<sp/>functionality<sp/>for<sp/>both<sp/>.c<sp/>files.</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECP_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="comment">//#define<sp/>MBEDTLS_MD5_PROCESS_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_RIPEMD160_PROCESS_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_SHA1_PROCESS_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_SHA256_PROCESS_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_SHA512_PROCESS_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_DES_SETKEY_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_DES_CRYPT_ECB_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_DES3_CRYPT_ECB_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_AES_SETKEY_ENC_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_AES_SETKEY_DEC_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_AES_ENCRYPT_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_AES_DECRYPT_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECDH_GEN_PUBLIC_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECDH_COMPUTE_SHARED_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECDSA_VERIFY_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECDSA_SIGN_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECDSA_GENKEY_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="comment">/*<sp/>Required<sp/>for<sp/>all<sp/>the<sp/>functions<sp/>in<sp/>this<sp/>section<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECP_INTERNAL_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Turn<sp/>off<sp/>software<sp/>fallback<sp/>for<sp/>curves<sp/>not<sp/>supported<sp/>in<sp/>hardware<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECP_NO_FALLBACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Support<sp/>for<sp/>Weierstrass<sp/>curves<sp/>with<sp/>Jacobi<sp/>representation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECP_RANDOMIZE_JAC_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECP_ADD_MIXED_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECP_DOUBLE_JAC_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECP_NORMALIZE_JAC_MANY_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECP_NORMALIZE_JAC_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Support<sp/>for<sp/>curves<sp/>with<sp/>Montgomery<sp/>arithmetic<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECP_DOUBLE_ADD_MXZ_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECP_RANDOMIZE_MXZ_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECP_NORMALIZE_MXZ_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="comment">//#define<sp/>MBEDTLS_ENTROPY_HARDWARE_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="mbedtls__config_8h_1aa0aaa3f0466b5ae15ff9bf176f632a3d" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_AES_ROM_TABLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="mbedtls__config_8h_1a8099f25dc31d0f01f82482ede7906a94" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_AES_FEWER_TABLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="comment">//#define<sp/>MBEDTLS_AES_ONLY_128_BIT_KEY_LENGTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/>*<sp/>Disable<sp/>plain<sp/>C<sp/>implementation<sp/>for<sp/>AES.</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/>*<sp/>When<sp/>the<sp/>plain<sp/>C<sp/>implementation<sp/>is<sp/>enabled,<sp/>and<sp/>an<sp/>implementation<sp/>using<sp/>a</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>*<sp/>special<sp/>CPU<sp/>feature<sp/>(such<sp/>as<sp/>MBEDTLS_AESCE_C)<sp/>is<sp/>also<sp/>enabled,<sp/>runtime</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*<sp/>detection<sp/>will<sp/>be<sp/>used<sp/>to<sp/>select<sp/>between<sp/>them.</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>*<sp/>If<sp/>only<sp/>one<sp/>implementation<sp/>is<sp/>present,<sp/>runtime<sp/>detection<sp/>will<sp/>not<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>*<sp/>This<sp/>configuration<sp/>will<sp/>crash<sp/>at<sp/>runtime<sp/>if<sp/>running<sp/>on<sp/>a<sp/>CPU<sp/>without<sp/>the</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/>*<sp/>necessary<sp/>features.<sp/>It<sp/>will<sp/>not<sp/>build<sp/>unless<sp/>at<sp/>least<sp/>one<sp/>of<sp/>MBEDTLS_AESCE_C</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/>*<sp/>and/or<sp/>MBEDTLS_AESNI_C<sp/>is<sp/>enabled<sp/>&amp;<sp/>present<sp/>in<sp/>the<sp/>build.</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_AES_USE_HARDWARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="623" refid="mbedtls__config_8h_1a20e18a582cad78b9b45868de1edbd513" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CAMELLIA_SMALL_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="646" refid="mbedtls__config_8h_1a9b119eb50a9fca70aef16b75792c9fd1" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CHECK_RETURN_WARNING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="mbedtls__config_8h_1ae0290beb1dc98ac21d930144d34ae2d0" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CIPHER_MODE_CBC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="660" refid="mbedtls__config_8h_1a0bd3991e40ebd9db3b29ba327f4e6d54" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CIPHER_MODE_CFB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="667" refid="mbedtls__config_8h_1a5bc21fd94f62fae79688ad096ef5c2d8" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CIPHER_MODE_CTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="674" refid="mbedtls__config_8h_1a5c8409c489e8b6038c4fe2c45fb14e72" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CIPHER_MODE_OFB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="mbedtls__config_8h_1aa5d15e01fd572d3e47fa051a6ebdeee3" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CIPHER_MODE_XTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="mbedtls__config_8h_1a83cc0903ed6bb07061aa0f5c0e5b0382" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CIPHER_NULL_CIPHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="726" refid="mbedtls__config_8h_1a0f53acf64658fe68c1e532a9434c31f0" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CIPHER_PADDING_PKCS7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727" refid="mbedtls__config_8h_1ae97ea80bdee414503dbc0f9927aa4f78" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="mbedtls__config_8h_1abf958fb428f93be154b13d074821a850" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729" refid="mbedtls__config_8h_1a80b6971fec5fcd09de71ada9ab6f53c2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_CIPHER_PADDING_ZEROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="comment">//#define<sp/>MBEDTLS_CTR_DRBG_USE_128_BIT_KEY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="comment">//#define<sp/>MBEDTLS_ECDH_VARIANT_EVEREST_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="comment">/*<sp/>Short<sp/>Weierstrass<sp/>curves<sp/>(supporting<sp/>ECP,<sp/>ECDH,<sp/>ECDSA)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760" refid="mbedtls__config_8h_1a8c45e2be551b48e4feb1453fff99b8d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_DP_SECP192R1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761" refid="mbedtls__config_8h_1a53ca938afec54658ef4b643c60ed617c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_DP_SECP224R1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762" refid="mbedtls__config_8h_1aa7661e25bab8f0e87060ee05f1216fe4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_DP_SECP256R1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763" refid="mbedtls__config_8h_1a8d7d810065d58b237787c6749b7ef232" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_DP_SECP384R1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764" refid="mbedtls__config_8h_1a0afb3cbe18e3ad5abde001c32f319d12" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_DP_SECP521R1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765" refid="mbedtls__config_8h_1a3a85a85a23a2b5935e97d400d224eac5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_DP_SECP192K1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766" refid="mbedtls__config_8h_1a056eb2e0e44147c2df7ec5a4c0c8b152" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_DP_SECP224K1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767" refid="mbedtls__config_8h_1a5234a2a9d84b7b6c8de05f1494ead4d7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_DP_SECP256K1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768" refid="mbedtls__config_8h_1abc22a5b0870dd8ff1b38cdce1423b0ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_DP_BP256R1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769" refid="mbedtls__config_8h_1a980c4064e72ef188840d9b0a68d2e85e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_DP_BP384R1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770" refid="mbedtls__config_8h_1afd338008d2ae25ba0dba0c07ba1e2482" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_DP_BP512R1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Montgomery<sp/>curves<sp/>(supporting<sp/>ECP)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772" refid="mbedtls__config_8h_1a7bb6872451a7b080abda9d489bd56826" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_DP_CURVE25519_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773" refid="mbedtls__config_8h_1a01106318909806638cccf73891b9a539" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_DP_CURVE448_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="784" refid="mbedtls__config_8h_1a6c2a0ec24ee2e843114131f1087653cf" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_NIST_OPTIM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="839" refid="mbedtls__config_8h_1a6d48573b52280bc7f0133f85ee29bfd7" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_RESTARTABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="comment">//#define<sp/>MBEDTLS_ECP_WITH_MPI_UINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="861" refid="mbedtls__config_8h_1adba50fdb786e1708b3360bd04bb77bd1" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ECDSA_DETERMINISTIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="881" refid="mbedtls__config_8h_1ad40b43f5e34794970572576ef3984bae" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_KEY_EXCHANGE_PSK_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="910" refid="mbedtls__config_8h_1a749b1e8d58e6787c8914106ef02b43ff" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_KEY_EXCHANGE_DHE_PSK_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="928" refid="mbedtls__config_8h_1af3f5e018957fb1375a4d305efe8fd67a" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="951" refid="mbedtls__config_8h_1a44368acdc70ca47e98700c023ac88840" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_KEY_EXCHANGE_RSA_PSK_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="976" refid="mbedtls__config_8h_1a4e31bcb46f4cd29deced2ef3ef6a8925" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_KEY_EXCHANGE_RSA_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008" refid="mbedtls__config_8h_1a0aaa13268bc8e4e74076e1dc4828f79d" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033" refid="mbedtls__config_8h_1a323959c9c447de38e9db7cd7ed733e75" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057" refid="mbedtls__config_8h_1a17ad52b9c597d50d6bab1557e96dd2e2" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081" refid="mbedtls__config_8h_1a4c1339e693a493a5b28957ee84a78a39" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105" refid="mbedtls__config_8h_1aa21769532291089a98bb9051516709c6" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128" refid="mbedtls__config_8h_1ac9580ac865324c142232c3e0bc654e14" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142" refid="mbedtls__config_8h_1a6d2d68f07e8d1b00d1e6f47d162cedc9" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_PARSE_EC_EXTENDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155" refid="mbedtls__config_8h_1a559d8c5a37901284b4fd642ae7c46006" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_PARSE_EC_COMPRESSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170" refid="mbedtls__config_8h_1a6382cfe1b528f3382248b1d746418865" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ERROR_STRERROR_DUMMY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179" refid="mbedtls__config_8h_1a6bad7f4050b2dd6ea1d2b498f5b548d9" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_GENPRIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186" refid="mbedtls__config_8h_1a29dbd0110b545e25201e3babd907738d" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_FS_IO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="comment">//#define<sp/>MBEDTLS_NO_DEFAULT_ENTROPY_SOURCES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="comment">//#define<sp/>MBEDTLS_NO_PLATFORM_ENTROPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="comment">//#define<sp/>MBEDTLS_ENTROPY_FORCE_SHA256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253" refid="mbedtls__config_8h_1aa0d53f9505ee880893fdfee416931b38" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ENTROPY_NV_SEED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MBEDTLS_PSA_CRYPTO_KEY_ID_ENCODES_OWNER</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1257"><highlight class="comment"><sp/>*<sp/>Enable<sp/>key<sp/>identifiers<sp/>that<sp/>encode<sp/>a<sp/>key<sp/>owner<sp/>identifier.</highlight></codeline>
<codeline lineno="1258"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/>*<sp/>The<sp/>owner<sp/>of<sp/>a<sp/>key<sp/>is<sp/>identified<sp/>by<sp/>a<sp/>value<sp/>of<sp/>type<sp/>::mbedtls_key_owner_id_t</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/>*<sp/>which<sp/>is<sp/>currently<sp/>hard-coded<sp/>to<sp/>be<sp/>int32_t.</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1262"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>this<sp/>option<sp/>is<sp/>meant<sp/>for<sp/>internal<sp/>use<sp/>only<sp/>and<sp/>may<sp/>be<sp/>removed</highlight></codeline>
<codeline lineno="1263"><highlight class="comment"><sp/>*<sp/>without<sp/>notice.</highlight></codeline>
<codeline lineno="1264"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PSA_CRYPTO_KEY_ID_ENCODES_OWNER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="comment">//#define<sp/>MBEDTLS_MEMORY_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="comment">//#define<sp/>MBEDTLS_MEMORY_BACKTRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299" refid="mbedtls__config_8h_1a62e934fe1c7e54c9342fe5d84d3ea888" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_RSA_ALT_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310" refid="mbedtls__config_8h_1ab9ff33e1da5c1afaf8ce3fc47ab8d577" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PKCS1_V15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324" refid="mbedtls__config_8h_1a45f7284cdb45e4505ff79bd40116c338" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PKCS1_V21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340" refid="mbedtls__config_8h_1a1bd8bee51fb122e552a4cbc1bbdb0b96" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PSA_CRYPTO_BUILTIN_KEYS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356" refid="mbedtls__config_8h_1ab935ee7c6dc4ea860d54b192cccbc00a" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PSA_CRYPTO_CLIENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="comment">//#define<sp/>MBEDTLS_PSA_CRYPTO_EXTERNAL_RNG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="comment">//#define<sp/>MBEDTLS_PSA_CRYPTO_SPM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="comment">//#define<sp/>MBEDTLS_PSA_P256M_DRIVER_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="comment">//#define<sp/>MBEDTLS_PSA_INJECT_ENTROPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="comment">//#define<sp/>MBEDTLS_RSA_NO_CRT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487" refid="mbedtls__config_8h_1ad70d6eb71def154fc4cefa0d0ec90d96" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SELF_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503" refid="mbedtls__config_8h_1a37056e26ff582813ab505fa8e59287b6" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SHA256_SMALLER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513" refid="mbedtls__config_8h_1ad1ff9b338931f938b066845c64eb5830" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SHA512_SMALLER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527" refid="mbedtls__config_8h_1a0c0ea1b637ed407466a3788ff622423b" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_ALL_ALERT_MESSAGES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551" refid="mbedtls__config_8h_1af5ed31b295ab56e45ceab4f17329c6ec" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_DTLS_CONNECTION_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574" refid="mbedtls__config_8h_1af5421935540ecb6481a392528e20e9a4" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_DTLS_CONNECTION_ID_COMPAT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586" refid="mbedtls__config_8h_1a57548c9328e88a99a521f8b756ac64ed" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_ASYNC_PRIVATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615" refid="mbedtls__config_8h_1a224be1876a20bb15c554a06c174101df" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_CONTEXT_SERIALIZATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631" refid="mbedtls__config_8h_1a7f7e00e92f146c9248dfcb2f4c9debfc" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_DEBUG_ALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647" refid="mbedtls__config_8h_1a80e8e0fb5fea758fa451d1268201aded" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_ENCRYPT_THEN_MAC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663" refid="mbedtls__config_8h_1a1fbd7ec4862c3563163614e0900e7f31" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_EXTENDED_MASTER_SECRET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687" refid="mbedtls__config_8h_1ae46bbbec93735b6d601991c5ff22b767" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_KEEP_PEER_CERTIFICATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711" refid="mbedtls__config_8h_1a313f12fd8fd65b5c831a912808133140" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_RENEGOTIATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720" refid="mbedtls__config_8h_1a82777395be62d667a657dc1372d6b975" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_MAX_FRAGMENT_LENGTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="comment">//#define<sp/>MBEDTLS_SSL_RECORD_SIZE_LIMIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753" refid="mbedtls__config_8h_1a8a7aca10569198cf8e8dbff1c40677c6" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_PROTO_TLS1_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1777" refid="mbedtls__config_8h_1a506f9100cba4cfd5d8caa306fbd6d78b" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_PROTO_TLS1_3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799" refid="mbedtls__config_8h_1a4eaec932ebcc774c4c1ab0009883ac17" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1811" refid="mbedtls__config_8h_1a5190a81e733ec8d92933ddd5860403bf" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829" refid="mbedtls__config_8h_1ae617d4fcb6b7591d37f4d669e4b633dc" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1843" refid="mbedtls__config_8h_1a48e6f0ce6a0f8e2b2a63868bfcd3a4bd" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864" refid="mbedtls__config_8h_1acf992e5b82b4bc8fe7e666a58472c389" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_EARLY_DATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877" refid="mbedtls__config_8h_1ad7a9f2592e4e3475274a18b561e086ce" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_PROTO_DTLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886" refid="mbedtls__config_8h_1a8d8dcefd8e95b10d757d1fd92623b283" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_ALPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1901" refid="mbedtls__config_8h_1a3a74b34386b00896b50e2809d2b5bbfc" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_DTLS_ANTI_REPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1919" refid="mbedtls__config_8h_1ad60d011e349df1b96ef40ee48619699d" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_DTLS_HELLO_VERIFY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1950" refid="mbedtls__config_8h_1a0689743c1010e1cf9ca49053352b9cd1" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_DTLS_SRTP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966" refid="mbedtls__config_8h_1ae7ea521806ace1971c7050a332693c5a" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1980" refid="mbedtls__config_8h_1a6751e31291b388713f5b611a9694d4e7" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_SESSION_TICKETS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1991" refid="mbedtls__config_8h_1ab69f58bd04df63c09ffaa435baa47bf7" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_SERVER_NAME_INDICATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001" refid="mbedtls__config_8h_1a9c096cdfc72f710061b5f4d8f5edd88b" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="comment">//#define<sp/>MBEDTLS_TEST_CONSTANT_FLOW_MEMSAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="comment">//#define<sp/>MBEDTLS_TEST_CONSTANT_FLOW_VALGRIND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2057" refid="mbedtls__config_8h_1a17fd090aed0539bb286eaf949d4714ac" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_TEST_HOOKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="comment">//#define<sp/>MBEDTLS_THREADING_ALT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079" refid="mbedtls__config_8h_1aa63c4047f878fda72db99162c13a328f" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_THREADING_PTHREAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109" refid="mbedtls__config_8h_1a70fd7b97d5f11170546583f2095942a6" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_USE_PSA_CRYPTO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141" refid="mbedtls__config_8h_1a5aca5ddcffb586acad82f9aef26db056" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PSA_CRYPTO_CONFIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2154" refid="mbedtls__config_8h_1a9695236b5192ac4a15afe1681adbb990" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_VERSION_FEATURES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2175" refid="mbedtls__config_8h_1a6d767be4cc0658c87771cc22418138bd" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_X509_TRUSTED_CERTIFICATE_CALLBACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="comment">//#define<sp/>MBEDTLS_X509_REMOVE_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196" refid="mbedtls__config_8h_1a0510bbca604b868f3150a38f65623e8b" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_X509_RSASSA_PSS_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236" refid="mbedtls__config_8h_1ab3bca0048342cf2789e7d170548ff3a5" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_AESNI_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260" refid="mbedtls__config_8h_1a509e3410ce73c63d2c18e680dfb67cb6" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_AESCE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335" refid="mbedtls__config_8h_1a54a11655ee76cbd7b4d8b159e377adef" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_AES_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight></codeline>
<codeline lineno="2349" refid="mbedtls__config_8h_1ab6d2cedeb9ad2d5f11e008708c922a7d" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ASN1_PARSE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight></codeline>
<codeline lineno="2363" refid="mbedtls__config_8h_1a79098f46901a7da949424ca81fcb4be2" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ASN1_WRITE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375" refid="mbedtls__config_8h_1a95e58aa3f6b5391f9fc423b3809cf9a4" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_BASE64_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"></highlight></codeline>
<codeline lineno="2395" refid="mbedtls__config_8h_1a1cceb2b05fcbf777d24948d63a1aa74c" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_BIGNUM_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight></codeline>
<codeline lineno="2450" refid="mbedtls__config_8h_1a0c207f9b12519686ffb8a22d656f7289" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CAMELLIA_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight></codeline>
<codeline lineno="2502" refid="mbedtls__config_8h_1ab674e244fd8131e3dc1d5e18cd5c1e16" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ARIA_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517" refid="mbedtls__config_8h_1af1b8731adc061cf1cc1826035e32e941" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CCM_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight></codeline>
<codeline lineno="2526" refid="mbedtls__config_8h_1acdb992313a04115aa608de67392880de" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CHACHA20_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"></highlight></codeline>
<codeline lineno="2537" refid="mbedtls__config_8h_1aa058d643c79d5eae4b92a1a0d5232e13" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CHACHAPOLY_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight></codeline>
<codeline lineno="2559" refid="mbedtls__config_8h_1a4a186eda38ce80f484524f3f12de2923" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CIPHER_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight></codeline>
<codeline lineno="2577" refid="mbedtls__config_8h_1a44adbf6ab596bdbcff486313978eee04" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CMAC_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight></codeline>
<codeline lineno="2599" refid="mbedtls__config_8h_1a493cf54dbd2c093c8541b1ad106436e9" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_CTR_DRBG_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight></codeline>
<codeline lineno="2614" refid="mbedtls__config_8h_1ac64f663ce793cda3cc14e5a300e30a65" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_DEBUG_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"></highlight></codeline>
<codeline lineno="2630" refid="mbedtls__config_8h_1a6cf0e4c49c7f61321d1e8f2cfb2c9ab9" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_DES_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"></highlight></codeline>
<codeline lineno="2652" refid="mbedtls__config_8h_1ae6058d084fccdc95cce6de3b5e46b367" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_DHM_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"></highlight></codeline>
<codeline lineno="2670" refid="mbedtls__config_8h_1aa3615295cbab56882c919eb9cf79fe10" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ECDH_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight></codeline>
<codeline lineno="2687" refid="mbedtls__config_8h_1ac5796bd242fe0f33d66f9e2cc3c2b490" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ECDSA_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight></codeline>
<codeline lineno="2709" refid="mbedtls__config_8h_1af4c97c30b6084ceb60392781b93c9f58" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ECJPAKE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"></highlight></codeline>
<codeline lineno="2723" refid="mbedtls__config_8h_1ae9d24fd58758d905e43ace39f9798b46" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ECP_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight></codeline>
<codeline lineno="2737" refid="mbedtls__config_8h_1a24884ce4da3fed0ceff29962dd7a01fc" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ENTROPY_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight></codeline>
<codeline lineno="2749" refid="mbedtls__config_8h_1a8d615f5d4143f300c13c9f6fec1fb17a" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ERROR_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764" refid="mbedtls__config_8h_1a1302769eb08072aaf2d8cd6ca9ac206b" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_GCM_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"></highlight></codeline>
<codeline lineno="2779" refid="mbedtls__config_8h_1aa046c86ba7c3101e5128ccac09128a71" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_HKDF_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"></highlight></codeline>
<codeline lineno="2793" refid="mbedtls__config_8h_1a3ddaec887496f6a2b18975d52afc87d5" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_HMAC_DRBG_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2794"><highlight class="normal"></highlight></codeline>
<codeline lineno="2807" refid="mbedtls__config_8h_1aa15d2538251a7b4ec68e9e160540a44a" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_LMS_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"></highlight></codeline>
<codeline lineno="2819" refid="mbedtls__config_8h_1a8b152b74f793230b7c50af3b9dd5a269" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_LMS_PRIVATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"></highlight></codeline>
<codeline lineno="2832" refid="mbedtls__config_8h_1a0c096eeabeb4b6080ac40c4f89498731" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_NIST_KW_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"></highlight></codeline>
<codeline lineno="2865" refid="mbedtls__config_8h_1a17195cf7384dbcab5bae3f1d2971fb03" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_MD_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight></codeline>
<codeline lineno="2886" refid="mbedtls__config_8h_1a76686ebb937ad5cc1623638965c4bc22" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_MD5_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"></highlight></codeline>
<codeline lineno="2902"><highlight class="comment">//#define<sp/>MBEDTLS_MEMORY_BUFFER_ALLOC_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"></highlight></codeline>
<codeline lineno="2921" refid="mbedtls__config_8h_1ae73dbeb395510070a756ed6689459b30" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_NET_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"></highlight></codeline>
<codeline lineno="2944" refid="mbedtls__config_8h_1a0960129d0cf6e043a1cbc7c41d7c2297" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_OID_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"></highlight></codeline>
<codeline lineno="2958" refid="mbedtls__config_8h_1a47e6357c250060fd78ba8c17b1b5a55d" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PADLOCK_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight></codeline>
<codeline lineno="2980" refid="mbedtls__config_8h_1ac90a92552ac2f87c701b24857fd6d4c1" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PEM_PARSE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"></highlight></codeline>
<codeline lineno="2996" refid="mbedtls__config_8h_1a6f285fd8cf87b2169373154d219011a6" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PEM_WRITE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"></highlight></codeline>
<codeline lineno="3014" refid="mbedtls__config_8h_1a0dcc79b4e757e34d2a625470fb016e18" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"></highlight></codeline>
<codeline lineno="3029" refid="mbedtls__config_8h_1a09eefef8f4562ba86a9c7a47c114ddaa" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_PARSE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3030"><highlight class="normal"></highlight></codeline>
<codeline lineno="3043" refid="mbedtls__config_8h_1a6ec5fb843794dcbfa6e27e5b62bd1c29" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PK_WRITE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3044"><highlight class="normal"></highlight></codeline>
<codeline lineno="3060" refid="mbedtls__config_8h_1a2d9853334811c4e2220fb5c6266e908e" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PKCS5_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"></highlight></codeline>
<codeline lineno="3076" refid="mbedtls__config_8h_1a13e9242b1f331966929aa4a6f689de3c" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PKCS7_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight></codeline>
<codeline lineno="3095" refid="mbedtls__config_8h_1a66477e50d4c1e5cf01f3f63010596c1f" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PKCS12_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight></codeline>
<codeline lineno="3115" refid="mbedtls__config_8h_1a756fb086e76be2a76954beb682195a49" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PLATFORM_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3116"><highlight class="normal"></highlight></codeline>
<codeline lineno="3125" refid="mbedtls__config_8h_1a64fd6228228da29393d954679621be75" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_POLY1305_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3126"><highlight class="normal"></highlight></codeline>
<codeline lineno="3140" refid="mbedtls__config_8h_1a7035fab808a098a76627fb4d466e3b21" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PSA_CRYPTO_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3141"><highlight class="normal"></highlight></codeline>
<codeline lineno="3156" refid="mbedtls__config_8h_1a7d31bdc8946b87038702628ba1f60e8c" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PSA_CRYPTO_SE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3157"><highlight class="normal"></highlight></codeline>
<codeline lineno="3169" refid="mbedtls__config_8h_1ac6762bbebb75d81d4a3dc663bf948b75" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PSA_CRYPTO_STORAGE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"></highlight></codeline>
<codeline lineno="3181" refid="mbedtls__config_8h_1a743014c310cbb4a00d3eacfcac625564" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_PSA_ITS_FILE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight></codeline>
<codeline lineno="3192" refid="mbedtls__config_8h_1af4366a787d9164355c3206f27c6bb036" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_RIPEMD160_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"></highlight></codeline>
<codeline lineno="3212" refid="mbedtls__config_8h_1a035227f1c3c88103fdb13621e9a5df51" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_RSA_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"></highlight></codeline>
<codeline lineno="3231" refid="mbedtls__config_8h_1af0a5a26171b8cc9ba46b9775cf56b541" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SHA1_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3232"><highlight class="normal"></highlight></codeline>
<codeline lineno="3244" refid="mbedtls__config_8h_1ad9ce2492f61eae86103d3e9ed90fd72e" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SHA224_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight></codeline>
<codeline lineno="3261" refid="mbedtls__config_8h_1a8cc51fc9b077f5b669bc4dfba0bde43e" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SHA256_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"></highlight></codeline>
<codeline lineno="3289" refid="mbedtls__config_8h_1ad4ceff6d1d341dee2f4713dd02aa27e1" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SHA256_USE_A64_CRYPTO_IF_PRESENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"></highlight></codeline>
<codeline lineno="3317"><highlight class="comment">//#define<sp/>MBEDTLS_SHA256_USE_A64_CRYPTO_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3318"><highlight class="normal"></highlight></codeline>
<codeline lineno="3333" refid="mbedtls__config_8h_1a0ec4393b2d0b0ecb05bda6b0cb39e1f2" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SHA384_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"></highlight></codeline>
<codeline lineno="3348" refid="mbedtls__config_8h_1adb76d28ffd9734d3643df457857a4424" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SHA512_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3349"><highlight class="normal"></highlight></codeline>
<codeline lineno="3359" refid="mbedtls__config_8h_1ab3922241a16e40c7eda29ab77be8ed2f" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SHA3_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"></highlight></codeline>
<codeline lineno="3387" refid="mbedtls__config_8h_1af95522e6cfda8a60b342396c8634abe2" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SHA512_USE_A64_CRYPTO_IF_PRESENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3388"><highlight class="normal"></highlight></codeline>
<codeline lineno="3415"><highlight class="comment">//#define<sp/>MBEDTLS_SHA512_USE_A64_CRYPTO_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3416"><highlight class="normal"></highlight></codeline>
<codeline lineno="3427" refid="mbedtls__config_8h_1a6189ba7bc3cd246e23419284de3a1f75" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_CACHE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"></highlight></codeline>
<codeline lineno="3437" refid="mbedtls__config_8h_1a5c1e2c54608878fd46c1d72880eed9d9" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_COOKIE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3438"><highlight class="normal"></highlight></codeline>
<codeline lineno="3450" refid="mbedtls__config_8h_1a0ce8705f94c4fa4b35e818ee72d3cc76" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_TICKET_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3451"><highlight class="normal"></highlight></codeline>
<codeline lineno="3464" refid="mbedtls__config_8h_1a38112435a93c8cf0e9c9e9c15cb3f516" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_CLI_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3465"><highlight class="normal"></highlight></codeline>
<codeline lineno="3478" refid="mbedtls__config_8h_1a311e2a994e4e5f25b550e170ca9605e0" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_SRV_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3479"><highlight class="normal"></highlight></codeline>
<codeline lineno="3494" refid="mbedtls__config_8h_1a85f2821433dbf22916e865a49f2652df" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_SSL_TLS_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"></highlight></codeline>
<codeline lineno="3516" refid="mbedtls__config_8h_1a599a23e8bca30ab3fe9ce9151a40f06b" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_THREADING_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"></highlight></codeline>
<codeline lineno="3540" refid="mbedtls__config_8h_1a207ef8366f5c438b28881e473b3ca87f" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_TIMING_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"></highlight></codeline>
<codeline lineno="3551" refid="mbedtls__config_8h_1a1d96e634d319f743786c921fb3962497" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_VERSION_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3552"><highlight class="normal"></highlight></codeline>
<codeline lineno="3571" refid="mbedtls__config_8h_1ad377c385a02385defbd866a5b190bba8" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_X509_USE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"></highlight></codeline>
<codeline lineno="3587" refid="mbedtls__config_8h_1a813d4cf0b3fc03db0f9dbec52ba04b40" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_X509_CRT_PARSE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3588"><highlight class="normal"></highlight></codeline>
<codeline lineno="3601" refid="mbedtls__config_8h_1ad5a3f68b02887cc6df09d6eb1730b697" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_X509_CRL_PARSE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"></highlight></codeline>
<codeline lineno="3615" refid="mbedtls__config_8h_1a9c71c72a85d3974200c96795c991d14e" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_X509_CSR_PARSE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"></highlight></codeline>
<codeline lineno="3632" refid="mbedtls__config_8h_1ada343519ead4d60568eeda89b8b2e38d" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_X509_CREATE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight></codeline>
<codeline lineno="3645" refid="mbedtls__config_8h_1a6a0558894f9b352d84cdcbf284bc395b" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_X509_CRT_WRITE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3646"><highlight class="normal"></highlight></codeline>
<codeline lineno="3658" refid="mbedtls__config_8h_1a2aabd723030209c1eba787c33143f05a" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_X509_CSR_WRITE_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="comment">//#define<sp/>MBEDTLS_CONFIG_FILE<sp/>&quot;mbedtls/mbedtls_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"></highlight></codeline>
<codeline lineno="3705"><highlight class="comment">//#define<sp/>MBEDTLS_USER_CONFIG_FILE<sp/>&quot;/dev/null&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3706"><highlight class="normal"></highlight></codeline>
<codeline lineno="3723"><highlight class="comment">//#define<sp/>MBEDTLS_PSA_CRYPTO_CONFIG_FILE<sp/>&quot;psa/crypto_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3724"><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="comment">//#define<sp/>MBEDTLS_PSA_CRYPTO_USER_CONFIG_FILE<sp/>&quot;/dev/null&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"></highlight></codeline>
<codeline lineno="3762"><highlight class="comment">//#define<sp/>MBEDTLS_PSA_CRYPTO_PLATFORM_FILE<sp/>&quot;psa/crypto_platform_alt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"></highlight></codeline>
<codeline lineno="3787"><highlight class="comment">//#define<sp/>MBEDTLS_PSA_CRYPTO_STRUCT_FILE<sp/>&quot;psa/crypto_struct_alt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3788"><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="comment">/*<sp/>The<sp/>Doxygen<sp/>documentation<sp/>here<sp/>is<sp/>used<sp/>when<sp/>a<sp/>user<sp/>comments<sp/>out<sp/>a</highlight></codeline>
<codeline lineno="3803"><highlight class="comment"><sp/>*<sp/>setting<sp/>and<sp/>runs<sp/>doxygen<sp/>themselves.<sp/>On<sp/>the<sp/>other<sp/>hand,<sp/>when<sp/>we<sp/>typeset</highlight></codeline>
<codeline lineno="3804"><highlight class="comment"><sp/>*<sp/>the<sp/>full<sp/>documentation<sp/>including<sp/>disabled<sp/>settings,<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="3805"><highlight class="comment"><sp/>*<sp/>in<sp/>specific<sp/>modules&apos;<sp/>header<sp/>files<sp/>is<sp/>used<sp/>if<sp/>present.<sp/>When<sp/>editing<sp/>this</highlight></codeline>
<codeline lineno="3806"><highlight class="comment"><sp/>*<sp/>file,<sp/>make<sp/>sure<sp/>that<sp/>each<sp/>option<sp/>is<sp/>documented<sp/>in<sp/>exactly<sp/>one<sp/>place,</highlight></codeline>
<codeline lineno="3807"><highlight class="comment"><sp/>*<sp/>plus<sp/>optionally<sp/>a<sp/>same-line<sp/>Doxygen<sp/>comment<sp/>here<sp/>if<sp/>there<sp/>is<sp/>a<sp/>Doxygen</highlight></codeline>
<codeline lineno="3808"><highlight class="comment"><sp/>*<sp/>comment<sp/>in<sp/>the<sp/>specific<sp/>module.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3809"><highlight class="normal"></highlight></codeline>
<codeline lineno="3810"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MPI<sp/>/<sp/>BIGNUM<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_MPI_WINDOW_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>/**&lt;<sp/>Maximum<sp/>window<sp/>size<sp/>used.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3812"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_MPI_MAX_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024<sp/>/**&lt;<sp/>Maximum<sp/>number<sp/>of<sp/>bytes<sp/>for<sp/>usable<sp/>MPIs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3813"><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CTR_DRBG<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_CTR_DRBG_ENTROPY_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>48<sp/>/**&lt;<sp/>Amount<sp/>of<sp/>entropy<sp/>used<sp/>per<sp/>seed<sp/>by<sp/>default<sp/>(48<sp/>with<sp/>SHA-512,<sp/>32<sp/>with<sp/>SHA-256)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_CTR_DRBG_RESEED_INTERVAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10000<sp/>/**&lt;<sp/>Interval<sp/>before<sp/>reseed<sp/>is<sp/>performed<sp/>by<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_CTR_DRBG_MAX_INPUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>256<sp/>/**&lt;<sp/>Maximum<sp/>number<sp/>of<sp/>additional<sp/>input<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3818"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_CTR_DRBG_MAX_REQUEST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024<sp/>/**&lt;<sp/>Maximum<sp/>number<sp/>of<sp/>requested<sp/>bytes<sp/>per<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3819"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_CTR_DRBG_MAX_SEED_INPUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>384<sp/>/**&lt;<sp/>Maximum<sp/>size<sp/>of<sp/>(re)seed<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3820"><highlight class="normal"></highlight></codeline>
<codeline lineno="3821"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>HMAC_DRBG<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3822"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_HMAC_DRBG_RESEED_INTERVAL<sp/><sp/><sp/>10000<sp/>/**&lt;<sp/>Interval<sp/>before<sp/>reseed<sp/>is<sp/>performed<sp/>by<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3823"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_HMAC_DRBG_MAX_INPUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>256<sp/>/**&lt;<sp/>Maximum<sp/>number<sp/>of<sp/>additional<sp/>input<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_HMAC_DRBG_MAX_REQUEST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024<sp/>/**&lt;<sp/>Maximum<sp/>number<sp/>of<sp/>requested<sp/>bytes<sp/>per<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3825"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_HMAC_DRBG_MAX_SEED_INPUT<sp/><sp/><sp/><sp/><sp/><sp/>384<sp/>/**&lt;<sp/>Maximum<sp/>size<sp/>of<sp/>(re)seed<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3826"><highlight class="normal"></highlight></codeline>
<codeline lineno="3827"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ECP<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3828"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECP_WINDOW_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>/**&lt;<sp/>Maximum<sp/>window<sp/>size<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3829"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ECP_FIXED_POINT_OPTIM<sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>/**&lt;<sp/>Enable<sp/>fixed-point<sp/>speed-up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3830"><highlight class="normal"></highlight></codeline>
<codeline lineno="3831"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Entropy<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3832"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ENTROPY_MAX_SOURCES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20<sp/>/**&lt;<sp/>Maximum<sp/>number<sp/>of<sp/>sources<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3833"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ENTROPY_MAX_GATHER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128<sp/>/**&lt;<sp/>Maximum<sp/>amount<sp/>requested<sp/>from<sp/>entropy<sp/>sources<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3834"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_ENTROPY_MIN_HARDWARE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32<sp/>/**&lt;<sp/>Default<sp/>minimum<sp/>number<sp/>of<sp/>bytes<sp/>required<sp/>for<sp/>the<sp/>hardware<sp/>entropy<sp/>source<sp/>mbedtls_hardware_poll()<sp/>before<sp/>entropy<sp/>is<sp/>released<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3835"><highlight class="normal"></highlight></codeline>
<codeline lineno="3836"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Memory<sp/>buffer<sp/>allocator<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3837"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_MEMORY_ALIGN_MULTIPLE<sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>/**&lt;<sp/>Align<sp/>on<sp/>multiples<sp/>of<sp/>this<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3838"><highlight class="normal"></highlight></codeline>
<codeline lineno="3839"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Platform<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3840"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_STD_MEM_HDR<sp/><sp/><sp/>&lt;stdlib.h&gt;<sp/>/**&lt;<sp/>Header<sp/>to<sp/>include<sp/>if<sp/>MBEDTLS_PLATFORM_NO_STD_FUNCTIONS<sp/>is<sp/>defined.<sp/>Don&apos;t<sp/>define<sp/>if<sp/>no<sp/>header<sp/>is<sp/>needed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3841"><highlight class="normal"></highlight></codeline>
<codeline lineno="3853"><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_STD_CALLOC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal"></highlight></codeline>
<codeline lineno="3863"><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_STD_FREE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3864"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_STD_SETBUF<sp/><sp/><sp/><sp/><sp/><sp/>setbuf<sp/>/**&lt;<sp/>Default<sp/>setbuf<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3865"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_STD_EXIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>/**&lt;<sp/>Default<sp/>exit<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3866"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_STD_TIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>/**&lt;<sp/>Default<sp/>time<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined.<sp/>MBEDTLS_HAVE_TIME<sp/>must<sp/>be<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_STD_FPRINTF<sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>/**&lt;<sp/>Default<sp/>fprintf<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_STD_PRINTF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>/**&lt;<sp/>Default<sp/>printf<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Note:<sp/>your<sp/>snprintf<sp/>must<sp/>correctly<sp/>zero-terminate<sp/>the<sp/>buffer!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3870"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_STD_SNPRINTF<sp/><sp/><sp/><sp/>snprintf<sp/>/**&lt;<sp/>Default<sp/>snprintf<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3871"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_STD_EXIT_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>/**&lt;<sp/>Default<sp/>exit<sp/>value<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3872"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_STD_EXIT_FAILURE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>/**&lt;<sp/>Default<sp/>exit<sp/>value<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3873"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_STD_NV_SEED_READ<sp/><sp/><sp/>mbedtls_platform_std_nv_seed_read<sp/>/**&lt;<sp/>Default<sp/>nv_seed_read<sp/>function<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3874"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_STD_NV_SEED_WRITE<sp/><sp/>mbedtls_platform_std_nv_seed_write<sp/>/**&lt;<sp/>Default<sp/>nv_seed_write<sp/>function<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_STD_NV_SEED_FILE<sp/><sp/>&quot;seedfile&quot;<sp/>/**&lt;<sp/>Seed<sp/>file<sp/>to<sp/>read/write<sp/>with<sp/>default<sp/>implementation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3876"><highlight class="normal"></highlight></codeline>
<codeline lineno="3877"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>To<sp/>use<sp/>the<sp/>following<sp/>function<sp/>macros,<sp/>MBEDTLS_PLATFORM_C<sp/>must<sp/>be<sp/>enabled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3878"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MBEDTLS_PLATFORM_XXX_MACRO<sp/>and<sp/>MBEDTLS_PLATFORM_XXX_ALT<sp/>cannot<sp/>both<sp/>be<sp/>defined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_CALLOC_MACRO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calloc<sp/>/**&lt;<sp/>Default<sp/>allocator<sp/>macro<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined.<sp/>See<sp/>MBEDTLS_PLATFORM_STD_CALLOC<sp/>for<sp/>requirements.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3880"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_FREE_MACRO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>/**&lt;<sp/>Default<sp/>free<sp/>macro<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined.<sp/>See<sp/>MBEDTLS_PLATFORM_STD_FREE<sp/>for<sp/>requirements.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3881"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_EXIT_MACRO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>/**&lt;<sp/>Default<sp/>exit<sp/>macro<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_SETBUF_MACRO<sp/><sp/><sp/><sp/><sp/><sp/>setbuf<sp/>/**&lt;<sp/>Default<sp/>setbuf<sp/>macro<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3883"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_TIME_MACRO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>/**&lt;<sp/>Default<sp/>time<sp/>macro<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined.<sp/>MBEDTLS_HAVE_TIME<sp/>must<sp/>be<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3884"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_TIME_TYPE_MACRO<sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>/**&lt;<sp/>Default<sp/>time<sp/>macro<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined.<sp/>MBEDTLS_HAVE_TIME<sp/>must<sp/>be<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_FPRINTF_MACRO<sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>/**&lt;<sp/>Default<sp/>fprintf<sp/>macro<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3886"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_PRINTF_MACRO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>/**&lt;<sp/>Default<sp/>printf<sp/>macro<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3887"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Note:<sp/>your<sp/>snprintf<sp/>must<sp/>correctly<sp/>zero-terminate<sp/>the<sp/>buffer!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3888"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_SNPRINTF_MACRO<sp/><sp/><sp/><sp/>snprintf<sp/>/**&lt;<sp/>Default<sp/>snprintf<sp/>macro<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_VSNPRINTF_MACRO<sp/><sp/><sp/><sp/>vsnprintf<sp/>/**&lt;<sp/>Default<sp/>vsnprintf<sp/>macro<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3890"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_NV_SEED_READ_MACRO<sp/><sp/><sp/>mbedtls_platform_std_nv_seed_read<sp/>/**&lt;<sp/>Default<sp/>nv_seed_read<sp/>function<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3891"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_NV_SEED_WRITE_MACRO<sp/><sp/>mbedtls_platform_std_nv_seed_write<sp/>/**&lt;<sp/>Default<sp/>nv_seed_write<sp/>function<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PLATFORM_MS_TIME_TYPE_MACRO<sp/><sp/><sp/>int64_t<sp/>//#define<sp/>MBEDTLS_PLATFORM_MS_TIME_TYPE_MACRO<sp/><sp/><sp/>int64_t<sp/>/**&lt;<sp/>Default<sp/>milliseconds<sp/>time<sp/>macro<sp/>to<sp/>use,<sp/>can<sp/>be<sp/>undefined.<sp/>MBEDTLS_HAVE_TIME<sp/>must<sp/>be<sp/>enabled.<sp/>It<sp/>must<sp/>be<sp/>signed,<sp/>and<sp/>at<sp/>least<sp/>64<sp/>bits.<sp/>If<sp/>it<sp/>is<sp/>changed<sp/>from<sp/>the<sp/>default,<sp/>MBEDTLS_PRINTF_MS_TIME<sp/>must<sp/>be<sp/>updated<sp/>to<sp/>match.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3893"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PRINTF_MS_TIME<sp/><sp/><sp/><sp/>PRId64<sp/>/**&lt;<sp/>Default<sp/>fmt<sp/>for<sp/>printf.<sp/>That&apos;s<sp/>avoid<sp/>compiler<sp/>warning<sp/>if<sp/>mbedtls_ms_time_t<sp/>is<sp/>redefined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3894"><highlight class="normal"></highlight></codeline>
<codeline lineno="3908"><highlight class="comment">//#define<sp/>MBEDTLS_CHECK_RETURN<sp/>__attribute__((__warn_unused_result__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3909"><highlight class="normal"></highlight></codeline>
<codeline lineno="3916"><highlight class="comment">//#define<sp/>MBEDTLS_IGNORE_RETURN(<sp/>result<sp/>)<sp/>((void)<sp/>!(result))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal"></highlight></codeline>
<codeline lineno="3918"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PSA<sp/>options<sp/>*/</highlight></codeline>
<codeline lineno="3929"><highlight class="comment">//#define<sp/>MBEDTLS_PSA_HMAC_DRBG_MD_TYPE<sp/>MBEDTLS_MD_SHA256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3930"><highlight class="normal"></highlight></codeline>
<codeline lineno="3940"><highlight class="comment">//#define<sp/>MBEDTLS_PSA_KEY_SLOT_COUNT<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3941"><highlight class="normal"></highlight></codeline>
<codeline lineno="3942"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RSA<sp/>OPTIONS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3943"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_RSA_GEN_KEY_MIN_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024<sp/>/**&lt;<sp/><sp/>Minimum<sp/>RSA<sp/>key<sp/>size<sp/>that<sp/>can<sp/>be<sp/>generated<sp/>in<sp/>bits<sp/>(Minimum<sp/>possible<sp/>value<sp/>is<sp/>128<sp/>bits)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3944"><highlight class="normal"></highlight></codeline>
<codeline lineno="3945"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SSL<sp/>Cache<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3946"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_SSL_CACHE_DEFAULT_TIMEOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>86400<sp/>/**&lt;<sp/>1<sp/>day<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3947"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_SSL_CACHE_DEFAULT_MAX_ENTRIES<sp/><sp/><sp/><sp/><sp/><sp/>50<sp/>/**&lt;<sp/>Maximum<sp/>entries<sp/>in<sp/>cache<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3948"><highlight class="normal"></highlight></codeline>
<codeline lineno="3949"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SSL<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"></highlight></codeline>
<codeline lineno="3970"><highlight class="comment">//#define<sp/>MBEDTLS_SSL_IN_CONTENT_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16384</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"></highlight></codeline>
<codeline lineno="3977"><highlight class="comment">//#define<sp/>MBEDTLS_SSL_CID_IN_LEN_MAX<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal"></highlight></codeline>
<codeline lineno="3984"><highlight class="comment">//#define<sp/>MBEDTLS_SSL_CID_OUT_LEN_MAX<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3985"><highlight class="normal"></highlight></codeline>
<codeline lineno="4000"><highlight class="comment">//#define<sp/>MBEDTLS_SSL_CID_TLS1_3_PADDING_GRANULARITY<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4001"><highlight class="normal"></highlight></codeline>
<codeline lineno="4020"><highlight class="comment">//#define<sp/>MBEDTLS_SSL_OUT_CONTENT_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16384</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"></highlight></codeline>
<codeline lineno="4037"><highlight class="comment">//#define<sp/>MBEDTLS_SSL_DTLS_MAX_BUFFERING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32768</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4038"><highlight class="normal"></highlight></codeline>
<codeline lineno="4039"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_PSK_MAX_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32<sp/>/**&lt;<sp/>Max<sp/>size<sp/>of<sp/>TLS<sp/>pre-shared<sp/>keys,<sp/>in<sp/>bytes<sp/>(default<sp/>256<sp/>or<sp/>384<sp/>bits)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4040"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_SSL_COOKIE_TIMEOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>60<sp/>/**&lt;<sp/>Default<sp/>expiration<sp/>delay<sp/>of<sp/>DTLS<sp/>cookies,<sp/>in<sp/>seconds<sp/>if<sp/>HAVE_TIME,<sp/>or<sp/>in<sp/>number<sp/>of<sp/>cookies<sp/>issued<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4041"><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="comment">//#define<sp/>MBEDTLS_SSL_CIPHERSUITES<sp/>MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4055"><highlight class="normal"></highlight></codeline>
<codeline lineno="4071"><highlight class="comment">//#define<sp/>MBEDTLS_SSL_MAX_EARLY_DATA_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4072"><highlight class="normal"></highlight></codeline>
<codeline lineno="4091"><highlight class="comment">//#define<sp/>MBEDTLS_SSL_TLS1_3_TICKET_AGE_TOLERANCE<sp/>6000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4092"><highlight class="normal"></highlight></codeline>
<codeline lineno="4100"><highlight class="comment">//#define<sp/>MBEDTLS_SSL_TLS1_3_TICKET_NONCE_LENGTH<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4101"><highlight class="normal"></highlight></codeline>
<codeline lineno="4110"><highlight class="comment">//#define<sp/>MBEDTLS_SSL_TLS1_3_DEFAULT_NEW_SESSION_TICKETS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4111"><highlight class="normal"></highlight></codeline>
<codeline lineno="4112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>X509<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4113"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_X509_MAX_INTERMEDIATE_CA<sp/><sp/><sp/>8<sp/><sp/><sp/>/**&lt;<sp/>Maximum<sp/>number<sp/>of<sp/>intermediate<sp/>CAs<sp/>in<sp/>a<sp/>verification<sp/>chain.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4114"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MBEDTLS_X509_MAX_FILE_PATH_LEN<sp/><sp/><sp/><sp/><sp/>512<sp/>/**&lt;<sp/>Maximum<sp/>length<sp/>of<sp/>a<sp/>path/filename<sp/>string<sp/>in<sp/>bytes<sp/>including<sp/>the<sp/>null<sp/>terminator<sp/>character<sp/>(&apos;\0&apos;).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4115"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/mbedtls_config.h"/>
  </compounddef>
</doxygen>
