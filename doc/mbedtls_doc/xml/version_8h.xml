<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="version_8h" kind="file" language="C++">
    <compoundname>version.h</compoundname>
    <includes refid="mbedtls_2build__info_8h" local="yes">mbedtls/build_info.h</includes>
    <incdepgraph>
      <node id="11">
        <label>psa/crypto_adjust_auto_enabled.h</label>
        <link refid="crypto__adjust__auto__enabled_8h"/>
      </node>
      <node id="14">
        <label>mbedtls/config_adjust_x509.h</label>
        <link refid="config__adjust__x509_8h"/>
      </node>
      <node id="15">
        <label>mbedtls/config_adjust_ssl.h</label>
        <link refid="config__adjust__ssl_8h"/>
      </node>
      <node id="18">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>psa/crypto_adjust_config_key_pair_types.h</label>
        <link refid="crypto__adjust__config__key__pair__types_8h"/>
      </node>
      <node id="12">
        <label>mbedtls/config_adjust_psa_from_legacy.h</label>
        <link refid="config__adjust__psa__from__legacy_8h"/>
      </node>
      <node id="17">
        <label>limits.h</label>
      </node>
      <node id="2">
        <label>mbedtls/build_info.h</label>
        <link refid="mbedtls_2build__info_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>psa/crypto_config.h</label>
        <link refid="crypto__config_8h"/>
      </node>
      <node id="13">
        <label>mbedtls/config_adjust_legacy_crypto.h</label>
        <link refid="config__adjust__legacy__crypto_8h"/>
      </node>
      <node id="16">
        <label>mbedtls/check_config.h</label>
        <link refid="check__config_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>mbedtls/config_adjust_legacy_from_psa.h</label>
        <link refid="config__adjust__legacy__from__psa_8h"/>
      </node>
      <node id="3">
        <label>mbedtls/mbedtls_config.h</label>
        <link refid="mbedtls__config_8h"/>
      </node>
      <node id="5">
        <label>mbedtls/config_psa.h</label>
        <link refid="config__psa_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>version.h</label>
        <link refid="version_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>psa/crypto_adjust_config_synonyms.h</label>
        <link refid="crypto__adjust__config__synonyms_8h"/>
      </node>
      <node id="8">
        <label>mbedtls/config_adjust_psa_superset_legacy.h</label>
        <link refid="config__adjust__psa__superset__legacy_8h"/>
      </node>
      <node id="6">
        <label>psa/crypto_legacy.h</label>
        <link refid="crypto__legacy_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="version_8h_1a3d780043d5104f5e5863255dd55b3951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int mbedtls_version_get_number</definition>
        <argsstring>(void)</argsstring>
        <name>mbedtls_version_get_number</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the version number.</para>
<para><simplesect kind="return"><para>The constructed version number in the format MMNNPP00 (Major, Minor, Patch). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/version.h" line="32" column="14" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/version.h" declline="32" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="version_8h_1af4fd0e3ea2523313ea177477d6c93bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mbedtls_version_get_string</definition>
        <argsstring>(char *string)</argsstring>
        <name>mbedtls_version_get_string</name>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the version string (&quot;x.y.z&quot;).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string that will receive the value. (Should be at least 9 bytes in size) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/version.h" line="40" column="6" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/version.h" declline="40" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="version_8h_1a779eef1940de834a3d223a2339c2a9bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mbedtls_version_get_string_full</definition>
        <argsstring>(char *string)</argsstring>
        <name>mbedtls_version_get_string_full</name>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the full version string (&quot;Mbed TLS x.y.z&quot;).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string that will receive the value. The Mbed TLS version string will use 18 bytes AT MOST including a terminating null byte. (So the buffer should be at least 18 bytes to receive this version string). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/version.h" line="51" column="6" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/version.h" declline="51" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="version_8h_1afe471be7bb2bd441b0c693256ab298ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mbedtls_version_check_feature</definition>
        <argsstring>(const char *feature)</argsstring>
        <name>mbedtls_version_check_feature</name>
        <param>
          <type>const char *</type>
          <declname>feature</declname>
        </param>
        <briefdescription>
<para>Check if support for a feature was compiled into this Mbed TLS binary. This allows you to see at runtime if the library was for instance compiled with or without Multi-threading support. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>only checks against defines in the sections &quot;System
                 support&quot;, &quot;Mbed TLS modules&quot; and &quot;Mbed TLS feature
                 support&quot; in <ref refid="mbedtls__config_8h" kindref="compound">mbedtls_config.h</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feature</parametername>
</parameternamelist>
<parameterdescription>
<para>The string for the define to check (e.g. &quot;MBEDTLS_AES_C&quot;)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the feature is present, -1 if the feature is not present and -2 if support for feature checking as a whole was not compiled in. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/version.h" line="70" column="5" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/version.h" declline="70" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Run-time version information. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>The<sp/>Mbed<sp/>TLS<sp/>Contributors</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-License-Identifier:<sp/>Apache-2.0<sp/>OR<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>This<sp/>set<sp/>of<sp/>run-time<sp/>variables<sp/>can<sp/>be<sp/>used<sp/>to<sp/>determine<sp/>the<sp/>version<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>the<sp/>Mbed<sp/>TLS<sp/>library<sp/>used.<sp/>Compile-time<sp/>version<sp/>defines<sp/>for<sp/>the<sp/>same<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>found<sp/>in<sp/>build_info.h</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MBEDTLS_VERSION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_VERSION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mbedtls_2build__info_8h" kindref="compound">mbedtls/build_info.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_VERSION_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="version_8h_1a3d780043d5104f5e5863255dd55b3951" kindref="member">mbedtls_version_get_number</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="version_8h_1af4fd0e3ea2523313ea177477d6c93bdd" kindref="member">mbedtls_version_get_string</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="version_8h_1a779eef1940de834a3d223a2339c2a9bb" kindref="member">mbedtls_version_get_string_full</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="version_8h_1afe471be7bb2bd441b0c693256ab298ea" kindref="member">mbedtls_version_check_feature</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*feature);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MBEDTLS_VERSION_C<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>version.h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/version.h"/>
  </compounddef>
</doxygen>
