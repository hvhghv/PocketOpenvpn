<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="chachapoly_8h" kind="file" language="C++">
    <compoundname>chachapoly.h</compoundname>
    <includes refid="private__access_8h" local="yes">mbedtls/private_access.h</includes>
    <includes refid="mbedtls_2build__info_8h" local="yes">mbedtls/build_info.h</includes>
    <includes refid="poly1305_8h" local="yes">mbedtls/poly1305.h</includes>
    <includes refid="chacha20_8h" local="yes">mbedtls/chacha20.h</includes>
    <includedby refid="crypto__builtin__composites_8h" local="yes">crypto_builtin_composites.h</includedby>
    <incdepgraph>
      <node id="12">
        <label>psa/crypto_adjust_auto_enabled.h</label>
        <link refid="crypto__adjust__auto__enabled_8h"/>
      </node>
      <node id="15">
        <label>mbedtls/config_adjust_x509.h</label>
        <link refid="config__adjust__x509_8h"/>
      </node>
      <node id="16">
        <label>mbedtls/config_adjust_ssl.h</label>
        <link refid="config__adjust__ssl_8h"/>
      </node>
      <node id="19">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>psa/crypto_adjust_config_key_pair_types.h</label>
        <link refid="crypto__adjust__config__key__pair__types_8h"/>
      </node>
      <node id="13">
        <label>mbedtls/config_adjust_psa_from_legacy.h</label>
        <link refid="config__adjust__psa__from__legacy_8h"/>
      </node>
      <node id="21">
        <label>stddef.h</label>
      </node>
      <node id="18">
        <label>limits.h</label>
      </node>
      <node id="3">
        <label>mbedtls/build_info.h</label>
        <link refid="mbedtls_2build__info_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>psa/crypto_config.h</label>
        <link refid="crypto__config_8h"/>
      </node>
      <node id="14">
        <label>mbedtls/config_adjust_legacy_crypto.h</label>
        <link refid="config__adjust__legacy__crypto_8h"/>
      </node>
      <node id="17">
        <label>mbedtls/check_config.h</label>
        <link refid="check__config_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>mbedtls/config_adjust_legacy_from_psa.h</label>
        <link refid="config__adjust__legacy__from__psa_8h"/>
      </node>
      <node id="20">
        <label>mbedtls/poly1305.h</label>
        <link refid="poly1305_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>mbedtls/mbedtls_config.h</label>
        <link refid="mbedtls__config_8h"/>
      </node>
      <node id="6">
        <label>mbedtls/config_psa.h</label>
        <link refid="config__psa_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>psa/crypto_adjust_config_synonyms.h</label>
        <link refid="crypto__adjust__config__synonyms_8h"/>
      </node>
      <node id="2">
        <label>mbedtls/private_access.h</label>
        <link refid="private__access_8h"/>
      </node>
      <node id="1">
        <label>chachapoly.h</label>
        <link refid="chachapoly_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>mbedtls/config_adjust_psa_superset_legacy.h</label>
        <link refid="config__adjust__psa__superset__legacy_8h"/>
      </node>
      <node id="7">
        <label>psa/crypto_legacy.h</label>
        <link refid="crypto__legacy_8h"/>
      </node>
      <node id="22">
        <label>mbedtls/chacha20.h</label>
        <link refid="chacha20_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>crypto_builtin_composites.h</label>
        <link refid="crypto__builtin__composites_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ssl_ciphersuites.h</label>
        <link refid="ssl__ciphersuites_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="18">
        <label>x509_csr.h</label>
        <link refid="x509__csr_8h"/>
      </node>
      <node id="12">
        <label>ssl_cookie.h</label>
        <link refid="ssl__cookie_8h"/>
      </node>
      <node id="5">
        <label>crypto.h</label>
        <link refid="crypto_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>x509.h</label>
        <link refid="x509_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ssl.h</label>
        <link refid="ssl_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ssl_ticket.h</label>
        <link refid="ssl__ticket_8h"/>
      </node>
      <node id="4">
        <label>crypto_struct.h</label>
        <link refid="crypto__struct_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ssl_cache.h</label>
        <link refid="ssl__cache_8h"/>
      </node>
      <node id="6">
        <label>pk.h</label>
        <link refid="pk_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>pkcs7.h</label>
        <link refid="pkcs7_8h"/>
      </node>
      <node id="19">
        <label>oid.h</label>
        <link refid="oid_8h"/>
      </node>
      <node id="10">
        <label>net_sockets.h</label>
        <link refid="net__sockets_8h"/>
      </node>
      <node id="3">
        <label>crypto_driver_contexts_composites.h</label>
        <link refid="crypto__driver__contexts__composites_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>chachapoly.h</label>
        <link refid="chachapoly_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>x509_crl.h</label>
        <link refid="x509__crl_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>x509_crt.h</label>
        <link refid="x509__crt_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmbedtls__chachapoly__context" prot="public">mbedtls_chachapoly_context</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="chachapoly_8h_1aa10c236ef79947e0503321c6b91adf6a" prot="public" static="no">
        <name>MBEDTLS_ERR_CHACHAPOLY_BAD_STATE</name>
        <initializer>-0x0054</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The requested operation is not permitted in the current state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" line="30" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="chachapoly_8h_1adfcc39d21b02c91dc0429e094e891858" prot="public" static="no">
        <name>MBEDTLS_ERR_CHACHAPOLY_AUTH_FAILED</name>
        <initializer>-0x0056</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Authenticated decryption failed: data was not authentic. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" line="32" column="9" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="chachapoly_8h_1aed9737497f9096f67edc8eab036fb341" prot="public" static="no" strong="no">
        <type></type>
        <name>mbedtls_chachapoly_mode_t</name>
        <enumvalue id="chachapoly_8h_1aed9737497f9096f67edc8eab036fb341a6897b8bea1e6a49332c85de45070bb6b" prot="public">
          <name>MBEDTLS_CHACHAPOLY_ENCRYPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The mode value for performing encryption. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="chachapoly_8h_1aed9737497f9096f67edc8eab036fb341ace5d538bce78fdbc0b835578b752d01e" prot="public">
          <name>MBEDTLS_CHACHAPOLY_DECRYPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The mode value for performing decryption. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" line="38" column="14" bodyfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" bodystart="38" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="chachapoly_8h_1a23d48de13968c738dfe86f7a167a4d7d" prot="public" static="no">
        <type>struct <ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref></type>
        <definition>typedef struct mbedtls_chachapoly_context mbedtls_chachapoly_context</definition>
        <argsstring></argsstring>
        <name>mbedtls_chachapoly_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" line="56" column="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="chachapoly_8h_1a59a82c2427261ad0f163689f9ea327a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mbedtls_chachapoly_init</definition>
        <argsstring>(mbedtls_chachapoly_context *ctx)</argsstring>
        <name>mbedtls_chachapoly_init</name>
        <param>
          <type><ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>This function initializes the specified ChaCha20-Poly1305 context. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>             It must be the first API called before using
             the context. It must be followed by a call to
             \c mbedtls_chachapoly_setkey() before any operation can be
             done, and to \c mbedtls_chachapoly_free() once all
             operations with that context have been finished.

             In order to encrypt or decrypt full messages at once, for
             each message you should make a single call to
             \c mbedtls_chachapoly_crypt_and_tag() or
             \c mbedtls_chachapoly_auth_decrypt().

             In order to encrypt messages piecewise, for each
             message you should make a call to
             \c mbedtls_chachapoly_starts(), then 0 or more calls to
             \c mbedtls_chachapoly_update_aad(), then 0 or more calls to
             \c mbedtls_chachapoly_update(), then one call to
             \c mbedtls_chachapoly_finish().
</verbatim></para>
<para><simplesect kind="warning"><para>Decryption with the piecewise API is discouraged! Always use <computeroutput><ref refid="chachapoly_8h_1af11a55f37385ab4a4e4582eff8a2058d" kindref="member">mbedtls_chachapoly_auth_decrypt()</ref></computeroutput> when possible!</para>
</simplesect>
If however this is not possible because the data is too large to fit in memory, you need to:</para>
<para><itemizedlist>
<listitem><para>call <computeroutput><ref refid="chachapoly_8h_1a7c1132fa9aa7f156134f7e9c98710444" kindref="member">mbedtls_chachapoly_starts()</ref></computeroutput> and (if needed) <computeroutput><ref refid="chachapoly_8h_1af8250d5f2592c57df2e421880dee91e4" kindref="member">mbedtls_chachapoly_update_aad()</ref></computeroutput> as above,</para>
</listitem><listitem><para>call <computeroutput><ref refid="chachapoly_8h_1a99f1dbde96f78dd333a3bbfbf75a21be" kindref="member">mbedtls_chachapoly_update()</ref></computeroutput> multiple times and ensure its output (the plaintext) is NOT used in any other way than placing it in temporary storage at this point,</para>
</listitem><listitem><para>call <computeroutput><ref refid="chachapoly_8h_1a18b336e7a9d677f93318851c8da5b6b4" kindref="member">mbedtls_chachapoly_finish()</ref></computeroutput> to compute the authentication tag and compared it in constant time to the tag received with the ciphertext.</para>
</listitem></itemizedlist>
</para>
<para>If the tags are not equal, you must immediately discard all previous outputs of <computeroutput><ref refid="chachapoly_8h_1a99f1dbde96f78dd333a3bbfbf75a21be" kindref="member">mbedtls_chachapoly_update()</ref></computeroutput>, otherwise you can now safely use the plaintext.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The ChachaPoly context to initialize. Must not be <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" line="104" column="6" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" declline="104" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="chachapoly_8h_1ab52c8fd7aff8b52d6c6be92c19b28e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mbedtls_chachapoly_free</definition>
        <argsstring>(mbedtls_chachapoly_context *ctx)</argsstring>
        <name>mbedtls_chachapoly_free</name>
        <param>
          <type><ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>This function releases and clears the specified ChaCha20-Poly1305 context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The ChachaPoly context to clear. This may be <computeroutput>NULL</computeroutput>, in which case this function is a no-op. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" line="113" column="6" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" declline="113" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="chachapoly_8h_1a943948ae0a8020d327ee3cba84a26b0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mbedtls_chachapoly_setkey</definition>
        <argsstring>(mbedtls_chachapoly_context *ctx, const unsigned char key[32])</argsstring>
        <name>mbedtls_chachapoly_setkey</name>
        <param>
          <type><ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>key</declname>
          <array>[32]</array>
        </param>
        <briefdescription>
<para>This function sets the ChaCha20-Poly1305 symmetric encryption key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The ChaCha20-Poly1305 context to which the key should be bound. This must be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>256</computeroutput> Bit (<computeroutput>32</computeroutput> Bytes) key.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>0</computeroutput> on success. </para>
</simplesect>
<simplesect kind="return"><para>A negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" line="126" column="5" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" declline="126" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="chachapoly_8h_1a7c1132fa9aa7f156134f7e9c98710444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mbedtls_chachapoly_starts</definition>
        <argsstring>(mbedtls_chachapoly_context *ctx, const unsigned char nonce[12], mbedtls_chachapoly_mode_t mode)</argsstring>
        <name>mbedtls_chachapoly_starts</name>
        <param>
          <type><ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>nonce</declname>
          <array>[12]</array>
        </param>
        <param>
          <type><ref refid="chachapoly_8h_1aed9737497f9096f67edc8eab036fb341" kindref="member">mbedtls_chachapoly_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>This function starts a ChaCha20-Poly1305 encryption or decryption operation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>You must never use the same nonce twice with the same key. This would void any confidentiality and authenticity guarantees for the messages encrypted with the same nonce and key.</para>
</simplesect>
<simplesect kind="note"><para>If the context is being used for AAD only (no data to encrypt or decrypt) then <computeroutput>mode</computeroutput> can be set to any value.</para>
</simplesect>
<simplesect kind="warning"><para>Decryption with the piecewise API is discouraged, see the warning on <computeroutput><ref refid="chachapoly_8h_1a59a82c2427261ad0f163689f9ea327a3" kindref="member">mbedtls_chachapoly_init()</ref></computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The ChaCha20-Poly1305 context. This must be initialized and bound to a key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonce</parametername>
</parameternamelist>
<parameterdescription>
<para>The nonce/IV to use for the message. This must be a readable buffer of length <computeroutput>12</computeroutput> Bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation to perform: <ref refid="chachapoly_8h_1aed9737497f9096f67edc8eab036fb341a6897b8bea1e6a49332c85de45070bb6b" kindref="member">MBEDTLS_CHACHAPOLY_ENCRYPT</ref> or <ref refid="chachapoly_8h_1aed9737497f9096f67edc8eab036fb341ace5d538bce78fdbc0b835578b752d01e" kindref="member">MBEDTLS_CHACHAPOLY_DECRYPT</ref> (discouraged, see warning).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>0</computeroutput> on success. </para>
</simplesect>
<simplesect kind="return"><para>A negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" line="154" column="5" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" declline="154" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="chachapoly_8h_1af8250d5f2592c57df2e421880dee91e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mbedtls_chachapoly_update_aad</definition>
        <argsstring>(mbedtls_chachapoly_context *ctx, const unsigned char *aad, size_t aad_len)</argsstring>
        <name>mbedtls_chachapoly_update_aad</name>
        <param>
          <type><ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>aad_len</declname>
        </param>
        <briefdescription>
<para>This function feeds additional data to be authenticated into an ongoing ChaCha20-Poly1305 operation. </para>
        </briefdescription>
        <detaileddescription>
<para>The Additional Authenticated Data (AAD), also called Associated Data (AD) is only authenticated but not encrypted nor included in the encrypted output. It is usually transmitted separately from the ciphertext or computed locally by each party.</para>
<para><simplesect kind="note"><para>This function is called before data is encrypted/decrypted. I.e. call this function to process the AAD before calling <computeroutput><ref refid="chachapoly_8h_1a99f1dbde96f78dd333a3bbfbf75a21be" kindref="member">mbedtls_chachapoly_update()</ref></computeroutput>.</para>
</simplesect>
You may call this function multiple times to process an arbitrary amount of AAD. It is permitted to call this function 0 times, if no AAD is used.</para>
<para>This function cannot be called any more if data has been processed by <computeroutput><ref refid="chachapoly_8h_1a99f1dbde96f78dd333a3bbfbf75a21be" kindref="member">mbedtls_chachapoly_update()</ref></computeroutput>, or if the context has been finished.</para>
<para><simplesect kind="warning"><para>Decryption with the piecewise API is discouraged, see the warning on <computeroutput><ref refid="chachapoly_8h_1a59a82c2427261ad0f163689f9ea327a3" kindref="member">mbedtls_chachapoly_init()</ref></computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The ChaCha20-Poly1305 context. This must be initialized and bound to a key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad_len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length in Bytes of the AAD. The length has no restrictions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer containing the AAD. This pointer can be <computeroutput>NULL</computeroutput> if <computeroutput>aad_len == 0</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>0</computeroutput> on success. </para>
</simplesect>
<simplesect kind="return"><para><ref refid="poly1305_8h_1a2d22050169c640e1622e46202e70ab1d" kindref="member">MBEDTLS_ERR_POLY1305_BAD_INPUT_DATA</ref> if <computeroutput>ctx</computeroutput> or <computeroutput>aad</computeroutput> are NULL. </para>
</simplesect>
<simplesect kind="return"><para><ref refid="chachapoly_8h_1aa10c236ef79947e0503321c6b91adf6a" kindref="member">MBEDTLS_ERR_CHACHAPOLY_BAD_STATE</ref> if the operations has not been started or has been finished, or if the AAD has been finished. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" line="197" column="5" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" declline="197" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="chachapoly_8h_1a99f1dbde96f78dd333a3bbfbf75a21be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mbedtls_chachapoly_update</definition>
        <argsstring>(mbedtls_chachapoly_context *ctx, size_t len, const unsigned char *input, unsigned char *output)</argsstring>
        <name>mbedtls_chachapoly_update</name>
        <param>
          <type><ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Thus function feeds data to be encrypted or decrypted into an on-going ChaCha20-Poly1305 operation. </para>
        </briefdescription>
        <detaileddescription>
<para>The direction (encryption or decryption) depends on the mode that was given when calling <computeroutput><ref refid="chachapoly_8h_1a7c1132fa9aa7f156134f7e9c98710444" kindref="member">mbedtls_chachapoly_starts()</ref></computeroutput>.</para>
<para>You may call this function multiple times to process an arbitrary amount of data. It is permitted to call this function 0 times, if no data is to be encrypted or decrypted.</para>
<para><simplesect kind="warning"><para>Decryption with the piecewise API is discouraged, see the warning on <computeroutput><ref refid="chachapoly_8h_1a59a82c2427261ad0f163689f9ea327a3" kindref="member">mbedtls_chachapoly_init()</ref></computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The ChaCha20-Poly1305 context to use. This must be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length (in bytes) of the data to encrypt or decrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer containing the data to encrypt or decrypt. This pointer can be <computeroutput>NULL</computeroutput> if <computeroutput>len == 0</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to where the encrypted or decrypted data is written. This must be able to hold <computeroutput>len</computeroutput> bytes. This pointer can be <computeroutput>NULL</computeroutput> if <computeroutput>len == 0</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>0</computeroutput> on success. </para>
</simplesect>
<simplesect kind="return"><para><ref refid="chachapoly_8h_1aa10c236ef79947e0503321c6b91adf6a" kindref="member">MBEDTLS_ERR_CHACHAPOLY_BAD_STATE</ref> if the operation has not been started or has been finished. </para>
</simplesect>
<simplesect kind="return"><para>Another negative error code on other kinds of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" line="232" column="5" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" declline="232" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="chachapoly_8h_1a18b336e7a9d677f93318851c8da5b6b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mbedtls_chachapoly_finish</definition>
        <argsstring>(mbedtls_chachapoly_context *ctx, unsigned char mac[16])</argsstring>
        <name>mbedtls_chachapoly_finish</name>
        <param>
          <type><ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>mac</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
<para>This function finished the ChaCha20-Poly1305 operation and generates the MAC (authentication tag). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The ChaCha20-Poly1305 context to use. This must be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mac</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to where the 128-bit (16 bytes) MAC is written.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Decryption with the piecewise API is discouraged, see the warning on <computeroutput><ref refid="chachapoly_8h_1a59a82c2427261ad0f163689f9ea327a3" kindref="member">mbedtls_chachapoly_init()</ref></computeroutput>.</para>
</simplesect>
<simplesect kind="return"><para><computeroutput>0</computeroutput> on success. </para>
</simplesect>
<simplesect kind="return"><para><ref refid="chachapoly_8h_1aa10c236ef79947e0503321c6b91adf6a" kindref="member">MBEDTLS_ERR_CHACHAPOLY_BAD_STATE</ref> if the operation has not been started or has been finished. </para>
</simplesect>
<simplesect kind="return"><para>Another negative error code on other kinds of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" line="253" column="5" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" declline="253" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="chachapoly_8h_1ac03b8f4820e55094fb046610a5acbf7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mbedtls_chachapoly_encrypt_and_tag</definition>
        <argsstring>(mbedtls_chachapoly_context *ctx, size_t length, const unsigned char nonce[12], const unsigned char *aad, size_t aad_len, const unsigned char *input, unsigned char *output, unsigned char tag[16])</argsstring>
        <name>mbedtls_chachapoly_encrypt_and_tag</name>
        <param>
          <type><ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>nonce</declname>
          <array>[12]</array>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>aad_len</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>tag</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
<para>This function performs a complete ChaCha20-Poly1305 authenticated encryption with the previously-set key. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Before using this function, you must set the key with <computeroutput><ref refid="chachapoly_8h_1a943948ae0a8020d327ee3cba84a26b0f" kindref="member">mbedtls_chachapoly_setkey()</ref></computeroutput>.</para>
</simplesect>
<simplesect kind="warning"><para>You must never use the same nonce twice with the same key. This would void any confidentiality and authenticity guarantees for the messages encrypted with the same nonce and key.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The ChaCha20-Poly1305 context to use (holds the key). This must be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length (in bytes) of the data to encrypt or decrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonce</parametername>
</parameternamelist>
<parameterdescription>
<para>The 96-bit (12 bytes) nonce/IV to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer containing the additional authenticated data (AAD). This pointer can be <computeroutput>NULL</computeroutput> if <computeroutput>aad_len == 0</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad_len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length (in bytes) of the AAD data to process. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer containing the data to encrypt or decrypt. This pointer can be <computeroutput>NULL</computeroutput> if <computeroutput>ilen == 0</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to where the encrypted or decrypted data is written. This pointer can be <computeroutput>NULL</computeroutput> if <computeroutput>ilen == 0</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to where the computed 128-bit (16 bytes) MAC is written. This must not be <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>0</computeroutput> on success. </para>
</simplesect>
<simplesect kind="return"><para>A negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" line="285" column="5" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" declline="285" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="chachapoly_8h_1af11a55f37385ab4a4e4582eff8a2058d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mbedtls_chachapoly_auth_decrypt</definition>
        <argsstring>(mbedtls_chachapoly_context *ctx, size_t length, const unsigned char nonce[12], const unsigned char *aad, size_t aad_len, const unsigned char tag[16], const unsigned char *input, unsigned char *output)</argsstring>
        <name>mbedtls_chachapoly_auth_decrypt</name>
        <param>
          <type><ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>nonce</declname>
          <array>[12]</array>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>aad_len</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>tag</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>This function performs a complete ChaCha20-Poly1305 authenticated decryption with the previously-set key. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Before using this function, you must set the key with <computeroutput><ref refid="chachapoly_8h_1a943948ae0a8020d327ee3cba84a26b0f" kindref="member">mbedtls_chachapoly_setkey()</ref></computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The ChaCha20-Poly1305 context to use (holds the key). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length (in Bytes) of the data to decrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonce</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>96</computeroutput> Bit (<computeroutput>12</computeroutput> bytes) nonce/IV to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer containing the additional authenticated data (AAD). This pointer can be <computeroutput>NULL</computeroutput> if <computeroutput>aad_len == 0</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad_len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length (in bytes) of the AAD data to process. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer holding the authentication tag. This must be a readable buffer of length <computeroutput>16</computeroutput> Bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer containing the data to decrypt. This pointer can be <computeroutput>NULL</computeroutput> if <computeroutput>ilen == 0</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to where the decrypted data is written. This pointer can be <computeroutput>NULL</computeroutput> if <computeroutput>ilen == 0</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>0</computeroutput> on success. </para>
</simplesect>
<simplesect kind="return"><para><ref refid="chachapoly_8h_1adfcc39d21b02c91dc0429e094e891858" kindref="member">MBEDTLS_ERR_CHACHAPOLY_AUTH_FAILED</ref> if the data was not authentic. </para>
</simplesect>
<simplesect kind="return"><para>Another negative error code on other kinds of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" line="319" column="5" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" declline="319" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="chachapoly_8h_1acbb54e7c0006e91a3d37758ba1671fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mbedtls_chachapoly_self_test</definition>
        <argsstring>(int verbose)</argsstring>
        <name>mbedtls_chachapoly_self_test</name>
        <param>
          <type>int</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
<para>The ChaCha20-Poly1305 checkup routine. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>0</computeroutput> on success. </para>
</simplesect>
<simplesect kind="return"><para><computeroutput>1</computeroutput> on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" line="335" column="5" declfile="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h" declline="335" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains the AEAD-ChaCha20-Poly1305 definitions and functions. </para>
    </briefdescription>
    <detaileddescription>
<para>ChaCha20-Poly1305 is an algorithm for Authenticated Encryption with Associated Data (AEAD) that can be used to encrypt and authenticate data. It is based on ChaCha20 and Poly1305 by Daniel Bernstein and was standardized in RFC 7539.</para>
<para><simplesect kind="author"><para>Daniel King <ulink url="mailto:damaki.gh@gmail.com">damaki.gh@gmail.com</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="15"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>The<sp/>Mbed<sp/>TLS<sp/>Contributors</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-License-Identifier:<sp/>Apache-2.0<sp/>OR<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MBEDTLS_CHACHAPOLY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBEDTLS_CHACHAPOLY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="private__access_8h" kindref="compound">mbedtls/private_access.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mbedtls_2build__info_8h" kindref="compound">mbedtls/build_info.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>for<sp/>shared<sp/>error<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="poly1305_8h" kindref="compound">mbedtls/poly1305.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="chachapoly_8h_1aa10c236ef79947e0503321c6b91adf6a" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ERR_CHACHAPOLY_BAD_STATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0x0054</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="chachapoly_8h_1adfcc39d21b02c91dc0429e094e891858" refkind="member"><highlight class="preprocessor">#define<sp/>MBEDTLS_ERR_CHACHAPOLY_AUTH_FAILED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0x0056</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="chachapoly_8h_1aed9737497f9096f67edc8eab036fb341" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="39" refid="chachapoly_8h_1aed9737497f9096f67edc8eab036fb341a6897b8bea1e6a49332c85de45070bb6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="chachapoly_8h_1aed9737497f9096f67edc8eab036fb341a6897b8bea1e6a49332c85de45070bb6b" kindref="member">MBEDTLS_CHACHAPOLY_ENCRYPT</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="chachapoly_8h_1aed9737497f9096f67edc8eab036fb341ace5d538bce78fdbc0b835578b752d01e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="chachapoly_8h_1aed9737497f9096f67edc8eab036fb341ace5d538bce78fdbc0b835578b752d01e" kindref="member">MBEDTLS_CHACHAPOLY_DECRYPT</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="chachapoly_8h_1aed9737497f9096f67edc8eab036fb341" kindref="member">mbedtls_chachapoly_mode_t</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(MBEDTLS_CHACHAPOLY_ALT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chacha20_8h" kindref="compound">mbedtls/chacha20.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structmbedtls__chachapoly__context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref><sp/>{</highlight></codeline>
<codeline lineno="49" refid="structmbedtls__chachapoly__context_1a8d864314f02cab13131c3ae1078953eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmbedtls__chacha20__context" kindref="compound">mbedtls_chacha20_context</ref><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(chacha20_ctx);<sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="structmbedtls__chachapoly__context_1a41414cfd029628eb47c2d352270cb0ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmbedtls__poly1305__context" kindref="compound">mbedtls_poly1305_context</ref><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(poly1305_ctx);<sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="structmbedtls__chachapoly__context_1ae805c18c6ce1e8e301c180979a5c904a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(aad_len);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="structmbedtls__chachapoly__context_1a7815b03de1cd3ad07ec0f571945d5840" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(ciphertext_len);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="structmbedtls__chachapoly__context_1aab7f2d9dc064b9d31e67154520997e2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(state);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="structmbedtls__chachapoly__context_1a42c2d4ab35a97a983b18c055c0617f33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="chachapoly_8h_1aed9737497f9096f67edc8eab036fb341" kindref="member">mbedtls_chachapoly_mode_t</ref><sp/><ref refid="private__access_8h_1a86c7c64c999531bacf3c31619ff9de8d" kindref="member">MBEDTLS_PRIVATE</ref>(mode);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="chachapoly_8h_1a23d48de13968c738dfe86f7a167a4d7d" kindref="member">mbedtls_chachapoly_context</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!MBEDTLS_CHACHAPOLY_ALT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;chachapoly_alt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!MBEDTLS_CHACHAPOLY_ALT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="chachapoly_8h_1a59a82c2427261ad0f163689f9ea327a3" kindref="member">mbedtls_chachapoly_init</ref>(<ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="chachapoly_8h_1ab52c8fd7aff8b52d6c6be92c19b28e65" kindref="member">mbedtls_chachapoly_free</ref>(<ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="chachapoly_8h_1a943948ae0a8020d327ee3cba84a26b0f" kindref="member">mbedtls_chachapoly_setkey</ref>(<ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>key[32]);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="chachapoly_8h_1a7c1132fa9aa7f156134f7e9c98710444" kindref="member">mbedtls_chachapoly_starts</ref>(<ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nonce[12],</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="chachapoly_8h_1aed9737497f9096f67edc8eab036fb341" kindref="member">mbedtls_chachapoly_mode_t</ref><sp/>mode);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="chachapoly_8h_1af8250d5f2592c57df2e421880dee91e4" kindref="member">mbedtls_chachapoly_update_aad</ref>(<ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*aad,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aad_len);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="chachapoly_8h_1a99f1dbde96f78dd333a3bbfbf75a21be" kindref="member">mbedtls_chachapoly_update</ref>(<ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*input,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="chachapoly_8h_1a18b336e7a9d677f93318851c8da5b6b4" kindref="member">mbedtls_chachapoly_finish</ref>(<ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mac[16]);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="chachapoly_8h_1ac03b8f4820e55094fb046610a5acbf7b" kindref="member">mbedtls_chachapoly_encrypt_and_tag</ref>(<ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nonce[12],</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*aad,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aad_len,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*input,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tag[16]);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="chachapoly_8h_1af11a55f37385ab4a4e4582eff8a2058d" kindref="member">mbedtls_chachapoly_auth_decrypt</ref>(<ref refid="structmbedtls__chachapoly__context" kindref="compound">mbedtls_chachapoly_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nonce[12],</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*aad,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aad_len,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tag[16],</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*input,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MBEDTLS_SELF_TEST)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="chachapoly_8h_1acbb54e7c0006e91a3d37758ba1671fe8" kindref="member">mbedtls_chachapoly_self_test</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verbose);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MBEDTLS_SELF_TEST<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MBEDTLS_CHACHAPOLY_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/mnt/e/document/demo/v2/pocketvpn/mbedtls/include/mbedtls/chachapoly.h"/>
  </compounddef>
</doxygen>
